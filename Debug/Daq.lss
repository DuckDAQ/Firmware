
Daq.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000082fc  00400000  00400000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004082fc  004082fc  000182fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000bb8  20000000  00408304  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000031c  20000bb8  00408ebc  00020bb8  2**2
                  ALLOC
  4 .stack        00002004  20000ed4  004091d8  00020bb8  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020bb8  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020be1  2**0
                  CONTENTS, READONLY
  7 .debug_info   000207be  00000000  00000000  00020c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004414  00000000  00000000  000413f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000d08  00000000  00000000  0004580c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  000170e4  00000000  00000000  00046514  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000138e1  00000000  00000000  0005d5f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00052dfa  00000000  00000000  00070ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00007a54  00000000  00000000  000c3cd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000cc8  00000000  00000000  000cb727  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002a90  00000000  00000000  000cc3f0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2e 00 20 41 32 40 00 3f 32 40 00 3f 32 40 00     ... A2@.?2@.?2@.
  400010:	3f 32 40 00 3f 32 40 00 3f 32 40 00 00 00 00 00     ?2@.?2@.?2@.....
	...
  40002c:	3f 32 40 00 3f 32 40 00 00 00 00 00 3f 32 40 00     ?2@.?2@.....?2@.
  40003c:	3f 32 40 00 3f 32 40 00 3f 32 40 00 3f 32 40 00     ?2@.?2@.?2@.?2@.
  40004c:	3f 32 40 00 3f 32 40 00 3f 32 40 00 3f 32 40 00     ?2@.?2@.?2@.?2@.
  40005c:	3f 32 40 00 3f 32 40 00 3f 32 40 00 3f 32 40 00     ?2@.?2@.?2@.?2@.
  40006c:	59 0f 40 00 6d 0f 40 00 3f 32 40 00 3f 32 40 00     Y.@.m.@.?2@.?2@.
  40007c:	3f 32 40 00 3f 32 40 00 3f 32 40 00 3f 32 40 00     ?2@.?2@.?2@.?2@.
  40008c:	3f 32 40 00 3f 32 40 00 3f 32 40 00 3f 32 40 00     ?2@.?2@.?2@.?2@.
  40009c:	01 2a 40 00 3f 32 40 00 3f 32 40 00 3f 32 40 00     .*@.?2@.?2@.?2@.
  4000ac:	3f 32 40 00 3f 32 40 00 e5 28 40 00 3f 32 40 00     ?2@.?2@..(@.?2@.
  4000bc:	3f 32 40 00 3f 32 40 00 3f 32 40 00 3d 15 40 00     ?2@.?2@.?2@.=.@.
  4000cc:	3f 32 40 00                                         ?2@.

004000d0 <__do_global_dtors_aux>:
  4000d0:	b510      	push	{r4, lr}
  4000d2:	4c05      	ldr	r4, [pc, #20]	; (4000e8 <__do_global_dtors_aux+0x18>)
  4000d4:	7823      	ldrb	r3, [r4, #0]
  4000d6:	b933      	cbnz	r3, 4000e6 <__do_global_dtors_aux+0x16>
  4000d8:	4b04      	ldr	r3, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x1c>)
  4000da:	b113      	cbz	r3, 4000e2 <__do_global_dtors_aux+0x12>
  4000dc:	4804      	ldr	r0, [pc, #16]	; (4000f0 <__do_global_dtors_aux+0x20>)
  4000de:	f3af 8000 	nop.w
  4000e2:	2301      	movs	r3, #1
  4000e4:	7023      	strb	r3, [r4, #0]
  4000e6:	bd10      	pop	{r4, pc}
  4000e8:	20000bb8 	.word	0x20000bb8
  4000ec:	00000000 	.word	0x00000000
  4000f0:	00408304 	.word	0x00408304

004000f4 <frame_dummy>:
  4000f4:	4b0c      	ldr	r3, [pc, #48]	; (400128 <frame_dummy+0x34>)
  4000f6:	b143      	cbz	r3, 40010a <frame_dummy+0x16>
  4000f8:	480c      	ldr	r0, [pc, #48]	; (40012c <frame_dummy+0x38>)
  4000fa:	b510      	push	{r4, lr}
  4000fc:	490c      	ldr	r1, [pc, #48]	; (400130 <frame_dummy+0x3c>)
  4000fe:	f3af 8000 	nop.w
  400102:	480c      	ldr	r0, [pc, #48]	; (400134 <frame_dummy+0x40>)
  400104:	6803      	ldr	r3, [r0, #0]
  400106:	b923      	cbnz	r3, 400112 <frame_dummy+0x1e>
  400108:	bd10      	pop	{r4, pc}
  40010a:	480a      	ldr	r0, [pc, #40]	; (400134 <frame_dummy+0x40>)
  40010c:	6803      	ldr	r3, [r0, #0]
  40010e:	b933      	cbnz	r3, 40011e <frame_dummy+0x2a>
  400110:	4770      	bx	lr
  400112:	4b09      	ldr	r3, [pc, #36]	; (400138 <frame_dummy+0x44>)
  400114:	2b00      	cmp	r3, #0
  400116:	d0f7      	beq.n	400108 <frame_dummy+0x14>
  400118:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40011c:	4718      	bx	r3
  40011e:	4b06      	ldr	r3, [pc, #24]	; (400138 <frame_dummy+0x44>)
  400120:	2b00      	cmp	r3, #0
  400122:	d0f5      	beq.n	400110 <frame_dummy+0x1c>
  400124:	4718      	bx	r3
  400126:	bf00      	nop
  400128:	00000000 	.word	0x00000000
  40012c:	00408304 	.word	0x00408304
  400130:	20000bbc 	.word	0x20000bbc
  400134:	00408304 	.word	0x00408304
  400138:	00000000 	.word	0x00000000

0040013c <udi_cdc_comm_enable>:
	uint8_t port;
	uint8_t iface_comm_num;

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
	udi_cdc_nb_comm_enabled = 0;
  40013c:	490e      	ldr	r1, [pc, #56]	; (400178 <udi_cdc_comm_enable+0x3c>)
  40013e:	2300      	movs	r3, #0
  400140:	700b      	strb	r3, [r1, #0]
	}
	port = udi_cdc_nb_comm_enabled;
#endif

	// Initialize control signal management
	udi_cdc_state[port] = CPU_TO_LE16(0);
  400142:	4a0e      	ldr	r2, [pc, #56]	; (40017c <udi_cdc_comm_enable+0x40>)
  400144:	8013      	strh	r3, [r2, #0]

	uid_cdc_state_msg[port].header.bmRequestType =
  400146:	4a0e      	ldr	r2, [pc, #56]	; (400180 <udi_cdc_comm_enable+0x44>)
  400148:	20a1      	movs	r0, #161	; 0xa1
  40014a:	7010      	strb	r0, [r2, #0]
			USB_REQ_DIR_IN | USB_REQ_TYPE_CLASS |
			USB_REQ_RECIP_INTERFACE;
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
  40014c:	2020      	movs	r0, #32
  40014e:	7050      	strb	r0, [r2, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
  400150:	8053      	strh	r3, [r2, #2]
	default:
		iface_comm_num = UDI_CDC_COMM_IFACE_NUMBER_0;
		break;
	}

	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
  400152:	8093      	strh	r3, [r2, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
  400154:	2002      	movs	r0, #2
  400156:	80d0      	strh	r0, [r2, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
  400158:	8113      	strh	r3, [r2, #8]

	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
  40015a:	4a0a      	ldr	r2, [pc, #40]	; (400184 <udi_cdc_comm_enable+0x48>)
  40015c:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
  400160:	6010      	str	r0, [r2, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
  400162:	7113      	strb	r3, [r2, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
  400164:	7153      	strb	r3, [r2, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
  400166:	2308      	movs	r3, #8
  400168:	7193      	strb	r3, [r2, #6]
	// to initialize memories or indicate that interface is enabled
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
	if (!UDI_CDC_ENABLE_EXT(port)) {
		return false;
	}
	udi_cdc_nb_comm_enabled++;
  40016a:	780b      	ldrb	r3, [r1, #0]
  40016c:	3301      	adds	r3, #1
  40016e:	b2db      	uxtb	r3, r3
  400170:	700b      	strb	r3, [r1, #0]
	return true;
}
  400172:	2001      	movs	r0, #1
  400174:	4770      	bx	lr
  400176:	bf00      	nop
  400178:	20000bdf 	.word	0x20000bdf
  40017c:	20000c74 	.word	0x20000c74
  400180:	20000d0c 	.word	0x20000d0c
  400184:	20000bd8 	.word	0x20000bd8

00400188 <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
  400188:	4a02      	ldr	r2, [pc, #8]	; (400194 <udi_cdc_comm_disable+0xc>)
  40018a:	7813      	ldrb	r3, [r2, #0]
  40018c:	3b01      	subs	r3, #1
  40018e:	b2db      	uxtb	r3, r3
  400190:	7013      	strb	r3, [r2, #0]
  400192:	4770      	bx	lr
  400194:	20000bdf 	.word	0x20000bdf

00400198 <udi_cdc_data_disable>:
void udi_cdc_data_disable(void)
{
	uint8_t port;

	Assert(udi_cdc_nb_data_enabled != 0);
	udi_cdc_nb_data_enabled--;
  400198:	4a04      	ldr	r2, [pc, #16]	; (4001ac <udi_cdc_data_disable+0x14>)
  40019a:	7813      	ldrb	r3, [r2, #0]
  40019c:	3b01      	subs	r3, #1
  40019e:	b2db      	uxtb	r3, r3
  4001a0:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
  4001a2:	7813      	ldrb	r3, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
	udi_cdc_data_running = false;
  4001a4:	2200      	movs	r2, #0
  4001a6:	4b02      	ldr	r3, [pc, #8]	; (4001b0 <udi_cdc_data_disable+0x18>)
  4001a8:	701a      	strb	r2, [r3, #0]
  4001aa:	4770      	bx	lr
  4001ac:	20000be0 	.word	0x20000be0
  4001b0:	20000bd6 	.word	0x20000bd6

004001b4 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
  4001b4:	2000      	movs	r0, #0
  4001b6:	4770      	bx	lr

004001b8 <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr

004001bc <udi_cdc_comm_setup>:
	if (Udd_setup_is_in()) {
  4001bc:	4b1d      	ldr	r3, [pc, #116]	; (400234 <udi_cdc_comm_setup+0x78>)
  4001be:	781b      	ldrb	r3, [r3, #0]
  4001c0:	f013 0f80 	tst.w	r3, #128	; 0x80
  4001c4:	d105      	bne.n	4001d2 <udi_cdc_comm_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  4001c6:	f003 0360 	and.w	r3, r3, #96	; 0x60
  4001ca:	2b20      	cmp	r3, #32
  4001cc:	d018      	beq.n	400200 <udi_cdc_comm_setup+0x44>
	return false;  // request Not supported
  4001ce:	2000      	movs	r0, #0
  4001d0:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  4001d2:	f003 0360 	and.w	r3, r3, #96	; 0x60
  4001d6:	2b20      	cmp	r3, #32
  4001d8:	d001      	beq.n	4001de <udi_cdc_comm_setup+0x22>
	return false;  // request Not supported
  4001da:	2000      	movs	r0, #0
  4001dc:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  4001de:	4b15      	ldr	r3, [pc, #84]	; (400234 <udi_cdc_comm_setup+0x78>)
  4001e0:	785b      	ldrb	r3, [r3, #1]
  4001e2:	2b21      	cmp	r3, #33	; 0x21
  4001e4:	d124      	bne.n	400230 <udi_cdc_comm_setup+0x74>
						udd_g_ctrlreq.req.wLength)
  4001e6:	4b13      	ldr	r3, [pc, #76]	; (400234 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
  4001e8:	88db      	ldrh	r3, [r3, #6]
  4001ea:	2b07      	cmp	r3, #7
  4001ec:	d001      	beq.n	4001f2 <udi_cdc_comm_setup+0x36>
					return false; // Error for USB host
  4001ee:	2000      	movs	r0, #0
  4001f0:	4770      	bx	lr
				udd_g_ctrlreq.payload =
  4001f2:	4b10      	ldr	r3, [pc, #64]	; (400234 <udi_cdc_comm_setup+0x78>)
  4001f4:	4a10      	ldr	r2, [pc, #64]	; (400238 <udi_cdc_comm_setup+0x7c>)
  4001f6:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  4001f8:	2207      	movs	r2, #7
  4001fa:	819a      	strh	r2, [r3, #12]
				return true;
  4001fc:	2001      	movs	r0, #1
  4001fe:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  400200:	4b0c      	ldr	r3, [pc, #48]	; (400234 <udi_cdc_comm_setup+0x78>)
  400202:	7858      	ldrb	r0, [r3, #1]
  400204:	2820      	cmp	r0, #32
  400206:	d004      	beq.n	400212 <udi_cdc_comm_setup+0x56>
	return false;  // request Not supported
  400208:	2822      	cmp	r0, #34	; 0x22
  40020a:	bf14      	ite	ne
  40020c:	2000      	movne	r0, #0
  40020e:	2001      	moveq	r0, #1
  400210:	4770      	bx	lr
						udd_g_ctrlreq.req.wLength)
  400212:	4b08      	ldr	r3, [pc, #32]	; (400234 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
  400214:	88db      	ldrh	r3, [r3, #6]
  400216:	2b07      	cmp	r3, #7
  400218:	d001      	beq.n	40021e <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
  40021a:	2000      	movs	r0, #0
}
  40021c:	4770      	bx	lr
				udd_g_ctrlreq.callback =
  40021e:	4b05      	ldr	r3, [pc, #20]	; (400234 <udi_cdc_comm_setup+0x78>)
  400220:	4a06      	ldr	r2, [pc, #24]	; (40023c <udi_cdc_comm_setup+0x80>)
  400222:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
  400224:	4a04      	ldr	r2, [pc, #16]	; (400238 <udi_cdc_comm_setup+0x7c>)
  400226:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  400228:	2207      	movs	r2, #7
  40022a:	819a      	strh	r2, [r3, #12]
				return true;
  40022c:	2001      	movs	r0, #1
  40022e:	4770      	bx	lr
	return false;  // request Not supported
  400230:	2000      	movs	r0, #0
  400232:	4770      	bx	lr
  400234:	20000e50 	.word	0x20000e50
  400238:	20000bd8 	.word	0x20000bd8
  40023c:	00400241 	.word	0x00400241

00400240 <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
  400240:	4770      	bx	lr
	...

00400244 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
  400244:	4b44      	ldr	r3, [pc, #272]	; (400358 <udi_cdc_tx_send+0x114>)
  400246:	781b      	ldrb	r3, [r3, #0]
  400248:	b103      	cbz	r3, 40024c <udi_cdc_tx_send+0x8>
  40024a:	4770      	bx	lr
{
  40024c:	b570      	push	{r4, r5, r6, lr}
  40024e:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
  400250:	4b42      	ldr	r3, [pc, #264]	; (40035c <udi_cdc_tx_send+0x118>)
  400252:	4798      	blx	r3
  400254:	2800      	cmp	r0, #0
  400256:	d041      	beq.n	4002dc <udi_cdc_tx_send+0x98>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
  400258:	4b41      	ldr	r3, [pc, #260]	; (400360 <udi_cdc_tx_send+0x11c>)
  40025a:	881c      	ldrh	r4, [r3, #0]
  40025c:	4b41      	ldr	r3, [pc, #260]	; (400364 <udi_cdc_tx_send+0x120>)
  40025e:	4798      	blx	r3
  400260:	4284      	cmp	r4, r0
  400262:	d076      	beq.n	400352 <udi_cdc_tx_send+0x10e>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400264:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400268:	fab3 f383 	clz	r3, r3
  40026c:	095b      	lsrs	r3, r3, #5
  40026e:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  400270:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  400272:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400276:	2200      	movs	r2, #0
  400278:	4b3b      	ldr	r3, [pc, #236]	; (400368 <udi_cdc_tx_send+0x124>)
  40027a:	701a      	strb	r2, [r3, #0]
	return flags;
  40027c:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
  40027e:	4b3b      	ldr	r3, [pc, #236]	; (40036c <udi_cdc_tx_send+0x128>)
  400280:	781c      	ldrb	r4, [r3, #0]
  400282:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
  400284:	4b3a      	ldr	r3, [pc, #232]	; (400370 <udi_cdc_tx_send+0x12c>)
  400286:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  40028a:	2b00      	cmp	r3, #0
  40028c:	d02d      	beq.n	4002ea <udi_cdc_tx_send+0xa6>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
  40028e:	2200      	movs	r2, #0
  400290:	4b38      	ldr	r3, [pc, #224]	; (400374 <udi_cdc_tx_send+0x130>)
  400292:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
  400294:	4b38      	ldr	r3, [pc, #224]	; (400378 <udi_cdc_tx_send+0x134>)
  400296:	781b      	ldrb	r3, [r3, #0]
  400298:	2b00      	cmp	r3, #0
  40029a:	d142      	bne.n	400322 <udi_cdc_tx_send+0xde>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  40029c:	fab4 f384 	clz	r3, r4
  4002a0:	095b      	lsrs	r3, r3, #5
  4002a2:	4a32      	ldr	r2, [pc, #200]	; (40036c <udi_cdc_tx_send+0x128>)
  4002a4:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
  4002a6:	2201      	movs	r2, #1
  4002a8:	4b2b      	ldr	r3, [pc, #172]	; (400358 <udi_cdc_tx_send+0x114>)
  4002aa:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4002ac:	b125      	cbz	r5, 4002b8 <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
  4002ae:	4b2e      	ldr	r3, [pc, #184]	; (400368 <udi_cdc_tx_send+0x124>)
  4002b0:	701a      	strb	r2, [r3, #0]
  4002b2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4002b6:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
  4002b8:	4626      	mov	r6, r4
  4002ba:	4b2d      	ldr	r3, [pc, #180]	; (400370 <udi_cdc_tx_send+0x12c>)
  4002bc:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  4002c0:	2b40      	cmp	r3, #64	; 0x40
  4002c2:	bf14      	ite	ne
  4002c4:	2501      	movne	r5, #1
  4002c6:	2500      	moveq	r5, #0
	if (b_short_packet) {
  4002c8:	d034      	beq.n	400334 <udi_cdc_tx_send+0xf0>
		if (udd_is_high_speed()) {
  4002ca:	4b24      	ldr	r3, [pc, #144]	; (40035c <udi_cdc_tx_send+0x118>)
  4002cc:	4798      	blx	r3
  4002ce:	2800      	cmp	r0, #0
  4002d0:	d02b      	beq.n	40032a <udi_cdc_tx_send+0xe6>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
  4002d2:	4b24      	ldr	r3, [pc, #144]	; (400364 <udi_cdc_tx_send+0x120>)
  4002d4:	4798      	blx	r3
  4002d6:	4b22      	ldr	r3, [pc, #136]	; (400360 <udi_cdc_tx_send+0x11c>)
  4002d8:	8018      	strh	r0, [r3, #0]
  4002da:	e02e      	b.n	40033a <udi_cdc_tx_send+0xf6>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
  4002dc:	4b20      	ldr	r3, [pc, #128]	; (400360 <udi_cdc_tx_send+0x11c>)
  4002de:	881c      	ldrh	r4, [r3, #0]
  4002e0:	4b26      	ldr	r3, [pc, #152]	; (40037c <udi_cdc_tx_send+0x138>)
  4002e2:	4798      	blx	r3
  4002e4:	4284      	cmp	r4, r0
  4002e6:	d1bd      	bne.n	400264 <udi_cdc_tx_send+0x20>
  4002e8:	e033      	b.n	400352 <udi_cdc_tx_send+0x10e>
		sof_zlp_counter++;
  4002ea:	4a22      	ldr	r2, [pc, #136]	; (400374 <udi_cdc_tx_send+0x130>)
  4002ec:	8813      	ldrh	r3, [r2, #0]
  4002ee:	3301      	adds	r3, #1
  4002f0:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
  4002f2:	4b1a      	ldr	r3, [pc, #104]	; (40035c <udi_cdc_tx_send+0x118>)
  4002f4:	4798      	blx	r3
  4002f6:	b918      	cbnz	r0, 400300 <udi_cdc_tx_send+0xbc>
  4002f8:	4b1e      	ldr	r3, [pc, #120]	; (400374 <udi_cdc_tx_send+0x130>)
  4002fa:	881b      	ldrh	r3, [r3, #0]
  4002fc:	2b63      	cmp	r3, #99	; 0x63
  4002fe:	d908      	bls.n	400312 <udi_cdc_tx_send+0xce>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
  400300:	4b16      	ldr	r3, [pc, #88]	; (40035c <udi_cdc_tx_send+0x118>)
  400302:	4798      	blx	r3
  400304:	2800      	cmp	r0, #0
  400306:	d0c2      	beq.n	40028e <udi_cdc_tx_send+0x4a>
  400308:	4b1a      	ldr	r3, [pc, #104]	; (400374 <udi_cdc_tx_send+0x130>)
  40030a:	881b      	ldrh	r3, [r3, #0]
  40030c:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
  400310:	d2bd      	bcs.n	40028e <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
  400312:	b1f5      	cbz	r5, 400352 <udi_cdc_tx_send+0x10e>
		cpu_irq_enable();
  400314:	2201      	movs	r2, #1
  400316:	4b14      	ldr	r3, [pc, #80]	; (400368 <udi_cdc_tx_send+0x124>)
  400318:	701a      	strb	r2, [r3, #0]
  40031a:	f3bf 8f5f 	dmb	sy
  40031e:	b662      	cpsie	i
  400320:	e017      	b.n	400352 <udi_cdc_tx_send+0x10e>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
  400322:	fab4 f484 	clz	r4, r4
  400326:	0964      	lsrs	r4, r4, #5
  400328:	e7bd      	b.n	4002a6 <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
  40032a:	4b14      	ldr	r3, [pc, #80]	; (40037c <udi_cdc_tx_send+0x138>)
  40032c:	4798      	blx	r3
  40032e:	4b0c      	ldr	r3, [pc, #48]	; (400360 <udi_cdc_tx_send+0x11c>)
  400330:	8018      	strh	r0, [r3, #0]
  400332:	e002      	b.n	40033a <udi_cdc_tx_send+0xf6>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
  400334:	2200      	movs	r2, #0
  400336:	4b0a      	ldr	r3, [pc, #40]	; (400360 <udi_cdc_tx_send+0x11c>)
  400338:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
  40033a:	4b0d      	ldr	r3, [pc, #52]	; (400370 <udi_cdc_tx_send+0x12c>)
	udd_ep_run( ep,
  40033c:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
  400340:	4a0f      	ldr	r2, [pc, #60]	; (400380 <udi_cdc_tx_send+0x13c>)
  400342:	9200      	str	r2, [sp, #0]
  400344:	4a0f      	ldr	r2, [pc, #60]	; (400384 <udi_cdc_tx_send+0x140>)
  400346:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  40034a:	4629      	mov	r1, r5
  40034c:	2081      	movs	r0, #129	; 0x81
  40034e:	4c0e      	ldr	r4, [pc, #56]	; (400388 <udi_cdc_tx_send+0x144>)
  400350:	47a0      	blx	r4
			udi_cdc_data_sent);
}
  400352:	b004      	add	sp, #16
  400354:	bd70      	pop	{r4, r5, r6, pc}
  400356:	bf00      	nop
  400358:	20000d08 	.word	0x20000d08
  40035c:	00401f9d 	.word	0x00401f9d
  400360:	20000d04 	.word	0x20000d04
  400364:	00402009 	.word	0x00402009
  400368:	20000200 	.word	0x20000200
  40036c:	20000d00 	.word	0x20000d00
  400370:	20000cfc 	.word	0x20000cfc
  400374:	20000bd4 	.word	0x20000bd4
  400378:	20000c78 	.word	0x20000c78
  40037c:	00401ff9 	.word	0x00401ff9
  400380:	0040038d 	.word	0x0040038d
  400384:	20000c7c 	.word	0x20000c7c
  400388:	00402361 	.word	0x00402361

0040038c <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
  40038c:	b100      	cbz	r0, 400390 <udi_cdc_data_sent+0x4>
  40038e:	4770      	bx	lr
{
  400390:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
  400392:	4b07      	ldr	r3, [pc, #28]	; (4003b0 <udi_cdc_data_sent+0x24>)
  400394:	781b      	ldrb	r3, [r3, #0]
  400396:	fab3 f383 	clz	r3, r3
  40039a:	095b      	lsrs	r3, r3, #5
  40039c:	4a05      	ldr	r2, [pc, #20]	; (4003b4 <udi_cdc_data_sent+0x28>)
  40039e:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
  4003a2:	4b05      	ldr	r3, [pc, #20]	; (4003b8 <udi_cdc_data_sent+0x2c>)
  4003a4:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  4003a6:	4b05      	ldr	r3, [pc, #20]	; (4003bc <udi_cdc_data_sent+0x30>)
  4003a8:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
  4003aa:	4b05      	ldr	r3, [pc, #20]	; (4003c0 <udi_cdc_data_sent+0x34>)
  4003ac:	4798      	blx	r3
  4003ae:	bd08      	pop	{r3, pc}
  4003b0:	20000d00 	.word	0x20000d00
  4003b4:	20000cfc 	.word	0x20000cfc
  4003b8:	20000c78 	.word	0x20000c78
  4003bc:	20000d08 	.word	0x20000d08
  4003c0:	00400245 	.word	0x00400245

004003c4 <udi_cdc_data_sof_notify>:
{
  4003c4:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
  4003c6:	2000      	movs	r0, #0
  4003c8:	4b01      	ldr	r3, [pc, #4]	; (4003d0 <udi_cdc_data_sof_notify+0xc>)
  4003ca:	4798      	blx	r3
  4003cc:	bd08      	pop	{r3, pc}
  4003ce:	bf00      	nop
  4003d0:	00400245 	.word	0x00400245

004003d4 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
  4003d4:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4003d6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4003da:	fab3 f383 	clz	r3, r3
  4003de:	095b      	lsrs	r3, r3, #5
  4003e0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4003e2:	b672      	cpsid	i
  4003e4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4003e8:	2200      	movs	r2, #0
  4003ea:	4b0b      	ldr	r3, [pc, #44]	; (400418 <udi_cdc_multi_get_nb_received_data+0x44>)
  4003ec:	701a      	strb	r2, [r3, #0]
	return flags;
  4003ee:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
  4003f0:	4b0a      	ldr	r3, [pc, #40]	; (40041c <udi_cdc_multi_get_nb_received_data+0x48>)
  4003f2:	8818      	ldrh	r0, [r3, #0]
  4003f4:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
  4003f6:	4a0a      	ldr	r2, [pc, #40]	; (400420 <udi_cdc_multi_get_nb_received_data+0x4c>)
  4003f8:	7812      	ldrb	r2, [r2, #0]
  4003fa:	b2d2      	uxtb	r2, r2
  4003fc:	4809      	ldr	r0, [pc, #36]	; (400424 <udi_cdc_multi_get_nb_received_data+0x50>)
  4003fe:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
  400402:	b280      	uxth	r0, r0
  400404:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
  400406:	b129      	cbz	r1, 400414 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
  400408:	2201      	movs	r2, #1
  40040a:	4b03      	ldr	r3, [pc, #12]	; (400418 <udi_cdc_multi_get_nb_received_data+0x44>)
  40040c:	701a      	strb	r2, [r3, #0]
  40040e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400412:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
  400414:	b002      	add	sp, #8
  400416:	4770      	bx	lr
  400418:	20000200 	.word	0x20000200
  40041c:	20000c6c 	.word	0x20000c6c
  400420:	20000c68 	.word	0x20000c68
  400424:	20000c64 	.word	0x20000c64

00400428 <udi_cdc_get_nb_received_data>:

iram_size_t udi_cdc_get_nb_received_data(void)
{
  400428:	b508      	push	{r3, lr}
	return udi_cdc_multi_get_nb_received_data(0);
  40042a:	2000      	movs	r0, #0
  40042c:	4b01      	ldr	r3, [pc, #4]	; (400434 <udi_cdc_get_nb_received_data+0xc>)
  40042e:	4798      	blx	r3
}
  400430:	bd08      	pop	{r3, pc}
  400432:	bf00      	nop
  400434:	004003d5 	.word	0x004003d5

00400438 <udi_cdc_multi_is_rx_ready>:

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
  400438:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
  40043a:	4b03      	ldr	r3, [pc, #12]	; (400448 <udi_cdc_multi_is_rx_ready+0x10>)
  40043c:	4798      	blx	r3
}
  40043e:	3000      	adds	r0, #0
  400440:	bf18      	it	ne
  400442:	2001      	movne	r0, #1
  400444:	bd08      	pop	{r3, pc}
  400446:	bf00      	nop
  400448:	004003d5 	.word	0x004003d5

0040044c <udi_cdc_rx_start>:
{
  40044c:	b510      	push	{r4, lr}
  40044e:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400450:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400454:	fab3 f383 	clz	r3, r3
  400458:	095b      	lsrs	r3, r3, #5
  40045a:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  40045c:	b672      	cpsid	i
  40045e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400462:	2200      	movs	r2, #0
  400464:	4b1e      	ldr	r3, [pc, #120]	; (4004e0 <udi_cdc_rx_start+0x94>)
  400466:	701a      	strb	r2, [r3, #0]
	return flags;
  400468:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
  40046a:	4a1e      	ldr	r2, [pc, #120]	; (4004e4 <udi_cdc_rx_start+0x98>)
  40046c:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
  40046e:	4a1e      	ldr	r2, [pc, #120]	; (4004e8 <udi_cdc_rx_start+0x9c>)
  400470:	7812      	ldrb	r2, [r2, #0]
  400472:	b94a      	cbnz	r2, 400488 <udi_cdc_rx_start+0x3c>
  400474:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
  400476:	4a1d      	ldr	r2, [pc, #116]	; (4004ec <udi_cdc_rx_start+0xa0>)
  400478:	8811      	ldrh	r1, [r2, #0]
  40047a:	b289      	uxth	r1, r1
  40047c:	4a1c      	ldr	r2, [pc, #112]	; (4004f0 <udi_cdc_rx_start+0xa4>)
  40047e:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
  400482:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
  400484:	4291      	cmp	r1, r2
  400486:	d209      	bcs.n	40049c <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
  400488:	b33b      	cbz	r3, 4004da <udi_cdc_rx_start+0x8e>
		cpu_irq_enable();
  40048a:	2201      	movs	r2, #1
  40048c:	4b14      	ldr	r3, [pc, #80]	; (4004e0 <udi_cdc_rx_start+0x94>)
  40048e:	701a      	strb	r2, [r3, #0]
  400490:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400494:	b662      	cpsie	i
		return false;
  400496:	2000      	movs	r0, #0
}
  400498:	b004      	add	sp, #16
  40049a:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
  40049c:	2100      	movs	r1, #0
  40049e:	4a13      	ldr	r2, [pc, #76]	; (4004ec <udi_cdc_rx_start+0xa0>)
  4004a0:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  4004a2:	fab4 f284 	clz	r2, r4
  4004a6:	0952      	lsrs	r2, r2, #5
  4004a8:	490e      	ldr	r1, [pc, #56]	; (4004e4 <udi_cdc_rx_start+0x98>)
  4004aa:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
  4004ac:	2101      	movs	r1, #1
  4004ae:	4a0e      	ldr	r2, [pc, #56]	; (4004e8 <udi_cdc_rx_start+0x9c>)
  4004b0:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  4004b2:	b123      	cbz	r3, 4004be <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
  4004b4:	4b0a      	ldr	r3, [pc, #40]	; (4004e0 <udi_cdc_rx_start+0x94>)
  4004b6:	7019      	strb	r1, [r3, #0]
  4004b8:	f3bf 8f5f 	dmb	sy
  4004bc:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
  4004be:	2000      	movs	r0, #0
  4004c0:	4b0c      	ldr	r3, [pc, #48]	; (4004f4 <udi_cdc_rx_start+0xa8>)
  4004c2:	4798      	blx	r3
	return udd_ep_run(ep,
  4004c4:	4b0c      	ldr	r3, [pc, #48]	; (4004f8 <udi_cdc_rx_start+0xac>)
  4004c6:	9300      	str	r3, [sp, #0]
  4004c8:	2340      	movs	r3, #64	; 0x40
  4004ca:	4a0c      	ldr	r2, [pc, #48]	; (4004fc <udi_cdc_rx_start+0xb0>)
  4004cc:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  4004d0:	2101      	movs	r1, #1
  4004d2:	2002      	movs	r0, #2
  4004d4:	4c0a      	ldr	r4, [pc, #40]	; (400500 <udi_cdc_rx_start+0xb4>)
  4004d6:	47a0      	blx	r4
  4004d8:	e7de      	b.n	400498 <udi_cdc_rx_start+0x4c>
		return false;
  4004da:	2000      	movs	r0, #0
  4004dc:	e7dc      	b.n	400498 <udi_cdc_rx_start+0x4c>
  4004de:	bf00      	nop
  4004e0:	20000200 	.word	0x20000200
  4004e4:	20000c68 	.word	0x20000c68
  4004e8:	20000c70 	.word	0x20000c70
  4004ec:	20000c6c 	.word	0x20000c6c
  4004f0:	20000c64 	.word	0x20000c64
  4004f4:	00400439 	.word	0x00400439
  4004f8:	00400599 	.word	0x00400599
  4004fc:	20000be4 	.word	0x20000be4
  400500:	00402361 	.word	0x00402361

00400504 <udi_cdc_data_enable>:
{
  400504:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
  400506:	2400      	movs	r4, #0
  400508:	4b16      	ldr	r3, [pc, #88]	; (400564 <udi_cdc_data_enable+0x60>)
  40050a:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  40050c:	4b16      	ldr	r3, [pc, #88]	; (400568 <udi_cdc_data_enable+0x64>)
  40050e:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
  400510:	4b16      	ldr	r3, [pc, #88]	; (40056c <udi_cdc_data_enable+0x68>)
  400512:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
  400514:	4b16      	ldr	r3, [pc, #88]	; (400570 <udi_cdc_data_enable+0x6c>)
  400516:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
  400518:	4b16      	ldr	r3, [pc, #88]	; (400574 <udi_cdc_data_enable+0x70>)
  40051a:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
  40051c:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
  40051e:	4b16      	ldr	r3, [pc, #88]	; (400578 <udi_cdc_data_enable+0x74>)
  400520:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
  400522:	4620      	mov	r0, r4
  400524:	4b15      	ldr	r3, [pc, #84]	; (40057c <udi_cdc_data_enable+0x78>)
  400526:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
  400528:	4b15      	ldr	r3, [pc, #84]	; (400580 <udi_cdc_data_enable+0x7c>)
  40052a:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
  40052c:	4b15      	ldr	r3, [pc, #84]	; (400584 <udi_cdc_data_enable+0x80>)
  40052e:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
  400530:	4b15      	ldr	r3, [pc, #84]	; (400588 <udi_cdc_data_enable+0x84>)
  400532:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
  400534:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
  400536:	4b15      	ldr	r3, [pc, #84]	; (40058c <udi_cdc_data_enable+0x88>)
  400538:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
  40053a:	4620      	mov	r0, r4
  40053c:	4b14      	ldr	r3, [pc, #80]	; (400590 <udi_cdc_data_enable+0x8c>)
  40053e:	4798      	blx	r3
  400540:	4601      	mov	r1, r0
  400542:	b140      	cbz	r0, 400556 <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
  400544:	4a07      	ldr	r2, [pc, #28]	; (400564 <udi_cdc_data_enable+0x60>)
  400546:	7813      	ldrb	r3, [r2, #0]
  400548:	3301      	adds	r3, #1
  40054a:	b2db      	uxtb	r3, r3
  40054c:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
  40054e:	7813      	ldrb	r3, [r2, #0]
  400550:	b2db      	uxtb	r3, r3
  400552:	2b01      	cmp	r3, #1
  400554:	d001      	beq.n	40055a <udi_cdc_data_enable+0x56>
}
  400556:	4608      	mov	r0, r1
  400558:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
  40055a:	2201      	movs	r2, #1
  40055c:	4b0d      	ldr	r3, [pc, #52]	; (400594 <udi_cdc_data_enable+0x90>)
  40055e:	701a      	strb	r2, [r3, #0]
  400560:	e7f9      	b.n	400556 <udi_cdc_data_enable+0x52>
  400562:	bf00      	nop
  400564:	20000be0 	.word	0x20000be0
  400568:	20000d08 	.word	0x20000d08
  40056c:	20000c78 	.word	0x20000c78
  400570:	20000d00 	.word	0x20000d00
  400574:	20000cfc 	.word	0x20000cfc
  400578:	20000d04 	.word	0x20000d04
  40057c:	00400245 	.word	0x00400245
  400580:	20000c70 	.word	0x20000c70
  400584:	20000c68 	.word	0x20000c68
  400588:	20000c64 	.word	0x20000c64
  40058c:	20000c6c 	.word	0x20000c6c
  400590:	0040044d 	.word	0x0040044d
  400594:	20000bd6 	.word	0x20000bd6

00400598 <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
  400598:	b9e8      	cbnz	r0, 4005d6 <udi_cdc_data_received+0x3e>
{
  40059a:	b510      	push	{r4, lr}
  40059c:	b082      	sub	sp, #8
  40059e:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
  4005a0:	4b0d      	ldr	r3, [pc, #52]	; (4005d8 <udi_cdc_data_received+0x40>)
  4005a2:	781c      	ldrb	r4, [r3, #0]
  4005a4:	fab4 f484 	clz	r4, r4
  4005a8:	0964      	lsrs	r4, r4, #5
	if (!n) {
  4005aa:	b151      	cbz	r1, 4005c2 <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
  4005ac:	b289      	uxth	r1, r1
  4005ae:	4b0b      	ldr	r3, [pc, #44]	; (4005dc <udi_cdc_data_received+0x44>)
  4005b0:	f823 1014 	strh.w	r1, [r3, r4, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
  4005b4:	2000      	movs	r0, #0
  4005b6:	4b0a      	ldr	r3, [pc, #40]	; (4005e0 <udi_cdc_data_received+0x48>)
  4005b8:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
  4005ba:	4b0a      	ldr	r3, [pc, #40]	; (4005e4 <udi_cdc_data_received+0x4c>)
  4005bc:	4798      	blx	r3
}
  4005be:	b002      	add	sp, #8
  4005c0:	bd10      	pop	{r4, pc}
		udd_ep_run( ep,
  4005c2:	4b09      	ldr	r3, [pc, #36]	; (4005e8 <udi_cdc_data_received+0x50>)
  4005c4:	9300      	str	r3, [sp, #0]
  4005c6:	2340      	movs	r3, #64	; 0x40
  4005c8:	4a08      	ldr	r2, [pc, #32]	; (4005ec <udi_cdc_data_received+0x54>)
  4005ca:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  4005ce:	2101      	movs	r1, #1
  4005d0:	4c07      	ldr	r4, [pc, #28]	; (4005f0 <udi_cdc_data_received+0x58>)
  4005d2:	47a0      	blx	r4
		return;
  4005d4:	e7f3      	b.n	4005be <udi_cdc_data_received+0x26>
  4005d6:	4770      	bx	lr
  4005d8:	20000c68 	.word	0x20000c68
  4005dc:	20000c64 	.word	0x20000c64
  4005e0:	20000c70 	.word	0x20000c70
  4005e4:	0040044d 	.word	0x0040044d
  4005e8:	00400599 	.word	0x00400599
  4005ec:	20000be4 	.word	0x20000be4
  4005f0:	00402361 	.word	0x00402361

004005f4 <udi_cdc_multi_getc>:
{
	return udi_cdc_multi_is_rx_ready(0);
}

int udi_cdc_multi_getc(uint8_t port)
{
  4005f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4005f8:	b082      	sub	sp, #8

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
  4005fa:	4b25      	ldr	r3, [pc, #148]	; (400690 <udi_cdc_multi_getc+0x9c>)
  4005fc:	f893 8006 	ldrb.w	r8, [r3, #6]
  400600:	f1b8 0f09 	cmp.w	r8, #9
  400604:	bf14      	ite	ne
  400606:	f04f 0800 	movne.w	r8, #0
  40060a:	f04f 0801 	moveq.w	r8, #1
	int rx_data = 0;
  40060e:	f04f 0a00 	mov.w	sl, #0
	cpu_irq_disable();
  400612:	4c20      	ldr	r4, [pc, #128]	; (400694 <udi_cdc_multi_getc+0xa0>)
  400614:	46d1      	mov	r9, sl
  400616:	4657      	mov	r7, sl

udi_cdc_getc_process_one_byte:
	// Check available data
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
  400618:	4d1f      	ldr	r5, [pc, #124]	; (400698 <udi_cdc_multi_getc+0xa4>)
	buf_sel = udi_cdc_rx_buf_sel[port];
  40061a:	4e20      	ldr	r6, [pc, #128]	; (40069c <udi_cdc_multi_getc+0xa8>)
  40061c:	e004      	b.n	400628 <udi_cdc_multi_getc+0x34>
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
	cpu_irq_restore(flags);
	while (again) {
  40061e:	428b      	cmp	r3, r1
  400620:	d323      	bcc.n	40066a <udi_cdc_multi_getc+0x76>
		if (!udi_cdc_data_running) {
  400622:	4b1f      	ldr	r3, [pc, #124]	; (4006a0 <udi_cdc_multi_getc+0xac>)
  400624:	781b      	ldrb	r3, [r3, #0]
  400626:	b1d3      	cbz	r3, 40065e <udi_cdc_multi_getc+0x6a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400628:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40062c:	fab3 f383 	clz	r3, r3
  400630:	095b      	lsrs	r3, r3, #5
  400632:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400634:	b672      	cpsid	i
  400636:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40063a:	7027      	strb	r7, [r4, #0]
	return flags;
  40063c:	9801      	ldr	r0, [sp, #4]
	pos = udi_cdc_rx_pos[port];
  40063e:	882b      	ldrh	r3, [r5, #0]
  400640:	b29b      	uxth	r3, r3
	buf_sel = udi_cdc_rx_buf_sel[port];
  400642:	7832      	ldrb	r2, [r6, #0]
  400644:	b2d2      	uxtb	r2, r2
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
  400646:	4917      	ldr	r1, [pc, #92]	; (4006a4 <udi_cdc_multi_getc+0xb0>)
  400648:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
  40064c:	b289      	uxth	r1, r1
	if (cpu_irq_is_enabled_flags(flags))
  40064e:	2800      	cmp	r0, #0
  400650:	d0e5      	beq.n	40061e <udi_cdc_multi_getc+0x2a>
		cpu_irq_enable();
  400652:	2001      	movs	r0, #1
  400654:	7020      	strb	r0, [r4, #0]
  400656:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40065a:	b662      	cpsie	i
  40065c:	e7df      	b.n	40061e <udi_cdc_multi_getc+0x2a>
			return 0;
  40065e:	f04f 0a00 	mov.w	sl, #0
		b_databit_9 = false;
		rx_data = rx_data << 8;
		goto udi_cdc_getc_process_one_byte;
	}
	return rx_data;
}
  400662:	4650      	mov	r0, sl
  400664:	b002      	add	sp, #8
  400666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	rx_data |= udi_cdc_rx_buf[port][buf_sel][pos];
  40066a:	490f      	ldr	r1, [pc, #60]	; (4006a8 <udi_cdc_multi_getc+0xb4>)
  40066c:	eb01 1282 	add.w	r2, r1, r2, lsl #6
  400670:	5cd2      	ldrb	r2, [r2, r3]
  400672:	ea42 0a0a 	orr.w	sl, r2, sl
	udi_cdc_rx_pos[port] = pos+1;
  400676:	3301      	adds	r3, #1
  400678:	b29b      	uxth	r3, r3
  40067a:	802b      	strh	r3, [r5, #0]
	udi_cdc_rx_start(port);
  40067c:	4648      	mov	r0, r9
  40067e:	4b0b      	ldr	r3, [pc, #44]	; (4006ac <udi_cdc_multi_getc+0xb8>)
  400680:	4798      	blx	r3
	if (b_databit_9) {
  400682:	f1b8 0f00 	cmp.w	r8, #0
  400686:	d0ec      	beq.n	400662 <udi_cdc_multi_getc+0x6e>
		rx_data = rx_data << 8;
  400688:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
		b_databit_9 = false;
  40068c:	46c8      	mov	r8, r9
		goto udi_cdc_getc_process_one_byte;
  40068e:	e7cb      	b.n	400628 <udi_cdc_multi_getc+0x34>
  400690:	20000bd8 	.word	0x20000bd8
  400694:	20000200 	.word	0x20000200
  400698:	20000c6c 	.word	0x20000c6c
  40069c:	20000c68 	.word	0x20000c68
  4006a0:	20000bd6 	.word	0x20000bd6
  4006a4:	20000c64 	.word	0x20000c64
  4006a8:	20000be4 	.word	0x20000be4
  4006ac:	0040044d 	.word	0x0040044d

004006b0 <udi_cdc_getc>:

int udi_cdc_getc(void)
{
  4006b0:	b508      	push	{r3, lr}
	return udi_cdc_multi_getc(0);
  4006b2:	2000      	movs	r0, #0
  4006b4:	4b01      	ldr	r3, [pc, #4]	; (4006bc <udi_cdc_getc+0xc>)
  4006b6:	4798      	blx	r3
}
  4006b8:	bd08      	pop	{r3, pc}
  4006ba:	bf00      	nop
  4006bc:	004005f5 	.word	0x004005f5

004006c0 <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
  4006c0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4006c2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4006c6:	fab3 f383 	clz	r3, r3
  4006ca:	095b      	lsrs	r3, r3, #5
  4006cc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4006ce:	b672      	cpsid	i
  4006d0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4006d4:	2200      	movs	r2, #0
  4006d6:	4b14      	ldr	r3, [pc, #80]	; (400728 <udi_cdc_multi_get_free_tx_buffer+0x68>)
  4006d8:	701a      	strb	r2, [r3, #0]
	return flags;
  4006da:	9a01      	ldr	r2, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
  4006dc:	4b13      	ldr	r3, [pc, #76]	; (40072c <udi_cdc_multi_get_free_tx_buffer+0x6c>)
  4006de:	781b      	ldrb	r3, [r3, #0]
  4006e0:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
  4006e2:	4913      	ldr	r1, [pc, #76]	; (400730 <udi_cdc_multi_get_free_tx_buffer+0x70>)
  4006e4:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
  4006e8:	2840      	cmp	r0, #64	; 0x40
  4006ea:	d00a      	beq.n	400702 <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
  4006ec:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
	if (cpu_irq_is_enabled_flags(flags))
  4006f0:	b12a      	cbz	r2, 4006fe <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
  4006f2:	2201      	movs	r2, #1
  4006f4:	4b0c      	ldr	r3, [pc, #48]	; (400728 <udi_cdc_multi_get_free_tx_buffer+0x68>)
  4006f6:	701a      	strb	r2, [r3, #0]
  4006f8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4006fc:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
  4006fe:	b002      	add	sp, #8
  400700:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
  400702:	490c      	ldr	r1, [pc, #48]	; (400734 <udi_cdc_multi_get_free_tx_buffer+0x74>)
  400704:	7809      	ldrb	r1, [r1, #0]
  400706:	2900      	cmp	r1, #0
  400708:	d1f0      	bne.n	4006ec <udi_cdc_multi_get_free_tx_buffer+0x2c>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
  40070a:	490b      	ldr	r1, [pc, #44]	; (400738 <udi_cdc_multi_get_free_tx_buffer+0x78>)
  40070c:	7809      	ldrb	r1, [r1, #0]
  40070e:	2900      	cmp	r1, #0
  400710:	d1ec      	bne.n	4006ec <udi_cdc_multi_get_free_tx_buffer+0x2c>
			udi_cdc_tx_both_buf_to_send[port] = true;
  400712:	2001      	movs	r0, #1
  400714:	4908      	ldr	r1, [pc, #32]	; (400738 <udi_cdc_multi_get_free_tx_buffer+0x78>)
  400716:	7008      	strb	r0, [r1, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
  400718:	fab3 f383 	clz	r3, r3
  40071c:	095b      	lsrs	r3, r3, #5
  40071e:	4903      	ldr	r1, [pc, #12]	; (40072c <udi_cdc_multi_get_free_tx_buffer+0x6c>)
  400720:	700b      	strb	r3, [r1, #0]
			buf_sel_nb = 0;
  400722:	2000      	movs	r0, #0
  400724:	e7e2      	b.n	4006ec <udi_cdc_multi_get_free_tx_buffer+0x2c>
  400726:	bf00      	nop
  400728:	20000200 	.word	0x20000200
  40072c:	20000d00 	.word	0x20000d00
  400730:	20000cfc 	.word	0x20000cfc
  400734:	20000d08 	.word	0x20000d08
  400738:	20000c78 	.word	0x20000c78

0040073c <udi_cdc_multi_is_tx_ready>:
{
	return udi_cdc_multi_get_free_tx_buffer(0);
}

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
  40073c:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
  40073e:	4b03      	ldr	r3, [pc, #12]	; (40074c <udi_cdc_multi_is_tx_ready+0x10>)
  400740:	4798      	blx	r3
}
  400742:	3000      	adds	r0, #0
  400744:	bf18      	it	ne
  400746:	2001      	movne	r0, #1
  400748:	bd08      	pop	{r3, pc}
  40074a:	bf00      	nop
  40074c:	004006c1 	.word	0x004006c1

00400750 <udi_cdc_multi_write_buf>:
{
	return udi_cdc_multi_putc(0, value);
}

iram_size_t udi_cdc_multi_write_buf(uint8_t port, const void* buf, iram_size_t size)
{
  400750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400754:	b083      	sub	sp, #12
  400756:	4617      	mov	r7, r2

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (9 == udi_cdc_line_coding[port].bDataBits) {
  400758:	4b22      	ldr	r3, [pc, #136]	; (4007e4 <udi_cdc_multi_write_buf+0x94>)
  40075a:	799b      	ldrb	r3, [r3, #6]
  40075c:	2b09      	cmp	r3, #9
		size *=2;
  40075e:	bf08      	it	eq
  400760:	0057      	lsleq	r7, r2, #1
{
  400762:	4688      	mov	r8, r1
	}

udi_cdc_write_buf_loop_wait:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
  400764:	f8df a094 	ldr.w	sl, [pc, #148]	; 4007fc <udi_cdc_multi_write_buf+0xac>
  400768:	e030      	b.n	4007cc <udi_cdc_multi_write_buf+0x7c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40076a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40076e:	fab3 f383 	clz	r3, r3
  400772:	095b      	lsrs	r3, r3, #5
  400774:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400776:	b672      	cpsid	i
  400778:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40077c:	2300      	movs	r3, #0
  40077e:	4a1a      	ldr	r2, [pc, #104]	; (4007e8 <udi_cdc_multi_write_buf+0x98>)
  400780:	7013      	strb	r3, [r2, #0]
	return flags;
  400782:	f8dd b004 	ldr.w	fp, [sp, #4]
		goto udi_cdc_write_buf_loop_wait;
	}

	// Write values
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
  400786:	4b19      	ldr	r3, [pc, #100]	; (4007ec <udi_cdc_multi_write_buf+0x9c>)
  400788:	781d      	ldrb	r5, [r3, #0]
  40078a:	b2ed      	uxtb	r5, r5
	buf_nb = udi_cdc_tx_buf_nb[port][buf_sel];
  40078c:	f8df 9070 	ldr.w	r9, [pc, #112]	; 400800 <udi_cdc_multi_write_buf+0xb0>
  400790:	f839 6015 	ldrh.w	r6, [r9, r5, lsl #1]
	copy_nb = UDI_CDC_TX_BUFFERS - buf_nb;
  400794:	f1c6 0440 	rsb	r4, r6, #64	; 0x40
  400798:	42bc      	cmp	r4, r7
  40079a:	bf28      	it	cs
  40079c:	463c      	movcs	r4, r7
	if (copy_nb > size) {
		copy_nb = size;
	}
	memcpy(&udi_cdc_tx_buf[port][buf_sel][buf_nb], ptr_buf, copy_nb);
  40079e:	eb06 1385 	add.w	r3, r6, r5, lsl #6
  4007a2:	4622      	mov	r2, r4
  4007a4:	4641      	mov	r1, r8
  4007a6:	4812      	ldr	r0, [pc, #72]	; (4007f0 <udi_cdc_multi_write_buf+0xa0>)
  4007a8:	4418      	add	r0, r3
  4007aa:	4b12      	ldr	r3, [pc, #72]	; (4007f4 <udi_cdc_multi_write_buf+0xa4>)
  4007ac:	4798      	blx	r3
	udi_cdc_tx_buf_nb[port][buf_sel] = buf_nb + copy_nb;
  4007ae:	4426      	add	r6, r4
  4007b0:	f829 6015 	strh.w	r6, [r9, r5, lsl #1]
	if (cpu_irq_is_enabled_flags(flags))
  4007b4:	f1bb 0f00 	cmp.w	fp, #0
  4007b8:	d005      	beq.n	4007c6 <udi_cdc_multi_write_buf+0x76>
		cpu_irq_enable();
  4007ba:	2301      	movs	r3, #1
  4007bc:	4a0a      	ldr	r2, [pc, #40]	; (4007e8 <udi_cdc_multi_write_buf+0x98>)
  4007be:	7013      	strb	r3, [r2, #0]
  4007c0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4007c4:	b662      	cpsie	i
	cpu_irq_restore(flags);

	// Update buffer pointer
	ptr_buf = ptr_buf + copy_nb;
  4007c6:	44a0      	add	r8, r4
	size -= copy_nb;

	if (size) {
  4007c8:	1b3f      	subs	r7, r7, r4
  4007ca:	d007      	beq.n	4007dc <udi_cdc_multi_write_buf+0x8c>
	if (!udi_cdc_multi_is_tx_ready(port)) {
  4007cc:	2000      	movs	r0, #0
  4007ce:	47d0      	blx	sl
  4007d0:	2800      	cmp	r0, #0
  4007d2:	d1ca      	bne.n	40076a <udi_cdc_multi_write_buf+0x1a>
		if (!udi_cdc_data_running) {
  4007d4:	4b08      	ldr	r3, [pc, #32]	; (4007f8 <udi_cdc_multi_write_buf+0xa8>)
  4007d6:	781b      	ldrb	r3, [r3, #0]
  4007d8:	2b00      	cmp	r3, #0
  4007da:	d1f7      	bne.n	4007cc <udi_cdc_multi_write_buf+0x7c>
		goto udi_cdc_write_buf_loop_wait;
	}

	return 0;
}
  4007dc:	4638      	mov	r0, r7
  4007de:	b003      	add	sp, #12
  4007e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4007e4:	20000bd8 	.word	0x20000bd8
  4007e8:	20000200 	.word	0x20000200
  4007ec:	20000d00 	.word	0x20000d00
  4007f0:	20000c7c 	.word	0x20000c7c
  4007f4:	00403555 	.word	0x00403555
  4007f8:	20000bd6 	.word	0x20000bd6
  4007fc:	0040073d 	.word	0x0040073d
  400800:	20000cfc 	.word	0x20000cfc

00400804 <udi_cdc_write_buf>:

iram_size_t udi_cdc_write_buf(const void* buf, iram_size_t size)
{
  400804:	b508      	push	{r3, lr}
	return udi_cdc_multi_write_buf(0, buf, size);
  400806:	460a      	mov	r2, r1
  400808:	4601      	mov	r1, r0
  40080a:	2000      	movs	r0, #0
  40080c:	4b01      	ldr	r3, [pc, #4]	; (400814 <udi_cdc_write_buf+0x10>)
  40080e:	4798      	blx	r3
}
  400810:	bd08      	pop	{r3, pc}
  400812:	bf00      	nop
  400814:	00400751 	.word	0x00400751

00400818 <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
  400818:	4b10      	ldr	r3, [pc, #64]	; (40085c <udc_next_desc_in_iface+0x44>)
  40081a:	681b      	ldr	r3, [r3, #0]
  40081c:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  40081e:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  400820:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
  400822:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  400824:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
  400826:	4290      	cmp	r0, r2
  400828:	d211      	bcs.n	40084e <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  40082a:	7843      	ldrb	r3, [r0, #1]
  40082c:	2b04      	cmp	r3, #4
  40082e:	d010      	beq.n	400852 <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
  400830:	428b      	cmp	r3, r1
  400832:	d009      	beq.n	400848 <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
  400834:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  400836:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
  400838:	4290      	cmp	r0, r2
  40083a:	d206      	bcs.n	40084a <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  40083c:	7843      	ldrb	r3, [r0, #1]
  40083e:	2b04      	cmp	r3, #4
  400840:	d009      	beq.n	400856 <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
  400842:	428b      	cmp	r3, r1
  400844:	d1f6      	bne.n	400834 <udc_next_desc_in_iface+0x1c>
  400846:	e007      	b.n	400858 <udc_next_desc_in_iface+0x40>
  400848:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
  40084a:	2000      	movs	r0, #0
  40084c:	4770      	bx	lr
  40084e:	2000      	movs	r0, #0
  400850:	4770      	bx	lr
  400852:	2000      	movs	r0, #0
  400854:	4770      	bx	lr
  400856:	2000      	movs	r0, #0
}
  400858:	4770      	bx	lr
  40085a:	bf00      	nop
  40085c:	20000d24 	.word	0x20000d24

00400860 <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
  400860:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
  400862:	4b03      	ldr	r3, [pc, #12]	; (400870 <udc_valid_address+0x10>)
  400864:	7898      	ldrb	r0, [r3, #2]
  400866:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  40086a:	4b02      	ldr	r3, [pc, #8]	; (400874 <udc_valid_address+0x14>)
  40086c:	4798      	blx	r3
  40086e:	bd08      	pop	{r3, pc}
  400870:	20000e50 	.word	0x20000e50
  400874:	00401fa1 	.word	0x00401fa1

00400878 <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
  400878:	4b19      	ldr	r3, [pc, #100]	; (4008e0 <udc_update_iface_desc+0x68>)
  40087a:	781b      	ldrb	r3, [r3, #0]
  40087c:	b34b      	cbz	r3, 4008d2 <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  40087e:	4b19      	ldr	r3, [pc, #100]	; (4008e4 <udc_update_iface_desc+0x6c>)
  400880:	681b      	ldr	r3, [r3, #0]
  400882:	681b      	ldr	r3, [r3, #0]
  400884:	791a      	ldrb	r2, [r3, #4]
  400886:	4282      	cmp	r2, r0
  400888:	d925      	bls.n	4008d6 <udc_update_iface_desc+0x5e>
{
  40088a:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
  40088c:	4a16      	ldr	r2, [pc, #88]	; (4008e8 <udc_update_iface_desc+0x70>)
  40088e:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  400890:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  400892:	441c      	add	r4, r3
	while (ptr_end_desc >
  400894:	42a3      	cmp	r3, r4
  400896:	d220      	bcs.n	4008da <udc_update_iface_desc+0x62>
  400898:	2500      	movs	r5, #0
  40089a:	2601      	movs	r6, #1
  40089c:	e007      	b.n	4008ae <udc_update_iface_desc+0x36>
  40089e:	4a12      	ldr	r2, [pc, #72]	; (4008e8 <udc_update_iface_desc+0x70>)
  4008a0:	6013      	str	r3, [r2, #0]
  4008a2:	e00f      	b.n	4008c4 <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
  4008a4:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
  4008a6:	4413      	add	r3, r2
  4008a8:	4635      	mov	r5, r6
	while (ptr_end_desc >
  4008aa:	42a3      	cmp	r3, r4
  4008ac:	d20c      	bcs.n	4008c8 <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
  4008ae:	785a      	ldrb	r2, [r3, #1]
  4008b0:	2a04      	cmp	r2, #4
  4008b2:	d1f7      	bne.n	4008a4 <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
  4008b4:	789a      	ldrb	r2, [r3, #2]
  4008b6:	4282      	cmp	r2, r0
  4008b8:	d1f4      	bne.n	4008a4 <udc_update_iface_desc+0x2c>
  4008ba:	78da      	ldrb	r2, [r3, #3]
  4008bc:	428a      	cmp	r2, r1
  4008be:	d1f1      	bne.n	4008a4 <udc_update_iface_desc+0x2c>
  4008c0:	2d00      	cmp	r5, #0
  4008c2:	d1ec      	bne.n	40089e <udc_update_iface_desc+0x26>
				return true; // Interface found
  4008c4:	2001      	movs	r0, #1
  4008c6:	e002      	b.n	4008ce <udc_update_iface_desc+0x56>
  4008c8:	4a07      	ldr	r2, [pc, #28]	; (4008e8 <udc_update_iface_desc+0x70>)
  4008ca:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
  4008cc:	2000      	movs	r0, #0
}
  4008ce:	bc70      	pop	{r4, r5, r6}
  4008d0:	4770      	bx	lr
		return false;
  4008d2:	2000      	movs	r0, #0
  4008d4:	4770      	bx	lr
		return false;
  4008d6:	2000      	movs	r0, #0
  4008d8:	4770      	bx	lr
	return false; // Interface not found
  4008da:	2000      	movs	r0, #0
  4008dc:	e7f7      	b.n	4008ce <udc_update_iface_desc+0x56>
  4008de:	bf00      	nop
  4008e0:	20000d20 	.word	0x20000d20
  4008e4:	20000d24 	.word	0x20000d24
  4008e8:	20000d28 	.word	0x20000d28

004008ec <udc_iface_disable>:
{
  4008ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4008f0:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
  4008f2:	2100      	movs	r1, #0
  4008f4:	4b13      	ldr	r3, [pc, #76]	; (400944 <udc_iface_disable+0x58>)
  4008f6:	4798      	blx	r3
  4008f8:	4680      	mov	r8, r0
  4008fa:	b910      	cbnz	r0, 400902 <udc_iface_disable+0x16>
}
  4008fc:	4640      	mov	r0, r8
  4008fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400902:	4b11      	ldr	r3, [pc, #68]	; (400948 <udc_iface_disable+0x5c>)
  400904:	681b      	ldr	r3, [r3, #0]
  400906:	685b      	ldr	r3, [r3, #4]
  400908:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  40090c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  400910:	4798      	blx	r3
  400912:	4601      	mov	r1, r0
  400914:	4620      	mov	r0, r4
  400916:	4b0b      	ldr	r3, [pc, #44]	; (400944 <udc_iface_disable+0x58>)
  400918:	4798      	blx	r3
  40091a:	4680      	mov	r8, r0
  40091c:	2800      	cmp	r0, #0
  40091e:	d0ed      	beq.n	4008fc <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  400920:	4b0a      	ldr	r3, [pc, #40]	; (40094c <udc_iface_disable+0x60>)
  400922:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400924:	2605      	movs	r6, #5
  400926:	4d0a      	ldr	r5, [pc, #40]	; (400950 <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
  400928:	4f0a      	ldr	r7, [pc, #40]	; (400954 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40092a:	4631      	mov	r1, r6
  40092c:	4620      	mov	r0, r4
  40092e:	47a8      	blx	r5
			if (NULL == ep_desc) {
  400930:	4604      	mov	r4, r0
  400932:	b110      	cbz	r0, 40093a <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
  400934:	7880      	ldrb	r0, [r0, #2]
  400936:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400938:	e7f7      	b.n	40092a <udc_iface_disable+0x3e>
	udi_api->disable();
  40093a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40093e:	4798      	blx	r3
	return true;
  400940:	e7dc      	b.n	4008fc <udc_iface_disable+0x10>
  400942:	bf00      	nop
  400944:	00400879 	.word	0x00400879
  400948:	20000d24 	.word	0x20000d24
  40094c:	20000d28 	.word	0x20000d28
  400950:	00400819 	.word	0x00400819
  400954:	00402111 	.word	0x00402111

00400958 <udc_iface_enable>:
{
  400958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40095c:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
  40095e:	4b10      	ldr	r3, [pc, #64]	; (4009a0 <udc_iface_enable+0x48>)
  400960:	4798      	blx	r3
  400962:	4603      	mov	r3, r0
  400964:	b1c8      	cbz	r0, 40099a <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  400966:	4b0f      	ldr	r3, [pc, #60]	; (4009a4 <udc_iface_enable+0x4c>)
  400968:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40096a:	2605      	movs	r6, #5
  40096c:	4d0e      	ldr	r5, [pc, #56]	; (4009a8 <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  40096e:	4f0f      	ldr	r7, [pc, #60]	; (4009ac <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400970:	4631      	mov	r1, r6
  400972:	4620      	mov	r0, r4
  400974:	47a8      	blx	r5
		if (NULL == ep_desc)
  400976:	4604      	mov	r4, r0
  400978:	b138      	cbz	r0, 40098a <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  40097a:	8882      	ldrh	r2, [r0, #4]
  40097c:	78c1      	ldrb	r1, [r0, #3]
  40097e:	7880      	ldrb	r0, [r0, #2]
  400980:	47b8      	blx	r7
  400982:	4603      	mov	r3, r0
  400984:	2800      	cmp	r0, #0
  400986:	d1f3      	bne.n	400970 <udc_iface_enable+0x18>
  400988:	e007      	b.n	40099a <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
  40098a:	4b09      	ldr	r3, [pc, #36]	; (4009b0 <udc_iface_enable+0x58>)
  40098c:	681b      	ldr	r3, [r3, #0]
  40098e:	685b      	ldr	r3, [r3, #4]
  400990:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
  400994:	681b      	ldr	r3, [r3, #0]
  400996:	4798      	blx	r3
  400998:	4603      	mov	r3, r0
}
  40099a:	4618      	mov	r0, r3
  40099c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4009a0:	00400879 	.word	0x00400879
  4009a4:	20000d28 	.word	0x20000d28
  4009a8:	00400819 	.word	0x00400819
  4009ac:	00402019 	.word	0x00402019
  4009b0:	20000d24 	.word	0x20000d24

004009b4 <udc_start>:
{
  4009b4:	b508      	push	{r3, lr}
	udd_enable();
  4009b6:	4b01      	ldr	r3, [pc, #4]	; (4009bc <udc_start+0x8>)
  4009b8:	4798      	blx	r3
  4009ba:	bd08      	pop	{r3, pc}
  4009bc:	00401ec1 	.word	0x00401ec1

004009c0 <udc_reset>:
{
  4009c0:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
  4009c2:	4b0d      	ldr	r3, [pc, #52]	; (4009f8 <udc_reset+0x38>)
  4009c4:	781b      	ldrb	r3, [r3, #0]
  4009c6:	b183      	cbz	r3, 4009ea <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4009c8:	4b0c      	ldr	r3, [pc, #48]	; (4009fc <udc_reset+0x3c>)
  4009ca:	681b      	ldr	r3, [r3, #0]
  4009cc:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  4009ce:	791b      	ldrb	r3, [r3, #4]
  4009d0:	b15b      	cbz	r3, 4009ea <udc_reset+0x2a>
  4009d2:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
  4009d4:	4e0a      	ldr	r6, [pc, #40]	; (400a00 <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4009d6:	4d09      	ldr	r5, [pc, #36]	; (4009fc <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
  4009d8:	4620      	mov	r0, r4
  4009da:	47b0      	blx	r6
				iface_num++) {
  4009dc:	3401      	adds	r4, #1
  4009de:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4009e0:	682b      	ldr	r3, [r5, #0]
  4009e2:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  4009e4:	791b      	ldrb	r3, [r3, #4]
  4009e6:	42a3      	cmp	r3, r4
  4009e8:	d8f6      	bhi.n	4009d8 <udc_reset+0x18>
	udc_num_configuration = 0;
  4009ea:	2200      	movs	r2, #0
  4009ec:	4b02      	ldr	r3, [pc, #8]	; (4009f8 <udc_reset+0x38>)
  4009ee:	701a      	strb	r2, [r3, #0]
	udc_device_status =
  4009f0:	2201      	movs	r2, #1
  4009f2:	4b04      	ldr	r3, [pc, #16]	; (400a04 <udc_reset+0x44>)
  4009f4:	801a      	strh	r2, [r3, #0]
  4009f6:	bd70      	pop	{r4, r5, r6, pc}
  4009f8:	20000d20 	.word	0x20000d20
  4009fc:	20000d24 	.word	0x20000d24
  400a00:	004008ed 	.word	0x004008ed
  400a04:	20000d16 	.word	0x20000d16

00400a08 <udc_sof_notify>:
{
  400a08:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
  400a0a:	4b0d      	ldr	r3, [pc, #52]	; (400a40 <udc_sof_notify+0x38>)
  400a0c:	781b      	ldrb	r3, [r3, #0]
  400a0e:	b1b3      	cbz	r3, 400a3e <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400a10:	4b0c      	ldr	r3, [pc, #48]	; (400a44 <udc_sof_notify+0x3c>)
  400a12:	681b      	ldr	r3, [r3, #0]
  400a14:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  400a16:	7912      	ldrb	r2, [r2, #4]
  400a18:	b18a      	cbz	r2, 400a3e <udc_sof_notify+0x36>
  400a1a:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400a1c:	4d09      	ldr	r5, [pc, #36]	; (400a44 <udc_sof_notify+0x3c>)
  400a1e:	e006      	b.n	400a2e <udc_sof_notify+0x26>
				iface_num++) {
  400a20:	3401      	adds	r4, #1
  400a22:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400a24:	682b      	ldr	r3, [r5, #0]
  400a26:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  400a28:	7912      	ldrb	r2, [r2, #4]
  400a2a:	42a2      	cmp	r2, r4
  400a2c:	d907      	bls.n	400a3e <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
  400a2e:	685b      	ldr	r3, [r3, #4]
  400a30:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  400a34:	691b      	ldr	r3, [r3, #16]
  400a36:	2b00      	cmp	r3, #0
  400a38:	d0f2      	beq.n	400a20 <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
  400a3a:	4798      	blx	r3
  400a3c:	e7f0      	b.n	400a20 <udc_sof_notify+0x18>
  400a3e:	bd38      	pop	{r3, r4, r5, pc}
  400a40:	20000d20 	.word	0x20000d20
  400a44:	20000d24 	.word	0x20000d24

00400a48 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
  400a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
  400a4a:	4b96      	ldr	r3, [pc, #600]	; (400ca4 <udc_process_setup+0x25c>)
  400a4c:	2200      	movs	r2, #0
  400a4e:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
  400a50:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  400a52:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
  400a54:	781b      	ldrb	r3, [r3, #0]
  400a56:	f013 0f80 	tst.w	r3, #128	; 0x80
  400a5a:	d114      	bne.n	400a86 <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  400a5c:	f013 0f60 	tst.w	r3, #96	; 0x60
  400a60:	f000 80b8 	beq.w	400bd4 <udc_process_setup+0x18c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
  400a64:	4b8f      	ldr	r3, [pc, #572]	; (400ca4 <udc_process_setup+0x25c>)
  400a66:	781b      	ldrb	r3, [r3, #0]
  400a68:	f003 031f 	and.w	r3, r3, #31
  400a6c:	2b01      	cmp	r3, #1
  400a6e:	f000 818b 	beq.w	400d88 <udc_process_setup+0x340>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
  400a72:	4b8c      	ldr	r3, [pc, #560]	; (400ca4 <udc_process_setup+0x25c>)
  400a74:	781b      	ldrb	r3, [r3, #0]
  400a76:	f003 031f 	and.w	r3, r3, #31
  400a7a:	2b02      	cmp	r3, #2
  400a7c:	f000 81ac 	beq.w	400dd8 <udc_process_setup+0x390>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
  400a80:	2300      	movs	r3, #0
#endif
}
  400a82:	4618      	mov	r0, r3
  400a84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
  400a86:	4a87      	ldr	r2, [pc, #540]	; (400ca4 <udc_process_setup+0x25c>)
  400a88:	88d2      	ldrh	r2, [r2, #6]
  400a8a:	2a00      	cmp	r2, #0
  400a8c:	f000 81cd 	beq.w	400e2a <udc_process_setup+0x3e2>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  400a90:	f013 0f60 	tst.w	r3, #96	; 0x60
  400a94:	d1e6      	bne.n	400a64 <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  400a96:	f013 031f 	ands.w	r3, r3, #31
  400a9a:	d106      	bne.n	400aaa <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
  400a9c:	4981      	ldr	r1, [pc, #516]	; (400ca4 <udc_process_setup+0x25c>)
  400a9e:	7849      	ldrb	r1, [r1, #1]
  400aa0:	2906      	cmp	r1, #6
  400aa2:	d013      	beq.n	400acc <udc_process_setup+0x84>
  400aa4:	2908      	cmp	r1, #8
  400aa6:	d058      	beq.n	400b5a <udc_process_setup+0x112>
  400aa8:	b149      	cbz	r1, 400abe <udc_process_setup+0x76>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  400aaa:	2b01      	cmp	r3, #1
  400aac:	d05c      	beq.n	400b68 <udc_process_setup+0x120>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  400aae:	2b02      	cmp	r3, #2
  400ab0:	d1d8      	bne.n	400a64 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  400ab2:	4b7c      	ldr	r3, [pc, #496]	; (400ca4 <udc_process_setup+0x25c>)
  400ab4:	785b      	ldrb	r3, [r3, #1]
  400ab6:	2b00      	cmp	r3, #0
  400ab8:	d07e      	beq.n	400bb8 <udc_process_setup+0x170>
	return false;
  400aba:	2300      	movs	r3, #0
  400abc:	e160      	b.n	400d80 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
  400abe:	2a02      	cmp	r2, #2
  400ac0:	d1d0      	bne.n	400a64 <udc_process_setup+0x1c>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
  400ac2:	2102      	movs	r1, #2
  400ac4:	4878      	ldr	r0, [pc, #480]	; (400ca8 <udc_process_setup+0x260>)
  400ac6:	4b79      	ldr	r3, [pc, #484]	; (400cac <udc_process_setup+0x264>)
  400ac8:	4798      	blx	r3
  400aca:	e09f      	b.n	400c0c <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  400acc:	4b75      	ldr	r3, [pc, #468]	; (400ca4 <udc_process_setup+0x25c>)
  400ace:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
  400ad0:	0a13      	lsrs	r3, r2, #8
  400ad2:	3b01      	subs	r3, #1
  400ad4:	2b0e      	cmp	r3, #14
  400ad6:	f200 8150 	bhi.w	400d7a <udc_process_setup+0x332>
  400ada:	e8df f013 	tbh	[pc, r3, lsl #1]
  400ade:	000f      	.short	0x000f
  400ae0:	0036001c 	.word	0x0036001c
  400ae4:	014e014e 	.word	0x014e014e
  400ae8:	014e014e 	.word	0x014e014e
  400aec:	014e014e 	.word	0x014e014e
  400af0:	014e014e 	.word	0x014e014e
  400af4:	014e014e 	.word	0x014e014e
  400af8:	002e014e 	.word	0x002e014e
				(uint8_t *) udc_config.confdev_lsfs,
  400afc:	4b6c      	ldr	r3, [pc, #432]	; (400cb0 <udc_process_setup+0x268>)
  400afe:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
  400b00:	7801      	ldrb	r1, [r0, #0]
  400b02:	4b6a      	ldr	r3, [pc, #424]	; (400cac <udc_process_setup+0x264>)
  400b04:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
  400b06:	4b67      	ldr	r3, [pc, #412]	; (400ca4 <udc_process_setup+0x25c>)
  400b08:	88da      	ldrh	r2, [r3, #6]
  400b0a:	899b      	ldrh	r3, [r3, #12]
  400b0c:	4293      	cmp	r3, r2
  400b0e:	d97d      	bls.n	400c0c <udc_process_setup+0x1c4>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
  400b10:	4b64      	ldr	r3, [pc, #400]	; (400ca4 <udc_process_setup+0x25c>)
  400b12:	819a      	strh	r2, [r3, #12]
  400b14:	e07a      	b.n	400c0c <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  400b16:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
  400b18:	4b65      	ldr	r3, [pc, #404]	; (400cb0 <udc_process_setup+0x268>)
  400b1a:	681b      	ldr	r3, [r3, #0]
  400b1c:	7c5b      	ldrb	r3, [r3, #17]
  400b1e:	4293      	cmp	r3, r2
  400b20:	d9a0      	bls.n	400a64 <udc_process_setup+0x1c>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
  400b22:	4b63      	ldr	r3, [pc, #396]	; (400cb0 <udc_process_setup+0x268>)
  400b24:	685b      	ldr	r3, [r3, #4]
  400b26:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
  400b2a:	8841      	ldrh	r1, [r0, #2]
  400b2c:	4b5f      	ldr	r3, [pc, #380]	; (400cac <udc_process_setup+0x264>)
  400b2e:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
  400b30:	4b5c      	ldr	r3, [pc, #368]	; (400ca4 <udc_process_setup+0x25c>)
  400b32:	689b      	ldr	r3, [r3, #8]
  400b34:	2202      	movs	r2, #2
  400b36:	705a      	strb	r2, [r3, #1]
  400b38:	e7e5      	b.n	400b06 <udc_process_setup+0xbe>
		if (udc_config.conf_bos == NULL) {
  400b3a:	4b5d      	ldr	r3, [pc, #372]	; (400cb0 <udc_process_setup+0x268>)
  400b3c:	6898      	ldr	r0, [r3, #8]
  400b3e:	2800      	cmp	r0, #0
  400b40:	d090      	beq.n	400a64 <udc_process_setup+0x1c>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
  400b42:	8841      	ldrh	r1, [r0, #2]
  400b44:	4b59      	ldr	r3, [pc, #356]	; (400cac <udc_process_setup+0x264>)
  400b46:	4798      	blx	r3
  400b48:	e7dd      	b.n	400b06 <udc_process_setup+0xbe>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
  400b4a:	f012 0fff 	tst.w	r2, #255	; 0xff
  400b4e:	d189      	bne.n	400a64 <udc_process_setup+0x1c>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
  400b50:	2104      	movs	r1, #4
  400b52:	4858      	ldr	r0, [pc, #352]	; (400cb4 <udc_process_setup+0x26c>)
  400b54:	4b55      	ldr	r3, [pc, #340]	; (400cac <udc_process_setup+0x264>)
  400b56:	4798      	blx	r3
  400b58:	e7d5      	b.n	400b06 <udc_process_setup+0xbe>
	if (udd_g_ctrlreq.req.wLength != 1) {
  400b5a:	2a01      	cmp	r2, #1
  400b5c:	d182      	bne.n	400a64 <udc_process_setup+0x1c>
	udd_set_setup_payload(&udc_num_configuration,1);
  400b5e:	2101      	movs	r1, #1
  400b60:	4855      	ldr	r0, [pc, #340]	; (400cb8 <udc_process_setup+0x270>)
  400b62:	4b52      	ldr	r3, [pc, #328]	; (400cac <udc_process_setup+0x264>)
  400b64:	4798      	blx	r3
  400b66:	e051      	b.n	400c0c <udc_process_setup+0x1c4>
			switch (udd_g_ctrlreq.req.bRequest) {
  400b68:	494e      	ldr	r1, [pc, #312]	; (400ca4 <udc_process_setup+0x25c>)
  400b6a:	7849      	ldrb	r1, [r1, #1]
  400b6c:	290a      	cmp	r1, #10
  400b6e:	d19e      	bne.n	400aae <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != 1) {
  400b70:	2a01      	cmp	r2, #1
  400b72:	f47f af77 	bne.w	400a64 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
  400b76:	4b50      	ldr	r3, [pc, #320]	; (400cb8 <udc_process_setup+0x270>)
  400b78:	781b      	ldrb	r3, [r3, #0]
  400b7a:	2b00      	cmp	r3, #0
  400b7c:	f43f af72 	beq.w	400a64 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400b80:	4b48      	ldr	r3, [pc, #288]	; (400ca4 <udc_process_setup+0x25c>)
  400b82:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  400b84:	4b4d      	ldr	r3, [pc, #308]	; (400cbc <udc_process_setup+0x274>)
  400b86:	681d      	ldr	r5, [r3, #0]
  400b88:	682b      	ldr	r3, [r5, #0]
  400b8a:	791b      	ldrb	r3, [r3, #4]
  400b8c:	42a3      	cmp	r3, r4
  400b8e:	f67f af69 	bls.w	400a64 <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
  400b92:	2100      	movs	r1, #0
  400b94:	4620      	mov	r0, r4
  400b96:	4b4a      	ldr	r3, [pc, #296]	; (400cc0 <udc_process_setup+0x278>)
  400b98:	4798      	blx	r3
  400b9a:	2800      	cmp	r0, #0
  400b9c:	f43f af62 	beq.w	400a64 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400ba0:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
  400ba2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  400ba6:	68db      	ldr	r3, [r3, #12]
  400ba8:	4798      	blx	r3
  400baa:	4b46      	ldr	r3, [pc, #280]	; (400cc4 <udc_process_setup+0x27c>)
  400bac:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
  400bae:	2101      	movs	r1, #1
  400bb0:	4618      	mov	r0, r3
  400bb2:	4b3e      	ldr	r3, [pc, #248]	; (400cac <udc_process_setup+0x264>)
  400bb4:	4798      	blx	r3
  400bb6:	e029      	b.n	400c0c <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
  400bb8:	2a02      	cmp	r2, #2
  400bba:	f47f af53 	bne.w	400a64 <udc_process_setup+0x1c>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
  400bbe:	4b39      	ldr	r3, [pc, #228]	; (400ca4 <udc_process_setup+0x25c>)
  400bc0:	7918      	ldrb	r0, [r3, #4]
  400bc2:	4b41      	ldr	r3, [pc, #260]	; (400cc8 <udc_process_setup+0x280>)
  400bc4:	4798      	blx	r3
  400bc6:	4b41      	ldr	r3, [pc, #260]	; (400ccc <udc_process_setup+0x284>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
  400bc8:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
  400bca:	2102      	movs	r1, #2
  400bcc:	4618      	mov	r0, r3
  400bce:	4b37      	ldr	r3, [pc, #220]	; (400cac <udc_process_setup+0x264>)
  400bd0:	4798      	blx	r3
  400bd2:	e01b      	b.n	400c0c <udc_process_setup+0x1c4>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  400bd4:	f013 031f 	ands.w	r3, r3, #31
  400bd8:	f040 8082 	bne.w	400ce0 <udc_process_setup+0x298>
			switch (udd_g_ctrlreq.req.bRequest) {
  400bdc:	4a31      	ldr	r2, [pc, #196]	; (400ca4 <udc_process_setup+0x25c>)
  400bde:	7852      	ldrb	r2, [r2, #1]
  400be0:	3a01      	subs	r2, #1
  400be2:	2a08      	cmp	r2, #8
  400be4:	d87c      	bhi.n	400ce0 <udc_process_setup+0x298>
  400be6:	e8df f012 	tbh	[pc, r2, lsl #1]
  400bea:	0013      	.short	0x0013
  400bec:	00ca007b 	.word	0x00ca007b
  400bf0:	0009007b 	.word	0x0009007b
  400bf4:	007b007b 	.word	0x007b007b
  400bf8:	0023007b 	.word	0x0023007b
	if (udd_g_ctrlreq.req.wLength) {
  400bfc:	4b29      	ldr	r3, [pc, #164]	; (400ca4 <udc_process_setup+0x25c>)
  400bfe:	88db      	ldrh	r3, [r3, #6]
  400c00:	2b00      	cmp	r3, #0
  400c02:	f47f af2f 	bne.w	400a64 <udc_process_setup+0x1c>
	udd_g_ctrlreq.callback = udc_valid_address;
  400c06:	4a32      	ldr	r2, [pc, #200]	; (400cd0 <udc_process_setup+0x288>)
  400c08:	4b26      	ldr	r3, [pc, #152]	; (400ca4 <udc_process_setup+0x25c>)
  400c0a:	611a      	str	r2, [r3, #16]
			return true;
  400c0c:	2301      	movs	r3, #1
  400c0e:	e738      	b.n	400a82 <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
  400c10:	4b24      	ldr	r3, [pc, #144]	; (400ca4 <udc_process_setup+0x25c>)
  400c12:	88db      	ldrh	r3, [r3, #6]
  400c14:	2b00      	cmp	r3, #0
  400c16:	f47f af25 	bne.w	400a64 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
  400c1a:	4b22      	ldr	r3, [pc, #136]	; (400ca4 <udc_process_setup+0x25c>)
  400c1c:	885b      	ldrh	r3, [r3, #2]
  400c1e:	2b01      	cmp	r3, #1
  400c20:	f47f af20 	bne.w	400a64 <udc_process_setup+0x1c>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
  400c24:	4a20      	ldr	r2, [pc, #128]	; (400ca8 <udc_process_setup+0x260>)
  400c26:	8813      	ldrh	r3, [r2, #0]
  400c28:	f023 0302 	bic.w	r3, r3, #2
  400c2c:	8013      	strh	r3, [r2, #0]
  400c2e:	e7ed      	b.n	400c0c <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength) {
  400c30:	4b1c      	ldr	r3, [pc, #112]	; (400ca4 <udc_process_setup+0x25c>)
  400c32:	88db      	ldrh	r3, [r3, #6]
  400c34:	2b00      	cmp	r3, #0
  400c36:	f47f af15 	bne.w	400a64 <udc_process_setup+0x1c>
	if (!udd_getaddress()) {
  400c3a:	4b26      	ldr	r3, [pc, #152]	; (400cd4 <udc_process_setup+0x28c>)
  400c3c:	4798      	blx	r3
  400c3e:	2800      	cmp	r0, #0
  400c40:	f43f af10 	beq.w	400a64 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  400c44:	4b17      	ldr	r3, [pc, #92]	; (400ca4 <udc_process_setup+0x25c>)
  400c46:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
  400c48:	4b19      	ldr	r3, [pc, #100]	; (400cb0 <udc_process_setup+0x268>)
  400c4a:	681b      	ldr	r3, [r3, #0]
  400c4c:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  400c4e:	429a      	cmp	r2, r3
  400c50:	f73f af08 	bgt.w	400a64 <udc_process_setup+0x1c>
	udc_reset();
  400c54:	4b20      	ldr	r3, [pc, #128]	; (400cd8 <udc_process_setup+0x290>)
  400c56:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
  400c58:	4b12      	ldr	r3, [pc, #72]	; (400ca4 <udc_process_setup+0x25c>)
  400c5a:	789b      	ldrb	r3, [r3, #2]
  400c5c:	4a16      	ldr	r2, [pc, #88]	; (400cb8 <udc_process_setup+0x270>)
  400c5e:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
  400c60:	2b00      	cmp	r3, #0
  400c62:	d0d3      	beq.n	400c0c <udc_process_setup+0x1c4>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
  400c64:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
  400c68:	3b01      	subs	r3, #1
  400c6a:	4a11      	ldr	r2, [pc, #68]	; (400cb0 <udc_process_setup+0x268>)
  400c6c:	6852      	ldr	r2, [r2, #4]
  400c6e:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
  400c72:	4912      	ldr	r1, [pc, #72]	; (400cbc <udc_process_setup+0x274>)
  400c74:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400c76:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
  400c7a:	791b      	ldrb	r3, [r3, #4]
  400c7c:	2b00      	cmp	r3, #0
  400c7e:	d0c5      	beq.n	400c0c <udc_process_setup+0x1c4>
  400c80:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
  400c82:	4626      	mov	r6, r4
  400c84:	4d15      	ldr	r5, [pc, #84]	; (400cdc <udc_process_setup+0x294>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400c86:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
  400c88:	4631      	mov	r1, r6
  400c8a:	4620      	mov	r0, r4
  400c8c:	47a8      	blx	r5
  400c8e:	2800      	cmp	r0, #0
  400c90:	f43f aee8 	beq.w	400a64 <udc_process_setup+0x1c>
			iface_num++) {
  400c94:	3401      	adds	r4, #1
  400c96:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400c98:	683b      	ldr	r3, [r7, #0]
  400c9a:	681b      	ldr	r3, [r3, #0]
  400c9c:	791b      	ldrb	r3, [r3, #4]
  400c9e:	42a3      	cmp	r3, r4
  400ca0:	d8f2      	bhi.n	400c88 <udc_process_setup+0x240>
  400ca2:	e7b3      	b.n	400c0c <udc_process_setup+0x1c4>
  400ca4:	20000e50 	.word	0x20000e50
  400ca8:	20000d16 	.word	0x20000d16
  400cac:	0040200d 	.word	0x0040200d
  400cb0:	2000018c 	.word	0x2000018c
  400cb4:	2000010c 	.word	0x2000010c
  400cb8:	20000d20 	.word	0x20000d20
  400cbc:	20000d24 	.word	0x20000d24
  400cc0:	00400879 	.word	0x00400879
  400cc4:	20000d1c 	.word	0x20000d1c
  400cc8:	00402169 	.word	0x00402169
  400ccc:	20000d18 	.word	0x20000d18
  400cd0:	00400861 	.word	0x00400861
  400cd4:	00401fdd 	.word	0x00401fdd
  400cd8:	004009c1 	.word	0x004009c1
  400cdc:	00400959 	.word	0x00400959
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  400ce0:	2b01      	cmp	r3, #1
  400ce2:	d00a      	beq.n	400cfa <udc_process_setup+0x2b2>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  400ce4:	2b02      	cmp	r3, #2
  400ce6:	f47f aebd 	bne.w	400a64 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  400cea:	4b52      	ldr	r3, [pc, #328]	; (400e34 <udc_process_setup+0x3ec>)
  400cec:	785b      	ldrb	r3, [r3, #1]
  400cee:	2b01      	cmp	r3, #1
  400cf0:	d020      	beq.n	400d34 <udc_process_setup+0x2ec>
  400cf2:	2b03      	cmp	r3, #3
  400cf4:	d02e      	beq.n	400d54 <udc_process_setup+0x30c>
	return false;
  400cf6:	2300      	movs	r3, #0
  400cf8:	e042      	b.n	400d80 <udc_process_setup+0x338>
			switch (udd_g_ctrlreq.req.bRequest) {
  400cfa:	4a4e      	ldr	r2, [pc, #312]	; (400e34 <udc_process_setup+0x3ec>)
  400cfc:	7852      	ldrb	r2, [r2, #1]
  400cfe:	2a0b      	cmp	r2, #11
  400d00:	d1f0      	bne.n	400ce4 <udc_process_setup+0x29c>
	if (udd_g_ctrlreq.req.wLength) {
  400d02:	4b4c      	ldr	r3, [pc, #304]	; (400e34 <udc_process_setup+0x3ec>)
  400d04:	88db      	ldrh	r3, [r3, #6]
  400d06:	2b00      	cmp	r3, #0
  400d08:	f47f aeac 	bne.w	400a64 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
  400d0c:	4b4a      	ldr	r3, [pc, #296]	; (400e38 <udc_process_setup+0x3f0>)
  400d0e:	781b      	ldrb	r3, [r3, #0]
  400d10:	2b00      	cmp	r3, #0
  400d12:	f43f aea7 	beq.w	400a64 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400d16:	4b47      	ldr	r3, [pc, #284]	; (400e34 <udc_process_setup+0x3ec>)
  400d18:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
  400d1a:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
  400d1c:	4620      	mov	r0, r4
  400d1e:	4b47      	ldr	r3, [pc, #284]	; (400e3c <udc_process_setup+0x3f4>)
  400d20:	4798      	blx	r3
  400d22:	2800      	cmp	r0, #0
  400d24:	f43f ae9e 	beq.w	400a64 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
  400d28:	b2e9      	uxtb	r1, r5
  400d2a:	4620      	mov	r0, r4
  400d2c:	4b44      	ldr	r3, [pc, #272]	; (400e40 <udc_process_setup+0x3f8>)
  400d2e:	4798      	blx	r3
  400d30:	4603      	mov	r3, r0
  400d32:	e025      	b.n	400d80 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
  400d34:	4b3f      	ldr	r3, [pc, #252]	; (400e34 <udc_process_setup+0x3ec>)
  400d36:	88db      	ldrh	r3, [r3, #6]
  400d38:	2b00      	cmp	r3, #0
  400d3a:	f47f ae93 	bne.w	400a64 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  400d3e:	4b3d      	ldr	r3, [pc, #244]	; (400e34 <udc_process_setup+0x3ec>)
  400d40:	885b      	ldrh	r3, [r3, #2]
  400d42:	2b00      	cmp	r3, #0
  400d44:	f47f ae8e 	bne.w	400a64 <udc_process_setup+0x1c>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  400d48:	4b3a      	ldr	r3, [pc, #232]	; (400e34 <udc_process_setup+0x3ec>)
  400d4a:	7918      	ldrb	r0, [r3, #4]
  400d4c:	4b3d      	ldr	r3, [pc, #244]	; (400e44 <udc_process_setup+0x3fc>)
  400d4e:	4798      	blx	r3
  400d50:	4603      	mov	r3, r0
  400d52:	e015      	b.n	400d80 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
  400d54:	4b37      	ldr	r3, [pc, #220]	; (400e34 <udc_process_setup+0x3ec>)
  400d56:	88db      	ldrh	r3, [r3, #6]
  400d58:	2b00      	cmp	r3, #0
  400d5a:	f47f ae83 	bne.w	400a64 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  400d5e:	4b35      	ldr	r3, [pc, #212]	; (400e34 <udc_process_setup+0x3ec>)
  400d60:	885b      	ldrh	r3, [r3, #2]
  400d62:	2b00      	cmp	r3, #0
  400d64:	f47f ae7e 	bne.w	400a64 <udc_process_setup+0x1c>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
  400d68:	4c32      	ldr	r4, [pc, #200]	; (400e34 <udc_process_setup+0x3ec>)
  400d6a:	7920      	ldrb	r0, [r4, #4]
  400d6c:	4b36      	ldr	r3, [pc, #216]	; (400e48 <udc_process_setup+0x400>)
  400d6e:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  400d70:	7920      	ldrb	r0, [r4, #4]
  400d72:	4b36      	ldr	r3, [pc, #216]	; (400e4c <udc_process_setup+0x404>)
  400d74:	4798      	blx	r3
  400d76:	4603      	mov	r3, r0
  400d78:	e002      	b.n	400d80 <udc_process_setup+0x338>
		return false;
  400d7a:	2300      	movs	r3, #0
  400d7c:	e000      	b.n	400d80 <udc_process_setup+0x338>
				return udc_req_std_dev_set_feature();
  400d7e:	2300      	movs	r3, #0
		if (udc_reqstd()) {
  400d80:	2b00      	cmp	r3, #0
  400d82:	f47f ae7e 	bne.w	400a82 <udc_process_setup+0x3a>
  400d86:	e66d      	b.n	400a64 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
  400d88:	4b2b      	ldr	r3, [pc, #172]	; (400e38 <udc_process_setup+0x3f0>)
  400d8a:	781b      	ldrb	r3, [r3, #0]
  400d8c:	2b00      	cmp	r3, #0
  400d8e:	d04e      	beq.n	400e2e <udc_process_setup+0x3e6>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400d90:	4b28      	ldr	r3, [pc, #160]	; (400e34 <udc_process_setup+0x3ec>)
  400d92:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  400d94:	4b2e      	ldr	r3, [pc, #184]	; (400e50 <udc_process_setup+0x408>)
  400d96:	681d      	ldr	r5, [r3, #0]
  400d98:	682b      	ldr	r3, [r5, #0]
  400d9a:	791b      	ldrb	r3, [r3, #4]
  400d9c:	42a3      	cmp	r3, r4
  400d9e:	d801      	bhi.n	400da4 <udc_process_setup+0x35c>
	return false;
  400da0:	2300      	movs	r3, #0
  400da2:	e66e      	b.n	400a82 <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
  400da4:	2100      	movs	r1, #0
  400da6:	4620      	mov	r0, r4
  400da8:	4b2a      	ldr	r3, [pc, #168]	; (400e54 <udc_process_setup+0x40c>)
  400daa:	4798      	blx	r3
  400dac:	2800      	cmp	r0, #0
  400dae:	f43f ae60 	beq.w	400a72 <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400db2:	686b      	ldr	r3, [r5, #4]
  400db4:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400db8:	68eb      	ldr	r3, [r5, #12]
  400dba:	4798      	blx	r3
  400dbc:	4601      	mov	r1, r0
  400dbe:	4620      	mov	r0, r4
  400dc0:	4b24      	ldr	r3, [pc, #144]	; (400e54 <udc_process_setup+0x40c>)
  400dc2:	4798      	blx	r3
  400dc4:	2800      	cmp	r0, #0
  400dc6:	f43f ae54 	beq.w	400a72 <udc_process_setup+0x2a>
	return udi_api->setup();
  400dca:	68ab      	ldr	r3, [r5, #8]
  400dcc:	4798      	blx	r3
		if (udc_req_iface()) {
  400dce:	4603      	mov	r3, r0
  400dd0:	2800      	cmp	r0, #0
  400dd2:	f47f ae56 	bne.w	400a82 <udc_process_setup+0x3a>
  400dd6:	e64c      	b.n	400a72 <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
  400dd8:	4b17      	ldr	r3, [pc, #92]	; (400e38 <udc_process_setup+0x3f0>)
  400dda:	781b      	ldrb	r3, [r3, #0]
  400ddc:	b30b      	cbz	r3, 400e22 <udc_process_setup+0x3da>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400dde:	4b1c      	ldr	r3, [pc, #112]	; (400e50 <udc_process_setup+0x408>)
  400de0:	681a      	ldr	r2, [r3, #0]
  400de2:	6813      	ldr	r3, [r2, #0]
  400de4:	791b      	ldrb	r3, [r3, #4]
  400de6:	b1f3      	cbz	r3, 400e26 <udc_process_setup+0x3de>
  400de8:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400dea:	4e1a      	ldr	r6, [pc, #104]	; (400e54 <udc_process_setup+0x40c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400dec:	4f18      	ldr	r7, [pc, #96]	; (400e50 <udc_process_setup+0x408>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
  400dee:	6853      	ldr	r3, [r2, #4]
  400df0:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400df4:	68eb      	ldr	r3, [r5, #12]
  400df6:	4798      	blx	r3
  400df8:	4601      	mov	r1, r0
  400dfa:	4620      	mov	r0, r4
  400dfc:	47b0      	blx	r6
  400dfe:	4603      	mov	r3, r0
  400e00:	2800      	cmp	r0, #0
  400e02:	f43f ae3e 	beq.w	400a82 <udc_process_setup+0x3a>
		if (udi_api->setup()) {
  400e06:	68ab      	ldr	r3, [r5, #8]
  400e08:	4798      	blx	r3
  400e0a:	4603      	mov	r3, r0
  400e0c:	2800      	cmp	r0, #0
  400e0e:	f47f ae38 	bne.w	400a82 <udc_process_setup+0x3a>
			iface_num++) {
  400e12:	3401      	adds	r4, #1
  400e14:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400e16:	683a      	ldr	r2, [r7, #0]
  400e18:	6811      	ldr	r1, [r2, #0]
  400e1a:	7909      	ldrb	r1, [r1, #4]
  400e1c:	42a1      	cmp	r1, r4
  400e1e:	d8e6      	bhi.n	400dee <udc_process_setup+0x3a6>
  400e20:	e62f      	b.n	400a82 <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
  400e22:	2300      	movs	r3, #0
  400e24:	e62d      	b.n	400a82 <udc_process_setup+0x3a>
	return false;
  400e26:	2300      	movs	r3, #0
  400e28:	e62b      	b.n	400a82 <udc_process_setup+0x3a>
			return false; // Error from USB host
  400e2a:	2300      	movs	r3, #0
  400e2c:	e629      	b.n	400a82 <udc_process_setup+0x3a>
	return false;
  400e2e:	2300      	movs	r3, #0
  400e30:	e627      	b.n	400a82 <udc_process_setup+0x3a>
  400e32:	bf00      	nop
  400e34:	20000e50 	.word	0x20000e50
  400e38:	20000d20 	.word	0x20000d20
  400e3c:	004008ed 	.word	0x004008ed
  400e40:	00400959 	.word	0x00400959
  400e44:	00402289 	.word	0x00402289
  400e48:	004024dd 	.word	0x004024dd
  400e4c:	004021a9 	.word	0x004021a9
  400e50:	20000d24 	.word	0x20000d24
  400e54:	00400879 	.word	0x00400879

00400e58 <adc_init>:
  400e58:	b430      	push	{r4, r5}
  400e5a:	2401      	movs	r4, #1
  400e5c:	6004      	str	r4, [r0, #0]
  400e5e:	2400      	movs	r4, #0
  400e60:	6044      	str	r4, [r0, #4]
  400e62:	f240 2502 	movw	r5, #514	; 0x202
  400e66:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
  400e6a:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
  400e6e:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114
  400e72:	6845      	ldr	r5, [r0, #4]
  400e74:	0052      	lsls	r2, r2, #1
  400e76:	fbb1 f2f2 	udiv	r2, r1, r2
  400e7a:	3a01      	subs	r2, #1
  400e7c:	0212      	lsls	r2, r2, #8
  400e7e:	b292      	uxth	r2, r2
  400e80:	432b      	orrs	r3, r5
  400e82:	431a      	orrs	r2, r3
  400e84:	6042      	str	r2, [r0, #4]
  400e86:	4620      	mov	r0, r4
  400e88:	bc30      	pop	{r4, r5}
  400e8a:	4770      	bx	lr

00400e8c <adc_configure_trigger>:
  400e8c:	6843      	ldr	r3, [r0, #4]
  400e8e:	01d2      	lsls	r2, r2, #7
  400e90:	b2d2      	uxtb	r2, r2
  400e92:	4319      	orrs	r1, r3
  400e94:	430a      	orrs	r2, r1
  400e96:	6042      	str	r2, [r0, #4]
  400e98:	4770      	bx	lr

00400e9a <adc_configure_timing>:
  400e9a:	b410      	push	{r4}
  400e9c:	6844      	ldr	r4, [r0, #4]
  400e9e:	0609      	lsls	r1, r1, #24
  400ea0:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
  400ea4:	4321      	orrs	r1, r4
  400ea6:	430a      	orrs	r2, r1
  400ea8:	0719      	lsls	r1, r3, #28
  400eaa:	f001 5140 	and.w	r1, r1, #805306368	; 0x30000000
  400eae:	4311      	orrs	r1, r2
  400eb0:	6041      	str	r1, [r0, #4]
  400eb2:	bc10      	pop	{r4}
  400eb4:	4770      	bx	lr

00400eb6 <adc_start>:
  400eb6:	2302      	movs	r3, #2
  400eb8:	6003      	str	r3, [r0, #0]
  400eba:	4770      	bx	lr

00400ebc <adc_enable_channel>:
  400ebc:	2301      	movs	r3, #1
  400ebe:	fa03 f101 	lsl.w	r1, r3, r1
  400ec2:	6101      	str	r1, [r0, #16]
  400ec4:	4770      	bx	lr

00400ec6 <adc_disable_all_channel>:
  400ec6:	f64f 73ff 	movw	r3, #65535	; 0xffff
  400eca:	6143      	str	r3, [r0, #20]
  400ecc:	4770      	bx	lr

00400ece <adc_enable_interrupt>:
  400ece:	6241      	str	r1, [r0, #36]	; 0x24
  400ed0:	4770      	bx	lr

00400ed2 <adc_get_status>:
  400ed2:	6b00      	ldr	r0, [r0, #48]	; 0x30
  400ed4:	4770      	bx	lr

00400ed6 <adc_set_bias_current>:
  400ed6:	f8d0 3094 	ldr.w	r3, [r0, #148]	; 0x94
  400eda:	0209      	lsls	r1, r1, #8
  400edc:	f401 7140 	and.w	r1, r1, #768	; 0x300
  400ee0:	4319      	orrs	r1, r3
  400ee2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
  400ee6:	4770      	bx	lr

00400ee8 <adc_get_pdc_base>:
  400ee8:	4800      	ldr	r0, [pc, #0]	; (400eec <adc_get_pdc_base+0x4>)
  400eea:	4770      	bx	lr
  400eec:	40038100 	.word	0x40038100

00400ef0 <pio_handler_process>:
  400ef0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400ef4:	4681      	mov	r9, r0
  400ef6:	460f      	mov	r7, r1
  400ef8:	4b12      	ldr	r3, [pc, #72]	; (400f44 <pio_handler_process+0x54>)
  400efa:	4798      	blx	r3
  400efc:	4605      	mov	r5, r0
  400efe:	4648      	mov	r0, r9
  400f00:	4b11      	ldr	r3, [pc, #68]	; (400f48 <pio_handler_process+0x58>)
  400f02:	4798      	blx	r3
  400f04:	4005      	ands	r5, r0
  400f06:	d013      	beq.n	400f30 <pio_handler_process+0x40>
  400f08:	4c10      	ldr	r4, [pc, #64]	; (400f4c <pio_handler_process+0x5c>)
  400f0a:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400f0e:	e003      	b.n	400f18 <pio_handler_process+0x28>
  400f10:	42b4      	cmp	r4, r6
  400f12:	d00d      	beq.n	400f30 <pio_handler_process+0x40>
  400f14:	3410      	adds	r4, #16
  400f16:	b15d      	cbz	r5, 400f30 <pio_handler_process+0x40>
  400f18:	6820      	ldr	r0, [r4, #0]
  400f1a:	42b8      	cmp	r0, r7
  400f1c:	d1f8      	bne.n	400f10 <pio_handler_process+0x20>
  400f1e:	6861      	ldr	r1, [r4, #4]
  400f20:	4229      	tst	r1, r5
  400f22:	d0f5      	beq.n	400f10 <pio_handler_process+0x20>
  400f24:	68e3      	ldr	r3, [r4, #12]
  400f26:	4798      	blx	r3
  400f28:	6863      	ldr	r3, [r4, #4]
  400f2a:	ea25 0503 	bic.w	r5, r5, r3
  400f2e:	e7ef      	b.n	400f10 <pio_handler_process+0x20>
  400f30:	4b07      	ldr	r3, [pc, #28]	; (400f50 <pio_handler_process+0x60>)
  400f32:	681b      	ldr	r3, [r3, #0]
  400f34:	b123      	cbz	r3, 400f40 <pio_handler_process+0x50>
  400f36:	4b07      	ldr	r3, [pc, #28]	; (400f54 <pio_handler_process+0x64>)
  400f38:	681b      	ldr	r3, [r3, #0]
  400f3a:	b10b      	cbz	r3, 400f40 <pio_handler_process+0x50>
  400f3c:	4648      	mov	r0, r9
  400f3e:	4798      	blx	r3
  400f40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400f44:	00402fff 	.word	0x00402fff
  400f48:	00403003 	.word	0x00403003
  400f4c:	20000d2c 	.word	0x20000d2c
  400f50:	20000ea8 	.word	0x20000ea8
  400f54:	20000d9c 	.word	0x20000d9c

00400f58 <PIOA_Handler>:
  400f58:	b508      	push	{r3, lr}
  400f5a:	210b      	movs	r1, #11
  400f5c:	4801      	ldr	r0, [pc, #4]	; (400f64 <PIOA_Handler+0xc>)
  400f5e:	4b02      	ldr	r3, [pc, #8]	; (400f68 <PIOA_Handler+0x10>)
  400f60:	4798      	blx	r3
  400f62:	bd08      	pop	{r3, pc}
  400f64:	400e0e00 	.word	0x400e0e00
  400f68:	00400ef1 	.word	0x00400ef1

00400f6c <PIOB_Handler>:
  400f6c:	b508      	push	{r3, lr}
  400f6e:	210c      	movs	r1, #12
  400f70:	4801      	ldr	r0, [pc, #4]	; (400f78 <PIOB_Handler+0xc>)
  400f72:	4b02      	ldr	r3, [pc, #8]	; (400f7c <PIOB_Handler+0x10>)
  400f74:	4798      	blx	r3
  400f76:	bd08      	pop	{r3, pc}
  400f78:	400e1000 	.word	0x400e1000
  400f7c:	00400ef1 	.word	0x00400ef1

00400f80 <udd_sleep_mode>:
/*! \brief Authorize or not the CPU powerdown mode
 *
 * \param b_enable   true to authorize idle mode
 */
static void udd_sleep_mode(bool b_idle)
{
  400f80:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
  400f82:	4601      	mov	r1, r0
  400f84:	bb28      	cbnz	r0, 400fd2 <udd_sleep_mode+0x52>
  400f86:	4b24      	ldr	r3, [pc, #144]	; (401018 <udd_sleep_mode+0x98>)
  400f88:	781b      	ldrb	r3, [r3, #0]
  400f8a:	b91b      	cbnz	r3, 400f94 <udd_sleep_mode+0x14>
		sleepmgr_unlock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	if (b_idle && !udd_b_idle) {
		sleepmgr_lock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	udd_b_idle = b_idle;
  400f8c:	4b22      	ldr	r3, [pc, #136]	; (401018 <udd_sleep_mode+0x98>)
  400f8e:	7019      	strb	r1, [r3, #0]
}
  400f90:	b002      	add	sp, #8
  400f92:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
  400f94:	4b21      	ldr	r3, [pc, #132]	; (40101c <udd_sleep_mode+0x9c>)
  400f96:	789b      	ldrb	r3, [r3, #2]
  400f98:	b903      	cbnz	r3, 400f9c <udd_sleep_mode+0x1c>
  400f9a:	e7fe      	b.n	400f9a <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400f9c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400fa0:	fab3 f383 	clz	r3, r3
  400fa4:	095b      	lsrs	r3, r3, #5
  400fa6:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  400fa8:	b672      	cpsid	i
  400faa:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400fae:	2200      	movs	r2, #0
  400fb0:	4b1b      	ldr	r3, [pc, #108]	; (401020 <udd_sleep_mode+0xa0>)
  400fb2:	701a      	strb	r2, [r3, #0]
	return flags;
  400fb4:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
  400fb6:	4a19      	ldr	r2, [pc, #100]	; (40101c <udd_sleep_mode+0x9c>)
  400fb8:	7893      	ldrb	r3, [r2, #2]
  400fba:	3b01      	subs	r3, #1
  400fbc:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
  400fbe:	2800      	cmp	r0, #0
  400fc0:	d0e4      	beq.n	400f8c <udd_sleep_mode+0xc>
		cpu_irq_enable();
  400fc2:	2201      	movs	r2, #1
  400fc4:	4b16      	ldr	r3, [pc, #88]	; (401020 <udd_sleep_mode+0xa0>)
  400fc6:	701a      	strb	r2, [r3, #0]
  400fc8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400fcc:	b662      	cpsie	i
  400fce:	e7dd      	b.n	400f8c <udd_sleep_mode+0xc>
  400fd0:	e7fe      	b.n	400fd0 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
  400fd2:	4b11      	ldr	r3, [pc, #68]	; (401018 <udd_sleep_mode+0x98>)
  400fd4:	781b      	ldrb	r3, [r3, #0]
  400fd6:	2b00      	cmp	r3, #0
  400fd8:	d1d8      	bne.n	400f8c <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
  400fda:	4b10      	ldr	r3, [pc, #64]	; (40101c <udd_sleep_mode+0x9c>)
  400fdc:	789b      	ldrb	r3, [r3, #2]
  400fde:	2bff      	cmp	r3, #255	; 0xff
  400fe0:	d0f6      	beq.n	400fd0 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400fe2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400fe6:	fab3 f383 	clz	r3, r3
  400fea:	095b      	lsrs	r3, r3, #5
  400fec:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400fee:	b672      	cpsid	i
  400ff0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400ff4:	2200      	movs	r2, #0
  400ff6:	4b0a      	ldr	r3, [pc, #40]	; (401020 <udd_sleep_mode+0xa0>)
  400ff8:	701a      	strb	r2, [r3, #0]
	return flags;
  400ffa:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
  400ffc:	4a07      	ldr	r2, [pc, #28]	; (40101c <udd_sleep_mode+0x9c>)
  400ffe:	7893      	ldrb	r3, [r2, #2]
  401000:	3301      	adds	r3, #1
  401002:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
  401004:	2800      	cmp	r0, #0
  401006:	d0c1      	beq.n	400f8c <udd_sleep_mode+0xc>
		cpu_irq_enable();
  401008:	2201      	movs	r2, #1
  40100a:	4b05      	ldr	r3, [pc, #20]	; (401020 <udd_sleep_mode+0xa0>)
  40100c:	701a      	strb	r2, [r3, #0]
  40100e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401012:	b662      	cpsie	i
  401014:	e7ba      	b.n	400f8c <udd_sleep_mode+0xc>
  401016:	bf00      	nop
  401018:	20000da1 	.word	0x20000da1
  40101c:	20000e48 	.word	0x20000e48
  401020:	20000200 	.word	0x20000200

00401024 <udd_ctrl_init>:
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
	udd_g_ctrlreq.callback = NULL;
  401024:	4a03      	ldr	r2, [pc, #12]	; (401034 <udd_ctrl_init+0x10>)
  401026:	2300      	movs	r3, #0
  401028:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  40102a:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
  40102c:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
  40102e:	4a02      	ldr	r2, [pc, #8]	; (401038 <udd_ctrl_init+0x14>)
  401030:	7013      	strb	r3, [r2, #0]
  401032:	4770      	bx	lr
  401034:	20000e50 	.word	0x20000e50
  401038:	20000da6 	.word	0x20000da6

0040103c <udd_ctrl_stall_data>:
	udd_ack_bank0_received(0);
}


static void udd_ctrl_stall_data(void)
{
  40103c:	b082      	sub	sp, #8
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
  40103e:	2205      	movs	r2, #5
  401040:	4b0a      	ldr	r3, [pc, #40]	; (40106c <udd_ctrl_stall_data+0x30>)
  401042:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
  401044:	4a0a      	ldr	r2, [pc, #40]	; (401070 <udd_ctrl_stall_data+0x34>)
  401046:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401048:	9301      	str	r3, [sp, #4]
  40104a:	9b01      	ldr	r3, [sp, #4]
  40104c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401050:	9301      	str	r3, [sp, #4]
  401052:	9b01      	ldr	r3, [sp, #4]
  401054:	f043 0320 	orr.w	r3, r3, #32
  401058:	9301      	str	r3, [sp, #4]
  40105a:	9b01      	ldr	r3, [sp, #4]
  40105c:	6313      	str	r3, [r2, #48]	; 0x30
  40105e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401060:	f013 0f20 	tst.w	r3, #32
  401064:	d0fb      	beq.n	40105e <udd_ctrl_stall_data+0x22>
}
  401066:	b002      	add	sp, #8
  401068:	4770      	bx	lr
  40106a:	bf00      	nop
  40106c:	20000da6 	.word	0x20000da6
  401070:	40034000 	.word	0x40034000

00401074 <udd_ctrl_send_zlp_in>:


static void udd_ctrl_send_zlp_in(void)
{
  401074:	b082      	sub	sp, #8
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
  401076:	2203      	movs	r2, #3
  401078:	4b0a      	ldr	r3, [pc, #40]	; (4010a4 <udd_ctrl_send_zlp_in+0x30>)
  40107a:	701a      	strb	r2, [r3, #0]
	// Validate and send empty IN packet on control endpoint
	// Send ZLP on IN endpoint
	udd_set_transmit_ready(0);
  40107c:	4a0a      	ldr	r2, [pc, #40]	; (4010a8 <udd_ctrl_send_zlp_in+0x34>)
  40107e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401080:	9301      	str	r3, [sp, #4]
  401082:	9b01      	ldr	r3, [sp, #4]
  401084:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401088:	9301      	str	r3, [sp, #4]
  40108a:	9b01      	ldr	r3, [sp, #4]
  40108c:	f043 0310 	orr.w	r3, r3, #16
  401090:	9301      	str	r3, [sp, #4]
  401092:	9b01      	ldr	r3, [sp, #4]
  401094:	6313      	str	r3, [r2, #48]	; 0x30
  401096:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401098:	f013 0f10 	tst.w	r3, #16
  40109c:	d0fb      	beq.n	401096 <udd_ctrl_send_zlp_in+0x22>
}
  40109e:	b002      	add	sp, #8
  4010a0:	4770      	bx	lr
  4010a2:	bf00      	nop
  4010a4:	20000da6 	.word	0x20000da6
  4010a8:	40034000 	.word	0x40034000

004010ac <udd_ctrl_endofrequest>:
	// because the buffer of control endpoint is already free
}


static void udd_ctrl_endofrequest(void)
{
  4010ac:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
  4010ae:	4b02      	ldr	r3, [pc, #8]	; (4010b8 <udd_ctrl_endofrequest+0xc>)
  4010b0:	691b      	ldr	r3, [r3, #16]
  4010b2:	b103      	cbz	r3, 4010b6 <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
  4010b4:	4798      	blx	r3
  4010b6:	bd08      	pop	{r3, pc}
  4010b8:	20000e50 	.word	0x20000e50

004010bc <udd_ctrl_in_sent>:
{
  4010bc:	b530      	push	{r4, r5, lr}
  4010be:	b087      	sub	sp, #28
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
  4010c0:	4b63      	ldr	r3, [pc, #396]	; (401250 <udd_ctrl_in_sent+0x194>)
  4010c2:	781b      	ldrb	r3, [r3, #0]
  4010c4:	2b03      	cmp	r3, #3
  4010c6:	d029      	beq.n	40111c <udd_ctrl_in_sent+0x60>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
  4010c8:	4b62      	ldr	r3, [pc, #392]	; (401254 <udd_ctrl_in_sent+0x198>)
  4010ca:	881b      	ldrh	r3, [r3, #0]
  4010cc:	4a62      	ldr	r2, [pc, #392]	; (401258 <udd_ctrl_in_sent+0x19c>)
  4010ce:	8994      	ldrh	r4, [r2, #12]
  4010d0:	1ae4      	subs	r4, r4, r3
  4010d2:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
  4010d4:	2c00      	cmp	r4, #0
  4010d6:	d144      	bne.n	401162 <udd_ctrl_in_sent+0xa6>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  4010d8:	4a60      	ldr	r2, [pc, #384]	; (40125c <udd_ctrl_in_sent+0x1a0>)
  4010da:	8811      	ldrh	r1, [r2, #0]
  4010dc:	440b      	add	r3, r1
  4010de:	b29b      	uxth	r3, r3
  4010e0:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans)
  4010e2:	4a5d      	ldr	r2, [pc, #372]	; (401258 <udd_ctrl_in_sent+0x19c>)
  4010e4:	88d2      	ldrh	r2, [r2, #6]
  4010e6:	429a      	cmp	r2, r3
  4010e8:	d003      	beq.n	4010f2 <udd_ctrl_in_sent+0x36>
				|| b_shortpacket) {
  4010ea:	4b5d      	ldr	r3, [pc, #372]	; (401260 <udd_ctrl_in_sent+0x1a4>)
  4010ec:	781b      	ldrb	r3, [r3, #0]
  4010ee:	2b00      	cmp	r3, #0
  4010f0:	d02b      	beq.n	40114a <udd_ctrl_in_sent+0x8e>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  4010f2:	2204      	movs	r2, #4
  4010f4:	4b56      	ldr	r3, [pc, #344]	; (401250 <udd_ctrl_in_sent+0x194>)
  4010f6:	701a      	strb	r2, [r3, #0]
			udd_ack_in_sent(0);
  4010f8:	4a5a      	ldr	r2, [pc, #360]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  4010fa:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010fc:	9301      	str	r3, [sp, #4]
  4010fe:	9b01      	ldr	r3, [sp, #4]
  401100:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401104:	9301      	str	r3, [sp, #4]
  401106:	9b01      	ldr	r3, [sp, #4]
  401108:	f023 0301 	bic.w	r3, r3, #1
  40110c:	9301      	str	r3, [sp, #4]
  40110e:	9b01      	ldr	r3, [sp, #4]
  401110:	6313      	str	r3, [r2, #48]	; 0x30
  401112:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401114:	f013 0f01 	tst.w	r3, #1
  401118:	d1fb      	bne.n	401112 <udd_ctrl_in_sent+0x56>
  40111a:	e014      	b.n	401146 <udd_ctrl_in_sent+0x8a>
		udd_ack_in_sent(0);
  40111c:	4a51      	ldr	r2, [pc, #324]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  40111e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401120:	9300      	str	r3, [sp, #0]
  401122:	9b00      	ldr	r3, [sp, #0]
  401124:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401128:	9300      	str	r3, [sp, #0]
  40112a:	9b00      	ldr	r3, [sp, #0]
  40112c:	f023 0301 	bic.w	r3, r3, #1
  401130:	9300      	str	r3, [sp, #0]
  401132:	9b00      	ldr	r3, [sp, #0]
  401134:	6313      	str	r3, [r2, #48]	; 0x30
  401136:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401138:	f013 0f01 	tst.w	r3, #1
  40113c:	d1fb      	bne.n	401136 <udd_ctrl_in_sent+0x7a>
		udd_ctrl_endofrequest();
  40113e:	4b4a      	ldr	r3, [pc, #296]	; (401268 <udd_ctrl_in_sent+0x1ac>)
  401140:	4798      	blx	r3
		udd_ctrl_init();
  401142:	4b4a      	ldr	r3, [pc, #296]	; (40126c <udd_ctrl_in_sent+0x1b0>)
  401144:	4798      	blx	r3
}
  401146:	b007      	add	sp, #28
  401148:	bd30      	pop	{r4, r5, pc}
		if ((!udd_g_ctrlreq.over_under_run)
  40114a:	4b43      	ldr	r3, [pc, #268]	; (401258 <udd_ctrl_in_sent+0x19c>)
  40114c:	695b      	ldr	r3, [r3, #20]
  40114e:	2b00      	cmp	r3, #0
  401150:	d05d      	beq.n	40120e <udd_ctrl_in_sent+0x152>
				|| (!udd_g_ctrlreq.over_under_run())) {
  401152:	4798      	blx	r3
  401154:	2800      	cmp	r0, #0
  401156:	d05a      	beq.n	40120e <udd_ctrl_in_sent+0x152>
			udd_ctrl_payload_nb_trans = 0;
  401158:	2200      	movs	r2, #0
  40115a:	4b3e      	ldr	r3, [pc, #248]	; (401254 <udd_ctrl_in_sent+0x198>)
  40115c:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
  40115e:	4b3e      	ldr	r3, [pc, #248]	; (401258 <udd_ctrl_in_sent+0x19c>)
  401160:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
  401162:	2c3f      	cmp	r4, #63	; 0x3f
  401164:	d953      	bls.n	40120e <udd_ctrl_in_sent+0x152>
		b_shortpacket = false;
  401166:	2200      	movs	r2, #0
  401168:	4b3d      	ldr	r3, [pc, #244]	; (401260 <udd_ctrl_in_sent+0x1a4>)
  40116a:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
  40116c:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  40116e:	4b3a      	ldr	r3, [pc, #232]	; (401258 <udd_ctrl_in_sent+0x19c>)
  401170:	6899      	ldr	r1, [r3, #8]
  401172:	4b38      	ldr	r3, [pc, #224]	; (401254 <udd_ctrl_in_sent+0x198>)
  401174:	8818      	ldrh	r0, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401176:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40117a:	fab3 f383 	clz	r3, r3
  40117e:	095b      	lsrs	r3, r3, #5
  401180:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
  401182:	b672      	cpsid	i
  401184:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401188:	2200      	movs	r2, #0
  40118a:	4b39      	ldr	r3, [pc, #228]	; (401270 <udd_ctrl_in_sent+0x1b4>)
  40118c:	701a      	strb	r2, [r3, #0]
	return flags;
  40118e:	9d05      	ldr	r5, [sp, #20]
	if (Is_udd_bank0_received(0)) {
  401190:	4b34      	ldr	r3, [pc, #208]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  401192:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401194:	f013 0f02 	tst.w	r3, #2
  401198:	d13d      	bne.n	401216 <udd_ctrl_in_sent+0x15a>
	for (i = 0; i < nb_remain; i++) {
  40119a:	b14c      	cbz	r4, 4011b0 <udd_ctrl_in_sent+0xf4>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  40119c:	4401      	add	r1, r0
  40119e:	460a      	mov	r2, r1
		udd_endpoint_fifo_write(0, *ptr_src++);
  4011a0:	4830      	ldr	r0, [pc, #192]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  4011a2:	f812 3b01 	ldrb.w	r3, [r2], #1
  4011a6:	6503      	str	r3, [r0, #80]	; 0x50
	for (i = 0; i < nb_remain; i++) {
  4011a8:	1a53      	subs	r3, r2, r1
  4011aa:	b2db      	uxtb	r3, r3
  4011ac:	42a3      	cmp	r3, r4
  4011ae:	d3f8      	bcc.n	4011a2 <udd_ctrl_in_sent+0xe6>
	udd_ctrl_payload_nb_trans += nb_remain;
  4011b0:	4b28      	ldr	r3, [pc, #160]	; (401254 <udd_ctrl_in_sent+0x198>)
  4011b2:	881a      	ldrh	r2, [r3, #0]
  4011b4:	4414      	add	r4, r2
  4011b6:	801c      	strh	r4, [r3, #0]
	udd_set_transmit_ready(0);
  4011b8:	4a2a      	ldr	r2, [pc, #168]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  4011ba:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011bc:	9303      	str	r3, [sp, #12]
  4011be:	9b03      	ldr	r3, [sp, #12]
  4011c0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4011c4:	9303      	str	r3, [sp, #12]
  4011c6:	9b03      	ldr	r3, [sp, #12]
  4011c8:	f043 0310 	orr.w	r3, r3, #16
  4011cc:	9303      	str	r3, [sp, #12]
  4011ce:	9b03      	ldr	r3, [sp, #12]
  4011d0:	6313      	str	r3, [r2, #48]	; 0x30
  4011d2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011d4:	f013 0f10 	tst.w	r3, #16
  4011d8:	d0fb      	beq.n	4011d2 <udd_ctrl_in_sent+0x116>
	udd_ack_in_sent(0);
  4011da:	4a22      	ldr	r2, [pc, #136]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  4011dc:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011de:	9304      	str	r3, [sp, #16]
  4011e0:	9b04      	ldr	r3, [sp, #16]
  4011e2:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4011e6:	9304      	str	r3, [sp, #16]
  4011e8:	9b04      	ldr	r3, [sp, #16]
  4011ea:	f023 0301 	bic.w	r3, r3, #1
  4011ee:	9304      	str	r3, [sp, #16]
  4011f0:	9b04      	ldr	r3, [sp, #16]
  4011f2:	6313      	str	r3, [r2, #48]	; 0x30
  4011f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011f6:	f013 0f01 	tst.w	r3, #1
  4011fa:	d1fb      	bne.n	4011f4 <udd_ctrl_in_sent+0x138>
	if (cpu_irq_is_enabled_flags(flags))
  4011fc:	2d00      	cmp	r5, #0
  4011fe:	d0a2      	beq.n	401146 <udd_ctrl_in_sent+0x8a>
		cpu_irq_enable();
  401200:	2201      	movs	r2, #1
  401202:	4b1b      	ldr	r3, [pc, #108]	; (401270 <udd_ctrl_in_sent+0x1b4>)
  401204:	701a      	strb	r2, [r3, #0]
  401206:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40120a:	b662      	cpsie	i
  40120c:	e79b      	b.n	401146 <udd_ctrl_in_sent+0x8a>
		b_shortpacket = true;
  40120e:	2201      	movs	r2, #1
  401210:	4b13      	ldr	r3, [pc, #76]	; (401260 <udd_ctrl_in_sent+0x1a4>)
  401212:	701a      	strb	r2, [r3, #0]
  401214:	e7ab      	b.n	40116e <udd_ctrl_in_sent+0xb2>
	if (cpu_irq_is_enabled_flags(flags))
  401216:	b12d      	cbz	r5, 401224 <udd_ctrl_in_sent+0x168>
		cpu_irq_enable();
  401218:	2201      	movs	r2, #1
  40121a:	4b15      	ldr	r3, [pc, #84]	; (401270 <udd_ctrl_in_sent+0x1b4>)
  40121c:	701a      	strb	r2, [r3, #0]
  40121e:	f3bf 8f5f 	dmb	sy
  401222:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  401224:	2204      	movs	r2, #4
  401226:	4b0a      	ldr	r3, [pc, #40]	; (401250 <udd_ctrl_in_sent+0x194>)
  401228:	701a      	strb	r2, [r3, #0]
		udd_ack_in_sent(0);
  40122a:	4a0e      	ldr	r2, [pc, #56]	; (401264 <udd_ctrl_in_sent+0x1a8>)
  40122c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40122e:	9302      	str	r3, [sp, #8]
  401230:	9b02      	ldr	r3, [sp, #8]
  401232:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401236:	9302      	str	r3, [sp, #8]
  401238:	9b02      	ldr	r3, [sp, #8]
  40123a:	f023 0301 	bic.w	r3, r3, #1
  40123e:	9302      	str	r3, [sp, #8]
  401240:	9b02      	ldr	r3, [sp, #8]
  401242:	6313      	str	r3, [r2, #48]	; 0x30
  401244:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401246:	f013 0f01 	tst.w	r3, #1
  40124a:	d1fb      	bne.n	401244 <udd_ctrl_in_sent+0x188>
  40124c:	e77b      	b.n	401146 <udd_ctrl_in_sent+0x8a>
  40124e:	bf00      	nop
  401250:	20000da6 	.word	0x20000da6
  401254:	20000da2 	.word	0x20000da2
  401258:	20000e50 	.word	0x20000e50
  40125c:	20000da4 	.word	0x20000da4
  401260:	20000da0 	.word	0x20000da0
  401264:	40034000 	.word	0x40034000
  401268:	004010ad 	.word	0x004010ad
  40126c:	00401025 	.word	0x00401025
  401270:	20000200 	.word	0x20000200

00401274 <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, int status,
		uint8_t ep_num)
{
  401274:	b538      	push	{r3, r4, r5, lr}
	if (ptr_job->busy == false) {
  401276:	7c43      	ldrb	r3, [r0, #17]
  401278:	f013 0f10 	tst.w	r3, #16
  40127c:	d016      	beq.n	4012ac <udd_ep_finish_job+0x38>
  40127e:	460d      	mov	r5, r1
		return; // No on-going job
	}
	ptr_job->busy = false;
  401280:	7c43      	ldrb	r3, [r0, #17]
  401282:	f36f 1304 	bfc	r3, #4, #1
  401286:	7443      	strb	r3, [r0, #17]
	if (NULL == ptr_job->call_trans) {
  401288:	6804      	ldr	r4, [r0, #0]
  40128a:	b17c      	cbz	r4, 4012ac <udd_ep_finish_job+0x38>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_type_in(ep_num)) {
  40128c:	f102 030c 	add.w	r3, r2, #12
  401290:	4907      	ldr	r1, [pc, #28]	; (4012b0 <udd_ep_finish_job+0x3c>)
  401292:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
  401296:	f413 6f80 	tst.w	r3, #1024	; 0x400
		ep_num |= USB_EP_DIR_IN;
  40129a:	bf18      	it	ne
  40129c:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}	
	ptr_job->call_trans((status == UDD_EP_TRANSFER_ABORT) ?
  4012a0:	6881      	ldr	r1, [r0, #8]
  4012a2:	2d01      	cmp	r5, #1
  4012a4:	bf14      	ite	ne
  4012a6:	2000      	movne	r0, #0
  4012a8:	2001      	moveq	r0, #1
  4012aa:	47a0      	blx	r4
  4012ac:	bd38      	pop	{r3, r4, r5, pc}
  4012ae:	bf00      	nop
  4012b0:	40034000 	.word	0x40034000

004012b4 <udd_ep_ack_out_received>:
		UDD_EP_TRANSFER_ABORT : UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}


static void udd_ep_ack_out_received(udd_ep_id_t ep)
{
  4012b4:	b430      	push	{r4, r5}
  4012b6:	b082      	sub	sp, #8
	bool bank0_received, bank1_received;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  4012b8:	1e41      	subs	r1, r0, #1
  4012ba:	0083      	lsls	r3, r0, #2
  4012bc:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  4012c0:	f503 3340 	add.w	r3, r3, #196608	; 0x30000

	bank0_received = Is_udd_bank0_received(ep);
  4012c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	bank1_received = Is_udd_bank1_received(ep);
  4012c6:	6b1c      	ldr	r4, [r3, #48]	; 0x30

	if (bank0_received && bank1_received) {
  4012c8:	f012 0f02 	tst.w	r2, #2
  4012cc:	d032      	beq.n	401334 <udd_ep_ack_out_received+0x80>
  4012ce:	f014 0f40 	tst.w	r4, #64	; 0x40
  4012d2:	d108      	bne.n	4012e6 <udd_ep_ack_out_received+0x32>
		// The only way is to use ptr_job->bank
	} else if (bank0_received) {
		// Must be bank0
		ptr_job->bank = 0;
  4012d4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4012d8:	4c2a      	ldr	r4, [pc, #168]	; (401384 <udd_ep_ack_out_received+0xd0>)
  4012da:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4012de:	7c54      	ldrb	r4, [r2, #17]
  4012e0:	f36f 0483 	bfc	r4, #2, #2
  4012e4:	7454      	strb	r4, [r2, #17]
	} else {
		// Must be bank1
		ptr_job->bank = 1;
	}
	if (ptr_job->bank == 0) {
  4012e6:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4012ea:	4c26      	ldr	r4, [pc, #152]	; (401384 <udd_ep_ack_out_received+0xd0>)
  4012ec:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4012f0:	7c52      	ldrb	r2, [r2, #17]
  4012f2:	f012 0f0c 	tst.w	r2, #12
  4012f6:	d128      	bne.n	40134a <udd_ep_ack_out_received+0x96>
		udd_ack_bank0_received(ep);
  4012f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4012fa:	9200      	str	r2, [sp, #0]
  4012fc:	9a00      	ldr	r2, [sp, #0]
  4012fe:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  401302:	9200      	str	r2, [sp, #0]
  401304:	9a00      	ldr	r2, [sp, #0]
  401306:	f022 0202 	bic.w	r2, r2, #2
  40130a:	9200      	str	r2, [sp, #0]
  40130c:	9a00      	ldr	r2, [sp, #0]
  40130e:	631a      	str	r2, [r3, #48]	; 0x30
  401310:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401312:	f012 0f02 	tst.w	r2, #2
  401316:	d1fb      	bne.n	401310 <udd_ep_ack_out_received+0x5c>
		if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
  401318:	b380      	cbz	r0, 40137c <udd_ep_ack_out_received+0xc8>
  40131a:	2803      	cmp	r0, #3
  40131c:	d02e      	beq.n	40137c <udd_ep_ack_out_received+0xc8>
			ptr_job->bank = 1;
  40131e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  401322:	4b18      	ldr	r3, [pc, #96]	; (401384 <udd_ep_ack_out_received+0xd0>)
  401324:	eb03 0381 	add.w	r3, r3, r1, lsl #2
  401328:	7c5a      	ldrb	r2, [r3, #17]
  40132a:	2101      	movs	r1, #1
  40132c:	f361 0283 	bfi	r2, r1, #2, #2
  401330:	745a      	strb	r2, [r3, #17]
  401332:	e023      	b.n	40137c <udd_ep_ack_out_received+0xc8>
		ptr_job->bank = 1;
  401334:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  401338:	4c12      	ldr	r4, [pc, #72]	; (401384 <udd_ep_ack_out_received+0xd0>)
  40133a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  40133e:	7c54      	ldrb	r4, [r2, #17]
  401340:	2501      	movs	r5, #1
  401342:	f365 0483 	bfi	r4, r5, #2, #2
  401346:	7454      	strb	r4, [r2, #17]
  401348:	e7cd      	b.n	4012e6 <udd_ep_ack_out_received+0x32>
		}
	} else {
		udd_ack_bank1_received(ep);
  40134a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40134c:	9201      	str	r2, [sp, #4]
  40134e:	9a01      	ldr	r2, [sp, #4]
  401350:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  401354:	9201      	str	r2, [sp, #4]
  401356:	9a01      	ldr	r2, [sp, #4]
  401358:	f022 0240 	bic.w	r2, r2, #64	; 0x40
  40135c:	9201      	str	r2, [sp, #4]
  40135e:	9a01      	ldr	r2, [sp, #4]
  401360:	631a      	str	r2, [r3, #48]	; 0x30
  401362:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401364:	f012 0f40 	tst.w	r2, #64	; 0x40
  401368:	d1fb      	bne.n	401362 <udd_ep_ack_out_received+0xae>
		ptr_job->bank = 0;
  40136a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  40136e:	4b05      	ldr	r3, [pc, #20]	; (401384 <udd_ep_ack_out_received+0xd0>)
  401370:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  401374:	7c4b      	ldrb	r3, [r1, #17]
  401376:	f36f 0383 	bfc	r3, #2, #2
  40137a:	744b      	strb	r3, [r1, #17]
	}
}
  40137c:	b002      	add	sp, #8
  40137e:	bc30      	pop	{r4, r5}
  401380:	4770      	bx	lr
  401382:	bf00      	nop
  401384:	20000da8 	.word	0x20000da8

00401388 <udd_ep_in_sent>:
	return is_short_pkt;
}


static bool udd_ep_in_sent(udd_ep_id_t ep, bool b_tx)
{
  401388:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40138c:	b083      	sub	sp, #12
  40138e:	4688      	mov	r8, r1
	bool b_shortpacket;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  401390:	4681      	mov	r9, r0
  401392:	1e46      	subs	r6, r0, #1

	// All banks are full
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  401394:	eb06 0286 	add.w	r2, r6, r6, lsl #2
  401398:	4b66      	ldr	r3, [pc, #408]	; (401534 <udd_ep_in_sent+0x1ac>)
  40139a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40139e:	f893 c011 	ldrb.w	ip, [r3, #17]
  4013a2:	f3cc 0c81 	ubfx	ip, ip, #2, #2
  4013a6:	2800      	cmp	r0, #0
  4013a8:	f000 80b7 	beq.w	40151a <udd_ep_in_sent+0x192>
  4013ac:	2803      	cmp	r0, #3
  4013ae:	bf0c      	ite	eq
  4013b0:	2301      	moveq	r3, #1
  4013b2:	2302      	movne	r3, #2
  4013b4:	4563      	cmp	r3, ip
  4013b6:	f340 80b2 	ble.w	40151e <udd_ep_in_sent+0x196>
		return true; // Data pending
	}

	// No more data in buffer
	if (ptr_job->buf_cnt >= ptr_job->buf_size && !ptr_job->b_shortpacket) {
  4013ba:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4013be:	4a5d      	ldr	r2, [pc, #372]	; (401534 <udd_ep_in_sent+0x1ac>)
  4013c0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4013c4:	68da      	ldr	r2, [r3, #12]
  4013c6:	689b      	ldr	r3, [r3, #8]
  4013c8:	429a      	cmp	r2, r3
  4013ca:	d309      	bcc.n	4013e0 <udd_ep_in_sent+0x58>
  4013cc:	eb06 0186 	add.w	r1, r6, r6, lsl #2
  4013d0:	4c58      	ldr	r4, [pc, #352]	; (401534 <udd_ep_in_sent+0x1ac>)
  4013d2:	eb04 0181 	add.w	r1, r4, r1, lsl #2
  4013d6:	7c49      	ldrb	r1, [r1, #17]
  4013d8:	f011 0f40 	tst.w	r1, #64	; 0x40
  4013dc:	f000 80a3 	beq.w	401526 <udd_ep_in_sent+0x19e>
	uint8_t *ptr_src = &ptr_job->buf[ptr_job->buf_cnt];
  4013e0:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  4013e4:	4953      	ldr	r1, [pc, #332]	; (401534 <udd_ep_in_sent+0x1ac>)
  4013e6:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  4013ea:	686c      	ldr	r4, [r5, #4]
  4013ec:	4414      	add	r4, r2
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  4013ee:	1a99      	subs	r1, r3, r2
	uint32_t pkt_size = ptr_job->size;
  4013f0:	8a2b      	ldrh	r3, [r5, #16]
  4013f2:	f3c3 0709 	ubfx	r7, r3, #0, #10
	if (nb_remain < pkt_size) {
  4013f6:	42b9      	cmp	r1, r7
		pkt_size = nb_remain;
  4013f8:	bf3a      	itte	cc
  4013fa:	460f      	movcc	r7, r1
		is_short_pkt = true;
  4013fc:	f04f 0e01 	movcc.w	lr, #1
	bool is_short_pkt = false;
  401400:	f04f 0e00 	movcs.w	lr, #0
	ptr_job->buf_cnt += pkt_size;
  401404:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  401408:	494a      	ldr	r1, [pc, #296]	; (401534 <udd_ep_in_sent+0x1ac>)
  40140a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  40140e:	443a      	add	r2, r7
  401410:	60da      	str	r2, [r3, #12]
	for (; pkt_size >= 8; pkt_size -= 8) {
  401412:	2f07      	cmp	r7, #7
  401414:	d92b      	bls.n	40146e <udd_ep_in_sent+0xe6>
  401416:	f104 0308 	add.w	r3, r4, #8
  40141a:	463d      	mov	r5, r7
  40141c:	0082      	lsls	r2, r0, #2
  40141e:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  401422:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401426:	f813 1c08 	ldrb.w	r1, [r3, #-8]
  40142a:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40142c:	f813 1c07 	ldrb.w	r1, [r3, #-7]
  401430:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401432:	f813 1c06 	ldrb.w	r1, [r3, #-6]
  401436:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401438:	f813 1c05 	ldrb.w	r1, [r3, #-5]
  40143c:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40143e:	f813 1c04 	ldrb.w	r1, [r3, #-4]
  401442:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401444:	f813 1c03 	ldrb.w	r1, [r3, #-3]
  401448:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40144a:	f813 1c02 	ldrb.w	r1, [r3, #-2]
  40144e:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401450:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  401454:	6511      	str	r1, [r2, #80]	; 0x50
	for (; pkt_size >= 8; pkt_size -= 8) {
  401456:	3d08      	subs	r5, #8
  401458:	3308      	adds	r3, #8
  40145a:	2d07      	cmp	r5, #7
  40145c:	d8e3      	bhi.n	401426 <udd_ep_in_sent+0x9e>
  40145e:	f1a7 0308 	sub.w	r3, r7, #8
  401462:	f023 0307 	bic.w	r3, r3, #7
  401466:	3308      	adds	r3, #8
  401468:	441c      	add	r4, r3
  40146a:	f007 0707 	and.w	r7, r7, #7
	for (; pkt_size; pkt_size--) {
  40146e:	b14f      	cbz	r7, 401484 <udd_ep_in_sent+0xfc>
  401470:	19e3      	adds	r3, r4, r7
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401472:	4931      	ldr	r1, [pc, #196]	; (401538 <udd_ep_in_sent+0x1b0>)
  401474:	f109 0914 	add.w	r9, r9, #20
  401478:	f814 2b01 	ldrb.w	r2, [r4], #1
  40147c:	f841 2029 	str.w	r2, [r1, r9, lsl #2]
	for (; pkt_size; pkt_size--) {
  401480:	429c      	cmp	r4, r3
  401482:	d1f9      	bne.n	401478 <udd_ep_in_sent+0xf0>
	ptr_job->bank++;
  401484:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  401488:	4a2a      	ldr	r2, [pc, #168]	; (401534 <udd_ep_in_sent+0x1ac>)
  40148a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40148e:	f10c 0c01 	add.w	ip, ip, #1
  401492:	7c5a      	ldrb	r2, [r3, #17]
  401494:	f36c 0283 	bfi	r2, ip, #2, #2
  401498:	745a      	strb	r2, [r3, #17]

	// Fill FIFO
	b_shortpacket = udd_ep_write_fifo(ep);

	// Data is ready to send
	if (b_tx) {
  40149a:	f1b8 0f00 	cmp.w	r8, #0
  40149e:	d014      	beq.n	4014ca <udd_ep_in_sent+0x142>
  4014a0:	0080      	lsls	r0, r0, #2
  4014a2:	f100 2040 	add.w	r0, r0, #1073758208	; 0x40004000
  4014a6:	f500 3040 	add.w	r0, r0, #196608	; 0x30000
		udd_set_transmit_ready(ep);
  4014aa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4014ac:	9301      	str	r3, [sp, #4]
  4014ae:	9b01      	ldr	r3, [sp, #4]
  4014b0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4014b4:	9301      	str	r3, [sp, #4]
  4014b6:	9b01      	ldr	r3, [sp, #4]
  4014b8:	f043 0310 	orr.w	r3, r3, #16
  4014bc:	9301      	str	r3, [sp, #4]
  4014be:	9b01      	ldr	r3, [sp, #4]
  4014c0:	6303      	str	r3, [r0, #48]	; 0x30
  4014c2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4014c4:	f013 0f10 	tst.w	r3, #16
  4014c8:	d0fb      	beq.n	4014c2 <udd_ep_in_sent+0x13a>
	}
	// Short PKT? no need to send it again.
	if (b_shortpacket) {
  4014ca:	f1be 0f00 	cmp.w	lr, #0
  4014ce:	d008      	beq.n	4014e2 <udd_ep_in_sent+0x15a>
		ptr_job->b_shortpacket = false;
  4014d0:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4014d4:	4a17      	ldr	r2, [pc, #92]	; (401534 <udd_ep_in_sent+0x1ac>)
  4014d6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4014da:	7c5a      	ldrb	r2, [r3, #17]
  4014dc:	f36f 1286 	bfc	r2, #6, #1
  4014e0:	745a      	strb	r2, [r3, #17]
	}
	// All transfer done, including ZLP, Finish Job
	if ((ptr_job->buf_cnt >= ptr_job->buf_size)
  4014e2:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4014e6:	4a13      	ldr	r2, [pc, #76]	; (401534 <udd_ep_in_sent+0x1ac>)
  4014e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4014ec:	68da      	ldr	r2, [r3, #12]
  4014ee:	689b      	ldr	r3, [r3, #8]
  4014f0:	429a      	cmp	r2, r3
  4014f2:	d31a      	bcc.n	40152a <udd_ep_in_sent+0x1a2>
			&& (!ptr_job->b_shortpacket)) {
  4014f4:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4014f8:	4a0e      	ldr	r2, [pc, #56]	; (401534 <udd_ep_in_sent+0x1ac>)
  4014fa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4014fe:	7c5b      	ldrb	r3, [r3, #17]
  401500:	f013 0f40 	tst.w	r3, #64	; 0x40
  401504:	d113      	bne.n	40152e <udd_ep_in_sent+0x1a6>
		ptr_job->b_buf_end = true;
  401506:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40150a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  40150e:	7c73      	ldrb	r3, [r6, #17]
  401510:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401514:	7473      	strb	r3, [r6, #17]
		return false;
  401516:	2000      	movs	r0, #0
  401518:	e002      	b.n	401520 <udd_ep_in_sent+0x198>
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  40151a:	2301      	movs	r3, #1
  40151c:	e74a      	b.n	4013b4 <udd_ep_in_sent+0x2c>
		return true; // Data pending
  40151e:	2001      	movs	r0, #1
	}
	return true; // Pending
}
  401520:	b003      	add	sp, #12
  401522:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		return false;
  401526:	2000      	movs	r0, #0
  401528:	e7fa      	b.n	401520 <udd_ep_in_sent+0x198>
	return true; // Pending
  40152a:	2001      	movs	r0, #1
  40152c:	e7f8      	b.n	401520 <udd_ep_in_sent+0x198>
  40152e:	2001      	movs	r0, #1
  401530:	e7f6      	b.n	401520 <udd_ep_in_sent+0x198>
  401532:	bf00      	nop
  401534:	20000da8 	.word	0x20000da8
  401538:	40034000 	.word	0x40034000

0040153c <UDP_Handler>:
{
  40153c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401540:	b09b      	sub	sp, #108	; 0x6c
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
  401542:	4b86      	ldr	r3, [pc, #536]	; (40175c <UDP_Handler+0x220>)
  401544:	4798      	blx	r3
  401546:	b920      	cbnz	r0, 401552 <UDP_Handler+0x16>
  401548:	4b85      	ldr	r3, [pc, #532]	; (401760 <UDP_Handler+0x224>)
  40154a:	69db      	ldr	r3, [r3, #28]
  40154c:	f413 7f80 	tst.w	r3, #256	; 0x100
  401550:	d03b      	beq.n	4015ca <UDP_Handler+0x8e>
	udd_enable_periph_ck();
  401552:	2022      	movs	r0, #34	; 0x22
  401554:	4b83      	ldr	r3, [pc, #524]	; (401764 <UDP_Handler+0x228>)
  401556:	4798      	blx	r3
	if (Is_udd_sof_interrupt_enabled() && Is_udd_sof()) {
  401558:	4b81      	ldr	r3, [pc, #516]	; (401760 <UDP_Handler+0x224>)
  40155a:	699b      	ldr	r3, [r3, #24]
  40155c:	f413 6f00 	tst.w	r3, #2048	; 0x800
  401560:	d004      	beq.n	40156c <UDP_Handler+0x30>
  401562:	4b7f      	ldr	r3, [pc, #508]	; (401760 <UDP_Handler+0x224>)
  401564:	69db      	ldr	r3, [r3, #28]
  401566:	f413 6f00 	tst.w	r3, #2048	; 0x800
  40156a:	d137      	bne.n	4015dc <UDP_Handler+0xa0>
	if (!Is_udd_endpoint_interrupt(0))
  40156c:	4b7c      	ldr	r3, [pc, #496]	; (401760 <UDP_Handler+0x224>)
  40156e:	69db      	ldr	r3, [r3, #28]
  401570:	f013 0f01 	tst.w	r3, #1
  401574:	f000 81b6 	beq.w	4018e4 <UDP_Handler+0x3a8>
	if (Is_udd_setup_received(0)) {
  401578:	4b79      	ldr	r3, [pc, #484]	; (401760 <UDP_Handler+0x224>)
  40157a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40157c:	f013 0f04 	tst.w	r3, #4
  401580:	d133      	bne.n	4015ea <UDP_Handler+0xae>
	if (Is_udd_in_sent(0)) {
  401582:	4b77      	ldr	r3, [pc, #476]	; (401760 <UDP_Handler+0x224>)
  401584:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401586:	f013 0f01 	tst.w	r3, #1
  40158a:	f040 80c3 	bne.w	401714 <UDP_Handler+0x1d8>
	if (Is_udd_bank0_received(0)) {
  40158e:	4b74      	ldr	r3, [pc, #464]	; (401760 <UDP_Handler+0x224>)
  401590:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401592:	f013 0f02 	tst.w	r3, #2
  401596:	f040 80c0 	bne.w	40171a <UDP_Handler+0x1de>
	if (Is_udd_stall(0)) {
  40159a:	4b71      	ldr	r3, [pc, #452]	; (401760 <UDP_Handler+0x224>)
  40159c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40159e:	f013 0f08 	tst.w	r3, #8
  4015a2:	f000 819f 	beq.w	4018e4 <UDP_Handler+0x3a8>
		udd_ack_stall(0);
  4015a6:	4a6e      	ldr	r2, [pc, #440]	; (401760 <UDP_Handler+0x224>)
  4015a8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015aa:	9300      	str	r3, [sp, #0]
  4015ac:	9b00      	ldr	r3, [sp, #0]
  4015ae:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4015b2:	9300      	str	r3, [sp, #0]
  4015b4:	9b00      	ldr	r3, [sp, #0]
  4015b6:	f023 0308 	bic.w	r3, r3, #8
  4015ba:	9300      	str	r3, [sp, #0]
  4015bc:	9b00      	ldr	r3, [sp, #0]
  4015be:	6313      	str	r3, [r2, #48]	; 0x30
  4015c0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015c2:	f013 0f08 	tst.w	r3, #8
  4015c6:	d1fb      	bne.n	4015c0 <UDP_Handler+0x84>
  4015c8:	e005      	b.n	4015d6 <UDP_Handler+0x9a>
  __ASM volatile ("cpsid i" : : : "memory");
  4015ca:	b672      	cpsid	i
  4015cc:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
  4015d0:	2200      	movs	r2, #0
  4015d2:	4b65      	ldr	r3, [pc, #404]	; (401768 <UDP_Handler+0x22c>)
  4015d4:	701a      	strb	r2, [r3, #0]
}
  4015d6:	b01b      	add	sp, #108	; 0x6c
  4015d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		udd_ack_sof();
  4015dc:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4015e0:	4b5f      	ldr	r3, [pc, #380]	; (401760 <UDP_Handler+0x224>)
  4015e2:	621a      	str	r2, [r3, #32]
		udc_sof_notify();
  4015e4:	4b61      	ldr	r3, [pc, #388]	; (40176c <UDP_Handler+0x230>)
  4015e6:	4798      	blx	r3
		goto udd_interrupt_sof_end;
  4015e8:	e7f5      	b.n	4015d6 <UDP_Handler+0x9a>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
  4015ea:	4b61      	ldr	r3, [pc, #388]	; (401770 <UDP_Handler+0x234>)
  4015ec:	781b      	ldrb	r3, [r3, #0]
  4015ee:	b9cb      	cbnz	r3, 401624 <UDP_Handler+0xe8>
	if (8 != udd_byte_count(0)) {
  4015f0:	4b5b      	ldr	r3, [pc, #364]	; (401760 <UDP_Handler+0x224>)
  4015f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4015f4:	f3c3 430a 	ubfx	r3, r3, #16, #11
  4015f8:	2b08      	cmp	r3, #8
  4015fa:	d018      	beq.n	40162e <UDP_Handler+0xf2>
		udd_ack_setup_received(0);
  4015fc:	4a58      	ldr	r2, [pc, #352]	; (401760 <UDP_Handler+0x224>)
  4015fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401600:	9301      	str	r3, [sp, #4]
  401602:	9b01      	ldr	r3, [sp, #4]
  401604:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401608:	9301      	str	r3, [sp, #4]
  40160a:	9b01      	ldr	r3, [sp, #4]
  40160c:	f023 0304 	bic.w	r3, r3, #4
  401610:	9301      	str	r3, [sp, #4]
  401612:	9b01      	ldr	r3, [sp, #4]
  401614:	6313      	str	r3, [r2, #48]	; 0x30
  401616:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401618:	f013 0f04 	tst.w	r3, #4
  40161c:	d1fb      	bne.n	401616 <UDP_Handler+0xda>
		udd_ctrl_stall_data();
  40161e:	4b55      	ldr	r3, [pc, #340]	; (401774 <UDP_Handler+0x238>)
  401620:	4798      	blx	r3
  401622:	e7d8      	b.n	4015d6 <UDP_Handler+0x9a>
		udd_ctrl_endofrequest();
  401624:	4b54      	ldr	r3, [pc, #336]	; (401778 <UDP_Handler+0x23c>)
  401626:	4798      	blx	r3
		udd_ctrl_init();
  401628:	4b54      	ldr	r3, [pc, #336]	; (40177c <UDP_Handler+0x240>)
  40162a:	4798      	blx	r3
  40162c:	e7e0      	b.n	4015f0 <UDP_Handler+0xb4>
  40162e:	4b54      	ldr	r3, [pc, #336]	; (401780 <UDP_Handler+0x244>)
  401630:	f103 0008 	add.w	r0, r3, #8
			udd_endpoint_fifo_read(0);
  401634:	494a      	ldr	r1, [pc, #296]	; (401760 <UDP_Handler+0x224>)
  401636:	6d0a      	ldr	r2, [r1, #80]	; 0x50
		((uint8_t *) & udd_g_ctrlreq.req)[i] =
  401638:	f803 2f01 	strb.w	r2, [r3, #1]!
	for (i = 0; i < 8; i++) {
  40163c:	4283      	cmp	r3, r0
  40163e:	d1fa      	bne.n	401636 <UDP_Handler+0xfa>
	if (udc_process_setup() == false) {
  401640:	4b50      	ldr	r3, [pc, #320]	; (401784 <UDP_Handler+0x248>)
  401642:	4798      	blx	r3
  401644:	b998      	cbnz	r0, 40166e <UDP_Handler+0x132>
		udd_ack_setup_received(0);
  401646:	4a46      	ldr	r2, [pc, #280]	; (401760 <UDP_Handler+0x224>)
  401648:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40164a:	9302      	str	r3, [sp, #8]
  40164c:	9b02      	ldr	r3, [sp, #8]
  40164e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401652:	9302      	str	r3, [sp, #8]
  401654:	9b02      	ldr	r3, [sp, #8]
  401656:	f023 0304 	bic.w	r3, r3, #4
  40165a:	9302      	str	r3, [sp, #8]
  40165c:	9b02      	ldr	r3, [sp, #8]
  40165e:	6313      	str	r3, [r2, #48]	; 0x30
  401660:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401662:	f013 0f04 	tst.w	r3, #4
  401666:	d1fb      	bne.n	401660 <UDP_Handler+0x124>
		udd_ctrl_stall_data();
  401668:	4b42      	ldr	r3, [pc, #264]	; (401774 <UDP_Handler+0x238>)
  40166a:	4798      	blx	r3
  40166c:	e7b3      	b.n	4015d6 <UDP_Handler+0x9a>
	if (Udd_setup_is_in()) {
  40166e:	4b46      	ldr	r3, [pc, #280]	; (401788 <UDP_Handler+0x24c>)
  401670:	f993 3000 	ldrsb.w	r3, [r3]
  401674:	2b00      	cmp	r3, #0
  401676:	db1d      	blt.n	4016b4 <UDP_Handler+0x178>
		udd_ack_setup_received(0);
  401678:	4a39      	ldr	r2, [pc, #228]	; (401760 <UDP_Handler+0x224>)
  40167a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40167c:	9305      	str	r3, [sp, #20]
  40167e:	9b05      	ldr	r3, [sp, #20]
  401680:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401684:	9305      	str	r3, [sp, #20]
  401686:	9b05      	ldr	r3, [sp, #20]
  401688:	f023 0304 	bic.w	r3, r3, #4
  40168c:	9305      	str	r3, [sp, #20]
  40168e:	9b05      	ldr	r3, [sp, #20]
  401690:	6313      	str	r3, [r2, #48]	; 0x30
  401692:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401694:	f013 0f04 	tst.w	r3, #4
  401698:	d1fb      	bne.n	401692 <UDP_Handler+0x156>
		if (0 == udd_g_ctrlreq.req.wLength) {
  40169a:	4b3b      	ldr	r3, [pc, #236]	; (401788 <UDP_Handler+0x24c>)
  40169c:	88db      	ldrh	r3, [r3, #6]
  40169e:	2b00      	cmp	r3, #0
  4016a0:	d035      	beq.n	40170e <UDP_Handler+0x1d2>
		udd_ctrl_prev_payload_nb_trans = 0;
  4016a2:	2300      	movs	r3, #0
  4016a4:	4a39      	ldr	r2, [pc, #228]	; (40178c <UDP_Handler+0x250>)
  4016a6:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  4016a8:	4a39      	ldr	r2, [pc, #228]	; (401790 <UDP_Handler+0x254>)
  4016aa:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
  4016ac:	2201      	movs	r2, #1
  4016ae:	4b30      	ldr	r3, [pc, #192]	; (401770 <UDP_Handler+0x234>)
  4016b0:	701a      	strb	r2, [r3, #0]
  4016b2:	e790      	b.n	4015d6 <UDP_Handler+0x9a>
		udd_set_endpoint_direction_in(0);
  4016b4:	4a2a      	ldr	r2, [pc, #168]	; (401760 <UDP_Handler+0x224>)
  4016b6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016b8:	9303      	str	r3, [sp, #12]
  4016ba:	9b03      	ldr	r3, [sp, #12]
  4016bc:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4016c0:	9303      	str	r3, [sp, #12]
  4016c2:	9b03      	ldr	r3, [sp, #12]
  4016c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4016c8:	9303      	str	r3, [sp, #12]
  4016ca:	9b03      	ldr	r3, [sp, #12]
  4016cc:	6313      	str	r3, [r2, #48]	; 0x30
  4016ce:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016d0:	f013 0f80 	tst.w	r3, #128	; 0x80
  4016d4:	d0fb      	beq.n	4016ce <UDP_Handler+0x192>
		udd_ack_setup_received(0);
  4016d6:	4a22      	ldr	r2, [pc, #136]	; (401760 <UDP_Handler+0x224>)
  4016d8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016da:	9304      	str	r3, [sp, #16]
  4016dc:	9b04      	ldr	r3, [sp, #16]
  4016de:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4016e2:	9304      	str	r3, [sp, #16]
  4016e4:	9b04      	ldr	r3, [sp, #16]
  4016e6:	f023 0304 	bic.w	r3, r3, #4
  4016ea:	9304      	str	r3, [sp, #16]
  4016ec:	9b04      	ldr	r3, [sp, #16]
  4016ee:	6313      	str	r3, [r2, #48]	; 0x30
  4016f0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016f2:	f013 0f04 	tst.w	r3, #4
  4016f6:	d1fb      	bne.n	4016f0 <UDP_Handler+0x1b4>
		udd_ctrl_prev_payload_nb_trans = 0;
  4016f8:	2300      	movs	r3, #0
  4016fa:	4a24      	ldr	r2, [pc, #144]	; (40178c <UDP_Handler+0x250>)
  4016fc:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  4016fe:	4a24      	ldr	r2, [pc, #144]	; (401790 <UDP_Handler+0x254>)
  401700:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
  401702:	2202      	movs	r2, #2
  401704:	4b1a      	ldr	r3, [pc, #104]	; (401770 <UDP_Handler+0x234>)
  401706:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
  401708:	4b22      	ldr	r3, [pc, #136]	; (401794 <UDP_Handler+0x258>)
  40170a:	4798      	blx	r3
  40170c:	e763      	b.n	4015d6 <UDP_Handler+0x9a>
			udd_ctrl_send_zlp_in();
  40170e:	4b22      	ldr	r3, [pc, #136]	; (401798 <UDP_Handler+0x25c>)
  401710:	4798      	blx	r3
  401712:	e760      	b.n	4015d6 <UDP_Handler+0x9a>
		udd_ctrl_in_sent();
  401714:	4b1f      	ldr	r3, [pc, #124]	; (401794 <UDP_Handler+0x258>)
  401716:	4798      	blx	r3
  401718:	e75d      	b.n	4015d6 <UDP_Handler+0x9a>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
  40171a:	4b15      	ldr	r3, [pc, #84]	; (401770 <UDP_Handler+0x234>)
  40171c:	781b      	ldrb	r3, [r3, #0]
  40171e:	2b01      	cmp	r3, #1
  401720:	d03c      	beq.n	40179c <UDP_Handler+0x260>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
  401722:	2b02      	cmp	r3, #2
  401724:	d004      	beq.n	401730 <UDP_Handler+0x1f4>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
  401726:	2b04      	cmp	r3, #4
  401728:	d002      	beq.n	401730 <UDP_Handler+0x1f4>
			udd_ctrl_stall_data();
  40172a:	4b12      	ldr	r3, [pc, #72]	; (401774 <UDP_Handler+0x238>)
  40172c:	4798      	blx	r3
  40172e:	e001      	b.n	401734 <UDP_Handler+0x1f8>
			udd_ctrl_endofrequest();
  401730:	4b11      	ldr	r3, [pc, #68]	; (401778 <UDP_Handler+0x23c>)
  401732:	4798      	blx	r3
		udd_ack_bank0_received(0);
  401734:	4a0a      	ldr	r2, [pc, #40]	; (401760 <UDP_Handler+0x224>)
  401736:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401738:	9306      	str	r3, [sp, #24]
  40173a:	9b06      	ldr	r3, [sp, #24]
  40173c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401740:	9306      	str	r3, [sp, #24]
  401742:	9b06      	ldr	r3, [sp, #24]
  401744:	f023 0302 	bic.w	r3, r3, #2
  401748:	9306      	str	r3, [sp, #24]
  40174a:	9b06      	ldr	r3, [sp, #24]
  40174c:	6313      	str	r3, [r2, #48]	; 0x30
  40174e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401750:	f013 0f02 	tst.w	r3, #2
  401754:	d1fb      	bne.n	40174e <UDP_Handler+0x212>
		udd_ctrl_init();
  401756:	4b09      	ldr	r3, [pc, #36]	; (40177c <UDP_Handler+0x240>)
  401758:	4798      	blx	r3
  40175a:	e73c      	b.n	4015d6 <UDP_Handler+0x9a>
  40175c:	0040322d 	.word	0x0040322d
  401760:	40034000 	.word	0x40034000
  401764:	00403119 	.word	0x00403119
  401768:	20000200 	.word	0x20000200
  40176c:	00400a09 	.word	0x00400a09
  401770:	20000da6 	.word	0x20000da6
  401774:	0040103d 	.word	0x0040103d
  401778:	004010ad 	.word	0x004010ad
  40177c:	00401025 	.word	0x00401025
  401780:	20000e4f 	.word	0x20000e4f
  401784:	00400a49 	.word	0x00400a49
  401788:	20000e50 	.word	0x20000e50
  40178c:	20000da4 	.word	0x20000da4
  401790:	20000da2 	.word	0x20000da2
  401794:	004010bd 	.word	0x004010bd
  401798:	00401075 	.word	0x00401075
	nb_data = udd_byte_count(0);
  40179c:	4b93      	ldr	r3, [pc, #588]	; (4019ec <UDP_Handler+0x4b0>)
  40179e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  4017a0:	f3c1 410a 	ubfx	r1, r1, #16, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
  4017a4:	4b92      	ldr	r3, [pc, #584]	; (4019f0 <UDP_Handler+0x4b4>)
  4017a6:	899b      	ldrh	r3, [r3, #12]
  4017a8:	4a92      	ldr	r2, [pc, #584]	; (4019f4 <UDP_Handler+0x4b8>)
  4017aa:	8815      	ldrh	r5, [r2, #0]
  4017ac:	186a      	adds	r2, r5, r1
  4017ae:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size -
  4017b0:	bfbc      	itt	lt
  4017b2:	1b5b      	sublt	r3, r3, r5
  4017b4:	b299      	uxthlt	r1, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  4017b6:	4b8e      	ldr	r3, [pc, #568]	; (4019f0 <UDP_Handler+0x4b4>)
  4017b8:	6898      	ldr	r0, [r3, #8]
  4017ba:	4428      	add	r0, r5
	for (i = 0; i < nb_data; i++) {
  4017bc:	b171      	cbz	r1, 4017dc <UDP_Handler+0x2a0>
  4017be:	4602      	mov	r2, r0
		*ptr_dest++ = udd_endpoint_fifo_read(0);
  4017c0:	4c8a      	ldr	r4, [pc, #552]	; (4019ec <UDP_Handler+0x4b0>)
  4017c2:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4017c4:	f802 3b01 	strb.w	r3, [r2], #1
	for (i = 0; i < nb_data; i++) {
  4017c8:	1a13      	subs	r3, r2, r0
  4017ca:	b2db      	uxtb	r3, r3
  4017cc:	428b      	cmp	r3, r1
  4017ce:	d3f8      	bcc.n	4017c2 <UDP_Handler+0x286>
	udd_ctrl_payload_nb_trans += nb_data;
  4017d0:	440d      	add	r5, r1
  4017d2:	b2ad      	uxth	r5, r5
  4017d4:	4b87      	ldr	r3, [pc, #540]	; (4019f4 <UDP_Handler+0x4b8>)
  4017d6:	801d      	strh	r5, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
  4017d8:	2940      	cmp	r1, #64	; 0x40
  4017da:	d01a      	beq.n	401812 <UDP_Handler+0x2d6>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
  4017dc:	4b84      	ldr	r3, [pc, #528]	; (4019f0 <UDP_Handler+0x4b4>)
  4017de:	819d      	strh	r5, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
  4017e0:	695b      	ldr	r3, [r3, #20]
  4017e2:	b113      	cbz	r3, 4017ea <UDP_Handler+0x2ae>
			if (!udd_g_ctrlreq.over_under_run()) {
  4017e4:	4798      	blx	r3
  4017e6:	2800      	cmp	r0, #0
  4017e8:	d030      	beq.n	40184c <UDP_Handler+0x310>
		udd_ack_bank0_received(0);
  4017ea:	4a80      	ldr	r2, [pc, #512]	; (4019ec <UDP_Handler+0x4b0>)
  4017ec:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4017ee:	9308      	str	r3, [sp, #32]
  4017f0:	9b08      	ldr	r3, [sp, #32]
  4017f2:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4017f6:	9308      	str	r3, [sp, #32]
  4017f8:	9b08      	ldr	r3, [sp, #32]
  4017fa:	f023 0302 	bic.w	r3, r3, #2
  4017fe:	9308      	str	r3, [sp, #32]
  401800:	9b08      	ldr	r3, [sp, #32]
  401802:	6313      	str	r3, [r2, #48]	; 0x30
  401804:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401806:	f013 0f02 	tst.w	r3, #2
  40180a:	d1fb      	bne.n	401804 <UDP_Handler+0x2c8>
		udd_ctrl_send_zlp_in();
  40180c:	4b7a      	ldr	r3, [pc, #488]	; (4019f8 <UDP_Handler+0x4bc>)
  40180e:	4798      	blx	r3
  401810:	e6e1      	b.n	4015d6 <UDP_Handler+0x9a>
			|| (udd_g_ctrlreq.req.wLength <=
  401812:	4b77      	ldr	r3, [pc, #476]	; (4019f0 <UDP_Handler+0x4b4>)
  401814:	88da      	ldrh	r2, [r3, #6]
			(udd_ctrl_prev_payload_nb_trans +
  401816:	4b79      	ldr	r3, [pc, #484]	; (4019fc <UDP_Handler+0x4c0>)
  401818:	881b      	ldrh	r3, [r3, #0]
  40181a:	442b      	add	r3, r5
			|| (udd_g_ctrlreq.req.wLength <=
  40181c:	429a      	cmp	r2, r3
  40181e:	dddd      	ble.n	4017dc <UDP_Handler+0x2a0>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
  401820:	4b73      	ldr	r3, [pc, #460]	; (4019f0 <UDP_Handler+0x4b4>)
  401822:	899b      	ldrh	r3, [r3, #12]
  401824:	42ab      	cmp	r3, r5
  401826:	d025      	beq.n	401874 <UDP_Handler+0x338>
	udd_ack_bank0_received(0);
  401828:	4a70      	ldr	r2, [pc, #448]	; (4019ec <UDP_Handler+0x4b0>)
  40182a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40182c:	930b      	str	r3, [sp, #44]	; 0x2c
  40182e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401830:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401834:	930b      	str	r3, [sp, #44]	; 0x2c
  401836:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401838:	f023 0302 	bic.w	r3, r3, #2
  40183c:	930b      	str	r3, [sp, #44]	; 0x2c
  40183e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401840:	6313      	str	r3, [r2, #48]	; 0x30
  401842:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401844:	f013 0f02 	tst.w	r3, #2
  401848:	d1fb      	bne.n	401842 <UDP_Handler+0x306>
  40184a:	e6c4      	b.n	4015d6 <UDP_Handler+0x9a>
				udd_ctrl_stall_data();
  40184c:	4b6c      	ldr	r3, [pc, #432]	; (401a00 <UDP_Handler+0x4c4>)
  40184e:	4798      	blx	r3
				udd_ack_bank0_received(0);
  401850:	4a66      	ldr	r2, [pc, #408]	; (4019ec <UDP_Handler+0x4b0>)
  401852:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401854:	9307      	str	r3, [sp, #28]
  401856:	9b07      	ldr	r3, [sp, #28]
  401858:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40185c:	9307      	str	r3, [sp, #28]
  40185e:	9b07      	ldr	r3, [sp, #28]
  401860:	f023 0302 	bic.w	r3, r3, #2
  401864:	9307      	str	r3, [sp, #28]
  401866:	9b07      	ldr	r3, [sp, #28]
  401868:	6313      	str	r3, [r2, #48]	; 0x30
  40186a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40186c:	f013 0f02 	tst.w	r3, #2
  401870:	d1fb      	bne.n	40186a <UDP_Handler+0x32e>
  401872:	e6b0      	b.n	4015d6 <UDP_Handler+0x9a>
		if (!udd_g_ctrlreq.over_under_run) {
  401874:	4b5e      	ldr	r3, [pc, #376]	; (4019f0 <UDP_Handler+0x4b4>)
  401876:	695b      	ldr	r3, [r3, #20]
  401878:	b153      	cbz	r3, 401890 <UDP_Handler+0x354>
		if (!udd_g_ctrlreq.over_under_run()) {
  40187a:	4798      	blx	r3
  40187c:	b1e8      	cbz	r0, 4018ba <UDP_Handler+0x37e>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  40187e:	495f      	ldr	r1, [pc, #380]	; (4019fc <UDP_Handler+0x4c0>)
  401880:	4a5c      	ldr	r2, [pc, #368]	; (4019f4 <UDP_Handler+0x4b8>)
  401882:	880b      	ldrh	r3, [r1, #0]
  401884:	8810      	ldrh	r0, [r2, #0]
  401886:	4403      	add	r3, r0
  401888:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
  40188a:	2300      	movs	r3, #0
  40188c:	8013      	strh	r3, [r2, #0]
  40188e:	e7cb      	b.n	401828 <UDP_Handler+0x2ec>
			udd_ctrl_stall_data();
  401890:	4b5b      	ldr	r3, [pc, #364]	; (401a00 <UDP_Handler+0x4c4>)
  401892:	4798      	blx	r3
			udd_ack_bank0_received(0);
  401894:	4a55      	ldr	r2, [pc, #340]	; (4019ec <UDP_Handler+0x4b0>)
  401896:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401898:	9309      	str	r3, [sp, #36]	; 0x24
  40189a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40189c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4018a0:	9309      	str	r3, [sp, #36]	; 0x24
  4018a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4018a4:	f023 0302 	bic.w	r3, r3, #2
  4018a8:	9309      	str	r3, [sp, #36]	; 0x24
  4018aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4018ac:	6313      	str	r3, [r2, #48]	; 0x30
  4018ae:	4613      	mov	r3, r2
  4018b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4018b2:	f012 0f02 	tst.w	r2, #2
  4018b6:	d1fb      	bne.n	4018b0 <UDP_Handler+0x374>
  4018b8:	e68d      	b.n	4015d6 <UDP_Handler+0x9a>
			udd_ctrl_stall_data();
  4018ba:	4b51      	ldr	r3, [pc, #324]	; (401a00 <UDP_Handler+0x4c4>)
  4018bc:	4798      	blx	r3
			udd_ack_bank0_received(0);
  4018be:	4a4b      	ldr	r2, [pc, #300]	; (4019ec <UDP_Handler+0x4b0>)
  4018c0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4018c2:	930a      	str	r3, [sp, #40]	; 0x28
  4018c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4018c6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4018ca:	930a      	str	r3, [sp, #40]	; 0x28
  4018cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4018ce:	f023 0302 	bic.w	r3, r3, #2
  4018d2:	930a      	str	r3, [sp, #40]	; 0x28
  4018d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4018d6:	6313      	str	r3, [r2, #48]	; 0x30
  4018d8:	4613      	mov	r3, r2
  4018da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4018dc:	f012 0f02 	tst.w	r2, #2
  4018e0:	d1fb      	bne.n	4018da <UDP_Handler+0x39e>
  4018e2:	e678      	b.n	4015d6 <UDP_Handler+0x9a>
  4018e4:	4a47      	ldr	r2, [pc, #284]	; (401a04 <UDP_Handler+0x4c8>)
	for (i = 0; i < nb_data; i++) {
  4018e6:	2301      	movs	r3, #1
	udd_ep_job_t *ptr_job;

	// For each endpoint different of control endpoint (0)
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Check RXRDY and TXEMPTY event for none DMA endpoints
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  4018e8:	f8df e100 	ldr.w	lr, [pc, #256]	; 4019ec <UDP_Handler+0x4b0>
  4018ec:	4618      	mov	r0, r3
  4018ee:	e17f      	b.n	401bf0 <UDP_Handler+0x6b4>
	uint32_t pkt_size = ptr_job->size;
  4018f0:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  4018f4:	4b43      	ldr	r3, [pc, #268]	; (401a04 <UDP_Handler+0x4c8>)
  4018f6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4018fa:	f8b3 a010 	ldrh.w	sl, [r3, #16]
  4018fe:	f3ca 0a09 	ubfx	sl, sl, #0, #10
	nb_data = udd_byte_count(ep);
  401902:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401904:	f3c3 490a 	ubfx	r9, r3, #16, #11
	if (nb_data > 0) {
  401908:	f1b9 0f00 	cmp.w	r9, #0
  40190c:	f000 81df 	beq.w	401cce <UDP_Handler+0x792>
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  401910:	4b3c      	ldr	r3, [pc, #240]	; (401a04 <UDP_Handler+0x4c8>)
  401912:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401916:	f8d3 e008 	ldr.w	lr, [r3, #8]
  40191a:	68da      	ldr	r2, [r3, #12]
  40191c:	ebae 0002 	sub.w	r0, lr, r2
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  401920:	6859      	ldr	r1, [r3, #4]
		if (nb_data >= nb_remain) {
  401922:	4548      	cmp	r0, r9
  401924:	f240 81c7 	bls.w	401cb6 <UDP_Handler+0x77a>
		ptr_job->buf_cnt += nb_data;
  401928:	eb07 0087 	add.w	r0, r7, r7, lsl #2
  40192c:	4b35      	ldr	r3, [pc, #212]	; (401a04 <UDP_Handler+0x4c8>)
  40192e:	eb03 0380 	add.w	r3, r3, r0, lsl #2
  401932:	eb02 0009 	add.w	r0, r2, r9
  401936:	60d8      	str	r0, [r3, #12]
	nb_data = udd_byte_count(ep);
  401938:	4648      	mov	r0, r9
	bool b_full = false, b_short;
  40193a:	f04f 0b00 	mov.w	fp, #0
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  40193e:	4411      	add	r1, r2
  401940:	460b      	mov	r3, r1
			*ptr_dst++ = udd_endpoint_fifo_read(ep);
  401942:	6d22      	ldr	r2, [r4, #80]	; 0x50
  401944:	f803 2b01 	strb.w	r2, [r3], #1
		for (i = 0; i < nb_data; i++) {
  401948:	1a5a      	subs	r2, r3, r1
  40194a:	4282      	cmp	r2, r0
  40194c:	d3f9      	bcc.n	401942 <UDP_Handler+0x406>
	udd_ep_ack_out_received(ep);
  40194e:	4630      	mov	r0, r6
  401950:	4b2d      	ldr	r3, [pc, #180]	; (401a08 <UDP_Handler+0x4cc>)
  401952:	4798      	blx	r3
	if ((b_full || b_short) &&
  401954:	f1bb 0f00 	cmp.w	fp, #0
  401958:	f000 81bc 	beq.w	401cd4 <UDP_Handler+0x798>
			!Is_udd_endpoint_stall_requested(ep)) {
  40195c:	6b23      	ldr	r3, [r4, #48]	; 0x30
	if ((b_full || b_short) &&
  40195e:	f013 0f20 	tst.w	r3, #32
  401962:	f47f ae38 	bne.w	4015d6 <UDP_Handler+0x9a>
		udd_disable_endpoint_interrupt(ep);
  401966:	4b21      	ldr	r3, [pc, #132]	; (4019ec <UDP_Handler+0x4b0>)
  401968:	615d      	str	r5, [r3, #20]
		ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  40196a:	4b26      	ldr	r3, [pc, #152]	; (401a04 <UDP_Handler+0x4c8>)
  40196c:	00ba      	lsls	r2, r7, #2
  40196e:	19d1      	adds	r1, r2, r7
  401970:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  401974:	68cb      	ldr	r3, [r1, #12]
  401976:	608b      	str	r3, [r1, #8]
		udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401978:	4632      	mov	r2, r6
  40197a:	2100      	movs	r1, #0
  40197c:	4640      	mov	r0, r8
  40197e:	4b23      	ldr	r3, [pc, #140]	; (401a0c <UDP_Handler+0x4d0>)
  401980:	4798      	blx	r3
  401982:	e628      	b.n	4015d6 <UDP_Handler+0x9a>
			return true;
		}
		// TXIN: packet sent
		if (Is_udd_in_sent(ep)) {

			ptr_job->bank--;
  401984:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401988:	4b1e      	ldr	r3, [pc, #120]	; (401a04 <UDP_Handler+0x4c8>)
  40198a:	eb03 0282 	add.w	r2, r3, r2, lsl #2
  40198e:	7c53      	ldrb	r3, [r2, #17]
  401990:	f3c3 0181 	ubfx	r1, r3, #2, #2
  401994:	3103      	adds	r1, #3
  401996:	f361 0383 	bfi	r3, r1, #2, #2
  40199a:	7453      	strb	r3, [r2, #17]
			// Stall when all banks free
			if (ptr_job->b_stall_requested) {
  40199c:	7c53      	ldrb	r3, [r2, #17]
  40199e:	f013 0f20 	tst.w	r3, #32
  4019a2:	d05f      	beq.n	401a64 <UDP_Handler+0x528>
				if (ptr_job->bank) {
  4019a4:	f013 0f0c 	tst.w	r3, #12
  4019a8:	d032      	beq.n	401a10 <UDP_Handler+0x4d4>
					// Send remaining
					udd_set_transmit_ready(ep);
  4019aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019ac:	930c      	str	r3, [sp, #48]	; 0x30
  4019ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4019b0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4019b4:	930c      	str	r3, [sp, #48]	; 0x30
  4019b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4019b8:	f043 0310 	orr.w	r3, r3, #16
  4019bc:	930c      	str	r3, [sp, #48]	; 0x30
  4019be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4019c0:	6323      	str	r3, [r4, #48]	; 0x30
  4019c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019c4:	f013 0f10 	tst.w	r3, #16
  4019c8:	d0fb      	beq.n	4019c2 <UDP_Handler+0x486>
					udd_ack_in_sent(ep);
  4019ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019cc:	930d      	str	r3, [sp, #52]	; 0x34
  4019ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4019d0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4019d4:	930d      	str	r3, [sp, #52]	; 0x34
  4019d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4019d8:	f023 0301 	bic.w	r3, r3, #1
  4019dc:	930d      	str	r3, [sp, #52]	; 0x34
  4019de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4019e0:	6323      	str	r3, [r4, #48]	; 0x30
  4019e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019e4:	f013 0f01 	tst.w	r3, #1
  4019e8:	d1fb      	bne.n	4019e2 <UDP_Handler+0x4a6>
  4019ea:	e5f4      	b.n	4015d6 <UDP_Handler+0x9a>
  4019ec:	40034000 	.word	0x40034000
  4019f0:	20000e50 	.word	0x20000e50
  4019f4:	20000da2 	.word	0x20000da2
  4019f8:	00401075 	.word	0x00401075
  4019fc:	20000da4 	.word	0x20000da4
  401a00:	0040103d 	.word	0x0040103d
  401a04:	20000da8 	.word	0x20000da8
  401a08:	004012b5 	.word	0x004012b5
  401a0c:	00401275 	.word	0x00401275
				} else {
					// Ack last packet
					udd_ack_in_sent(ep);
  401a10:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a12:	930e      	str	r3, [sp, #56]	; 0x38
  401a14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401a16:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a1a:	930e      	str	r3, [sp, #56]	; 0x38
  401a1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401a1e:	f023 0301 	bic.w	r3, r3, #1
  401a22:	930e      	str	r3, [sp, #56]	; 0x38
  401a24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401a26:	6323      	str	r3, [r4, #48]	; 0x30
  401a28:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a2a:	f013 0f01 	tst.w	r3, #1
  401a2e:	d1fb      	bne.n	401a28 <UDP_Handler+0x4ec>
					// Enable stall
					udd_enable_stall_handshake(ep);
  401a30:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a32:	930f      	str	r3, [sp, #60]	; 0x3c
  401a34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a36:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a3a:	930f      	str	r3, [sp, #60]	; 0x3c
  401a3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a3e:	f043 0320 	orr.w	r3, r3, #32
  401a42:	930f      	str	r3, [sp, #60]	; 0x3c
  401a44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a46:	6323      	str	r3, [r4, #48]	; 0x30
  401a48:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a4a:	f013 0f20 	tst.w	r3, #32
  401a4e:	d0fb      	beq.n	401a48 <UDP_Handler+0x50c>
					// Halt executed
					ptr_job->b_stall_requested = false;
  401a50:	eb07 0787 	add.w	r7, r7, r7, lsl #2
  401a54:	4ba1      	ldr	r3, [pc, #644]	; (401cdc <UDP_Handler+0x7a0>)
  401a56:	eb03 0387 	add.w	r3, r3, r7, lsl #2
  401a5a:	7c5a      	ldrb	r2, [r3, #17]
  401a5c:	f36f 1245 	bfc	r2, #5, #1
  401a60:	745a      	strb	r2, [r3, #17]
  401a62:	e5b8      	b.n	4015d6 <UDP_Handler+0x9a>
				}
				return true;
			}
			// Finish Job when buffer end
			if (ptr_job->b_buf_end) {
  401a64:	f013 0f80 	tst.w	r3, #128	; 0x80
  401a68:	d138      	bne.n	401adc <UDP_Handler+0x5a0>
				ptr_job->b_buf_end = false;
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                udd_disable_endpoint_interrupt(ep);
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
			}
			if (ptr_job->buf_cnt >= ptr_job->buf_size &&
  401a6a:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401a6e:	4b9b      	ldr	r3, [pc, #620]	; (401cdc <UDP_Handler+0x7a0>)
  401a70:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401a74:	68da      	ldr	r2, [r3, #12]
  401a76:	689b      	ldr	r3, [r3, #8]
  401a78:	429a      	cmp	r2, r3
  401a7a:	d341      	bcc.n	401b00 <UDP_Handler+0x5c4>
					!ptr_job->b_shortpacket &&
  401a7c:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401a80:	4b96      	ldr	r3, [pc, #600]	; (401cdc <UDP_Handler+0x7a0>)
  401a82:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401a86:	7c5b      	ldrb	r3, [r3, #17]
  401a88:	f013 0f4c 	tst.w	r3, #76	; 0x4c
  401a8c:	d138      	bne.n	401b00 <UDP_Handler+0x5c4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401a8e:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401a92:	fab3 f383 	clz	r3, r3
  401a96:	095b      	lsrs	r3, r3, #5
  401a98:	9310      	str	r3, [sp, #64]	; 0x40
  __ASM volatile ("cpsid i" : : : "memory");
  401a9a:	b672      	cpsid	i
  401a9c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401aa0:	2200      	movs	r2, #0
  401aa2:	4b8f      	ldr	r3, [pc, #572]	; (401ce0 <UDP_Handler+0x7a4>)
  401aa4:	701a      	strb	r2, [r3, #0]
	return flags;
  401aa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
					ptr_job->bank == 0) {
				// All transfer done, including ZLP
				irqflags_t flags = cpu_irq_save();
				udd_disable_endpoint_interrupt(ep);
  401aa8:	4a8e      	ldr	r2, [pc, #568]	; (401ce4 <UDP_Handler+0x7a8>)
  401aaa:	6155      	str	r5, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  401aac:	b12b      	cbz	r3, 401aba <UDP_Handler+0x57e>
		cpu_irq_enable();
  401aae:	2201      	movs	r2, #1
  401ab0:	4b8b      	ldr	r3, [pc, #556]	; (401ce0 <UDP_Handler+0x7a4>)
  401ab2:	701a      	strb	r2, [r3, #0]
  401ab4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401ab8:	b662      	cpsie	i
				cpu_irq_restore(flags);
				// Ack last packet
				udd_ack_in_sent(ep);
  401aba:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401abc:	9311      	str	r3, [sp, #68]	; 0x44
  401abe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401ac0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401ac4:	9311      	str	r3, [sp, #68]	; 0x44
  401ac6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401ac8:	f023 0301 	bic.w	r3, r3, #1
  401acc:	9311      	str	r3, [sp, #68]	; 0x44
  401ace:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401ad0:	6323      	str	r3, [r4, #48]	; 0x30
  401ad2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401ad4:	f013 0f01 	tst.w	r3, #1
  401ad8:	d1fb      	bne.n	401ad2 <UDP_Handler+0x596>
  401ada:	e57c      	b.n	4015d6 <UDP_Handler+0x9a>
				ptr_job->b_buf_end = false;
  401adc:	2314      	movs	r3, #20
  401ade:	4a7f      	ldr	r2, [pc, #508]	; (401cdc <UDP_Handler+0x7a0>)
  401ae0:	fb03 2307 	mla	r3, r3, r7, r2
  401ae4:	7c59      	ldrb	r1, [r3, #17]
  401ae6:	f36f 11c7 	bfc	r1, #7, #1
  401aea:	7459      	strb	r1, [r3, #17]
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  401aec:	68da      	ldr	r2, [r3, #12]
  401aee:	609a      	str	r2, [r3, #8]
                udd_disable_endpoint_interrupt(ep);
  401af0:	4b7c      	ldr	r3, [pc, #496]	; (401ce4 <UDP_Handler+0x7a8>)
  401af2:	615d      	str	r5, [r3, #20]
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401af4:	4632      	mov	r2, r6
  401af6:	2100      	movs	r1, #0
  401af8:	4640      	mov	r0, r8
  401afa:	4b7b      	ldr	r3, [pc, #492]	; (401ce8 <UDP_Handler+0x7ac>)
  401afc:	4798      	blx	r3
  401afe:	e7b4      	b.n	401a6a <UDP_Handler+0x52e>
				return true;
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1
  401b00:	2e00      	cmp	r6, #0
  401b02:	d05b      	beq.n	401bbc <UDP_Handler+0x680>
  401b04:	2e03      	cmp	r6, #3
  401b06:	d059      	beq.n	401bbc <UDP_Handler+0x680>
					&& ptr_job->bank > 0) {
  401b08:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401b0c:	4b73      	ldr	r3, [pc, #460]	; (401cdc <UDP_Handler+0x7a0>)
  401b0e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401b12:	7c5b      	ldrb	r3, [r3, #17]
  401b14:	f013 0f0c 	tst.w	r3, #12
  401b18:	d024      	beq.n	401b64 <UDP_Handler+0x628>
				// Already banks buffered, transmit while loading
				udd_set_transmit_ready(ep);
  401b1a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b1c:	9312      	str	r3, [sp, #72]	; 0x48
  401b1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401b20:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401b24:	9312      	str	r3, [sp, #72]	; 0x48
  401b26:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401b28:	f043 0310 	orr.w	r3, r3, #16
  401b2c:	9312      	str	r3, [sp, #72]	; 0x48
  401b2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401b30:	6323      	str	r3, [r4, #48]	; 0x30
  401b32:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b34:	f013 0f10 	tst.w	r3, #16
  401b38:	d0fb      	beq.n	401b32 <UDP_Handler+0x5f6>
				udd_ack_in_sent(ep);
  401b3a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b3c:	9313      	str	r3, [sp, #76]	; 0x4c
  401b3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401b40:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401b44:	9313      	str	r3, [sp, #76]	; 0x4c
  401b46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401b48:	f023 0301 	bic.w	r3, r3, #1
  401b4c:	9313      	str	r3, [sp, #76]	; 0x4c
  401b4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401b50:	6323      	str	r3, [r4, #48]	; 0x30
  401b52:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b54:	f013 0f01 	tst.w	r3, #1
  401b58:	d1fb      	bne.n	401b52 <UDP_Handler+0x616>
				udd_ep_in_sent(ep, false);
  401b5a:	2100      	movs	r1, #0
  401b5c:	4630      	mov	r0, r6
  401b5e:	4b63      	ldr	r3, [pc, #396]	; (401cec <UDP_Handler+0x7b0>)
  401b60:	4798      	blx	r3
  401b62:	e538      	b.n	4015d6 <UDP_Handler+0x9a>
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
				// Still bank free, load and transmit
				if (!udd_ep_in_sent(ep, true)) {
  401b64:	2101      	movs	r1, #1
  401b66:	4630      	mov	r0, r6
  401b68:	4b60      	ldr	r3, [pc, #384]	; (401cec <UDP_Handler+0x7b0>)
  401b6a:	4798      	blx	r3
  401b6c:	b1a0      	cbz	r0, 401b98 <UDP_Handler+0x65c>
					ptr_job->b_buf_end = false;
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                    udd_disable_endpoint_interrupt(ep);
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
				}
				udd_ack_in_sent(ep);
  401b6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b70:	9314      	str	r3, [sp, #80]	; 0x50
  401b72:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401b74:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401b78:	9314      	str	r3, [sp, #80]	; 0x50
  401b7a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401b7c:	f023 0301 	bic.w	r3, r3, #1
  401b80:	9314      	str	r3, [sp, #80]	; 0x50
  401b82:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401b84:	6323      	str	r3, [r4, #48]	; 0x30
  401b86:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b88:	f013 0f01 	tst.w	r3, #1
  401b8c:	d1fb      	bne.n	401b86 <UDP_Handler+0x64a>
				udd_ep_in_sent(ep, false);
  401b8e:	2100      	movs	r1, #0
  401b90:	4630      	mov	r0, r6
  401b92:	4b56      	ldr	r3, [pc, #344]	; (401cec <UDP_Handler+0x7b0>)
  401b94:	4798      	blx	r3
  401b96:	e51e      	b.n	4015d6 <UDP_Handler+0x9a>
					ptr_job->b_buf_end = false;
  401b98:	2314      	movs	r3, #20
  401b9a:	4a50      	ldr	r2, [pc, #320]	; (401cdc <UDP_Handler+0x7a0>)
  401b9c:	fb03 2707 	mla	r7, r3, r7, r2
  401ba0:	7c7a      	ldrb	r2, [r7, #17]
  401ba2:	f36f 12c7 	bfc	r2, #7, #1
  401ba6:	747a      	strb	r2, [r7, #17]
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  401ba8:	68fb      	ldr	r3, [r7, #12]
  401baa:	60bb      	str	r3, [r7, #8]
                    udd_disable_endpoint_interrupt(ep);
  401bac:	4b4d      	ldr	r3, [pc, #308]	; (401ce4 <UDP_Handler+0x7a8>)
  401bae:	615d      	str	r5, [r3, #20]
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401bb0:	4632      	mov	r2, r6
  401bb2:	2100      	movs	r1, #0
  401bb4:	4640      	mov	r0, r8
  401bb6:	4b4c      	ldr	r3, [pc, #304]	; (401ce8 <UDP_Handler+0x7ac>)
  401bb8:	4798      	blx	r3
  401bba:	e7d8      	b.n	401b6e <UDP_Handler+0x632>
			} else {
				// Single bank transfer, ack when ready
				udd_ep_in_sent(ep, true);
  401bbc:	2101      	movs	r1, #1
  401bbe:	4630      	mov	r0, r6
  401bc0:	4b4a      	ldr	r3, [pc, #296]	; (401cec <UDP_Handler+0x7b0>)
  401bc2:	4798      	blx	r3
				udd_ack_in_sent(ep);
  401bc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401bc6:	9315      	str	r3, [sp, #84]	; 0x54
  401bc8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401bca:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401bce:	9315      	str	r3, [sp, #84]	; 0x54
  401bd0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401bd2:	f023 0301 	bic.w	r3, r3, #1
  401bd6:	9315      	str	r3, [sp, #84]	; 0x54
  401bd8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401bda:	6323      	str	r3, [r4, #48]	; 0x30
  401bdc:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401bde:	f013 0f01 	tst.w	r3, #1
  401be2:	d1fb      	bne.n	401bdc <UDP_Handler+0x6a0>
  401be4:	e4f7      	b.n	4015d6 <UDP_Handler+0x9a>
  401be6:	3301      	adds	r3, #1
  401be8:	3214      	adds	r2, #20
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
  401bea:	2b04      	cmp	r3, #4
  401bec:	f000 8086 	beq.w	401cfc <UDP_Handler+0x7c0>
  401bf0:	b2de      	uxtb	r6, r3
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  401bf2:	f8de 1018 	ldr.w	r1, [lr, #24]
  401bf6:	fa00 f503 	lsl.w	r5, r0, r3
  401bfa:	4229      	tst	r1, r5
  401bfc:	d0f3      	beq.n	401be6 <UDP_Handler+0x6aa>
  401bfe:	1e5f      	subs	r7, r3, #1
		ptr_job = &udd_ep_job[ep - 1];
  401c00:	4690      	mov	r8, r2
  401c02:	009c      	lsls	r4, r3, #2
  401c04:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  401c08:	f504 3440 	add.w	r4, r4, #196608	; 0x30000
		if (Is_udd_any_bank_received(ep)) {
  401c0c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401c0e:	f011 0f42 	tst.w	r1, #66	; 0x42
  401c12:	f47f ae6d 	bne.w	4018f0 <UDP_Handler+0x3b4>
		if (Is_udd_in_sent(ep)) {
  401c16:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401c18:	f011 0f01 	tst.w	r1, #1
  401c1c:	f47f aeb2 	bne.w	401984 <UDP_Handler+0x448>
			}
			return true;
		}
		// Stall sent/CRC error
		if (Is_udd_stall(ep)) {
  401c20:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401c22:	f011 0f08 	tst.w	r1, #8
  401c26:	d0de      	beq.n	401be6 <UDP_Handler+0x6aa>
			udd_ack_stall(ep);
  401c28:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c2a:	9316      	str	r3, [sp, #88]	; 0x58
  401c2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401c2e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401c32:	9316      	str	r3, [sp, #88]	; 0x58
  401c34:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401c36:	f023 0308 	bic.w	r3, r3, #8
  401c3a:	9316      	str	r3, [sp, #88]	; 0x58
  401c3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401c3e:	6323      	str	r3, [r4, #48]	; 0x30
  401c40:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c42:	f013 0f08 	tst.w	r3, #8
  401c46:	d1fb      	bne.n	401c40 <UDP_Handler+0x704>
			if (udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_OUT ||
  401c48:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c4a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  401c4e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  401c52:	f43f acc0 	beq.w	4015d6 <UDP_Handler+0x9a>
				udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_IN) {
  401c56:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c58:	e4bd      	b.n	4015d6 <UDP_Handler+0x9a>
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401c5a:	4b22      	ldr	r3, [pc, #136]	; (401ce4 <UDP_Handler+0x7a8>)
  401c5c:	69db      	ldr	r3, [r3, #28]
  401c5e:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  401c62:	d050      	beq.n	401d06 <UDP_Handler+0x7ca>
		udd_ack_wakeups();
  401c64:	4c1f      	ldr	r4, [pc, #124]	; (401ce4 <UDP_Handler+0x7a8>)
  401c66:	f44f 5318 	mov.w	r3, #9728	; 0x2600
  401c6a:	6223      	str	r3, [r4, #32]
		udd_disable_wakeups();
  401c6c:	6163      	str	r3, [r4, #20]
		udd_sleep_mode(true); // Enter in IDLE mode
  401c6e:	2001      	movs	r0, #1
  401c70:	4b1f      	ldr	r3, [pc, #124]	; (401cf0 <UDP_Handler+0x7b4>)
  401c72:	4798      	blx	r3
		udd_ack_suspend();
  401c74:	f44f 7380 	mov.w	r3, #256	; 0x100
  401c78:	6223      	str	r3, [r4, #32]
		udd_enable_suspend_interrupt();
  401c7a:	6123      	str	r3, [r4, #16]
		udd_enable_sof_interrupt();
  401c7c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401c80:	6123      	str	r3, [r4, #16]
		goto udd_interrupt_end;
  401c82:	e4a8      	b.n	4015d6 <UDP_Handler+0x9a>
		udd_ack_suspend();
  401c84:	4b17      	ldr	r3, [pc, #92]	; (401ce4 <UDP_Handler+0x7a8>)
  401c86:	f44f 7280 	mov.w	r2, #256	; 0x100
  401c8a:	621a      	str	r2, [r3, #32]
		udd_disable_suspend_interrupt();
  401c8c:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
  401c8e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  401c92:	611a      	str	r2, [r3, #16]
		udd_enable_resume_interrupt();
  401c94:	f44f 7200 	mov.w	r2, #512	; 0x200
  401c98:	611a      	str	r2, [r3, #16]
		udd_enable_ext_resume_interrupt();
  401c9a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401c9e:	611a      	str	r2, [r3, #16]
		udd_disable_periph_ck();
  401ca0:	2022      	movs	r0, #34	; 0x22
  401ca2:	4b14      	ldr	r3, [pc, #80]	; (401cf4 <UDP_Handler+0x7b8>)
  401ca4:	4798      	blx	r3
		udd_sleep_mode(false); // Enter in SUSPEND mode
  401ca6:	2000      	movs	r0, #0
  401ca8:	4b11      	ldr	r3, [pc, #68]	; (401cf0 <UDP_Handler+0x7b4>)
  401caa:	4798      	blx	r3
		goto udd_interrupt_end;
  401cac:	e493      	b.n	4015d6 <UDP_Handler+0x9a>
	udd_ep_ack_out_received(ep);
  401cae:	4630      	mov	r0, r6
  401cb0:	4b11      	ldr	r3, [pc, #68]	; (401cf8 <UDP_Handler+0x7bc>)
  401cb2:	4798      	blx	r3
  401cb4:	e652      	b.n	40195c <UDP_Handler+0x420>
		ptr_job->buf_cnt += nb_data;
  401cb6:	eb07 0c87 	add.w	ip, r7, r7, lsl #2
  401cba:	4b08      	ldr	r3, [pc, #32]	; (401cdc <UDP_Handler+0x7a0>)
  401cbc:	eb03 038c 	add.w	r3, r3, ip, lsl #2
  401cc0:	f8c3 e00c 	str.w	lr, [r3, #12]
		for (i = 0; i < nb_data; i++) {
  401cc4:	2800      	cmp	r0, #0
  401cc6:	d0f2      	beq.n	401cae <UDP_Handler+0x772>
			b_full = true;
  401cc8:	f04f 0b01 	mov.w	fp, #1
  401ccc:	e637      	b.n	40193e <UDP_Handler+0x402>
	udd_ep_ack_out_received(ep);
  401cce:	4630      	mov	r0, r6
  401cd0:	4b09      	ldr	r3, [pc, #36]	; (401cf8 <UDP_Handler+0x7bc>)
  401cd2:	4798      	blx	r3
	if ((b_full || b_short) &&
  401cd4:	45ca      	cmp	sl, r9
  401cd6:	f63f ae41 	bhi.w	40195c <UDP_Handler+0x420>
  401cda:	e47c      	b.n	4015d6 <UDP_Handler+0x9a>
  401cdc:	20000da8 	.word	0x20000da8
  401ce0:	20000200 	.word	0x20000200
  401ce4:	40034000 	.word	0x40034000
  401ce8:	00401275 	.word	0x00401275
  401cec:	00401389 	.word	0x00401389
  401cf0:	00400f81 	.word	0x00400f81
  401cf4:	0040316d 	.word	0x0040316d
  401cf8:	004012b5 	.word	0x004012b5
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401cfc:	4b4b      	ldr	r3, [pc, #300]	; (401e2c <UDP_Handler+0x8f0>)
  401cfe:	699b      	ldr	r3, [r3, #24]
  401d00:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  401d04:	d1a9      	bne.n	401c5a <UDP_Handler+0x71e>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401d06:	4b49      	ldr	r3, [pc, #292]	; (401e2c <UDP_Handler+0x8f0>)
  401d08:	699b      	ldr	r3, [r3, #24]
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401d0a:	f413 7f00 	tst.w	r3, #512	; 0x200
  401d0e:	d004      	beq.n	401d1a <UDP_Handler+0x7de>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401d10:	4b46      	ldr	r3, [pc, #280]	; (401e2c <UDP_Handler+0x8f0>)
  401d12:	69db      	ldr	r3, [r3, #28]
  401d14:	f413 7f00 	tst.w	r3, #512	; 0x200
  401d18:	d1a4      	bne.n	401c64 <UDP_Handler+0x728>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  401d1a:	4b44      	ldr	r3, [pc, #272]	; (401e2c <UDP_Handler+0x8f0>)
  401d1c:	699b      	ldr	r3, [r3, #24]
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401d1e:	f413 6f80 	tst.w	r3, #1024	; 0x400
  401d22:	d004      	beq.n	401d2e <UDP_Handler+0x7f2>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  401d24:	4b41      	ldr	r3, [pc, #260]	; (401e2c <UDP_Handler+0x8f0>)
  401d26:	69db      	ldr	r3, [r3, #28]
  401d28:	f413 6f80 	tst.w	r3, #1024	; 0x400
  401d2c:	d19a      	bne.n	401c64 <UDP_Handler+0x728>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
  401d2e:	4b3f      	ldr	r3, [pc, #252]	; (401e2c <UDP_Handler+0x8f0>)
  401d30:	699b      	ldr	r3, [r3, #24]
  401d32:	f413 7f80 	tst.w	r3, #256	; 0x100
  401d36:	d004      	beq.n	401d42 <UDP_Handler+0x806>
  401d38:	4b3c      	ldr	r3, [pc, #240]	; (401e2c <UDP_Handler+0x8f0>)
  401d3a:	69db      	ldr	r3, [r3, #28]
  401d3c:	f413 7f80 	tst.w	r3, #256	; 0x100
  401d40:	d1a0      	bne.n	401c84 <UDP_Handler+0x748>
	if (Is_udd_reset()) {
  401d42:	4b3a      	ldr	r3, [pc, #232]	; (401e2c <UDP_Handler+0x8f0>)
  401d44:	69db      	ldr	r3, [r3, #28]
  401d46:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  401d4a:	f43f ac44 	beq.w	4015d6 <UDP_Handler+0x9a>
		udd_ack_reset();
  401d4e:	4c37      	ldr	r4, [pc, #220]	; (401e2c <UDP_Handler+0x8f0>)
  401d50:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401d54:	6223      	str	r3, [r4, #32]
		udd_ep_finish_job(&udd_ep_job[i], UDD_EP_TRANSFER_ABORT, i + 1);
  401d56:	4e36      	ldr	r6, [pc, #216]	; (401e30 <UDP_Handler+0x8f4>)
  401d58:	2201      	movs	r2, #1
  401d5a:	4611      	mov	r1, r2
  401d5c:	4630      	mov	r0, r6
  401d5e:	4d35      	ldr	r5, [pc, #212]	; (401e34 <UDP_Handler+0x8f8>)
  401d60:	47a8      	blx	r5
  401d62:	2202      	movs	r2, #2
  401d64:	2101      	movs	r1, #1
  401d66:	f106 0014 	add.w	r0, r6, #20
  401d6a:	47a8      	blx	r5
  401d6c:	2203      	movs	r2, #3
  401d6e:	2101      	movs	r1, #1
  401d70:	f106 0028 	add.w	r0, r6, #40	; 0x28
  401d74:	47a8      	blx	r5
		udc_reset();
  401d76:	4b30      	ldr	r3, [pc, #192]	; (401e38 <UDP_Handler+0x8fc>)
  401d78:	4798      	blx	r3
		udd_disable_address_state();
  401d7a:	6863      	ldr	r3, [r4, #4]
  401d7c:	f023 0301 	bic.w	r3, r3, #1
  401d80:	6063      	str	r3, [r4, #4]
		udd_disable_configured_state();
  401d82:	6863      	ldr	r3, [r4, #4]
  401d84:	f023 0302 	bic.w	r3, r3, #2
  401d88:	6063      	str	r3, [r4, #4]
	udd_enable_address();
  401d8a:	68a3      	ldr	r3, [r4, #8]
  401d8c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  401d90:	60a3      	str	r3, [r4, #8]
	udd_configure_address(0);
  401d92:	68a3      	ldr	r3, [r4, #8]
  401d94:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401d98:	60a3      	str	r3, [r4, #8]
	udd_configure_endpoint(0, USB_EP_TYPE_CONTROL, 0);
  401d9a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401d9c:	9318      	str	r3, [sp, #96]	; 0x60
  401d9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401da0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401da4:	9318      	str	r3, [sp, #96]	; 0x60
  401da6:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401da8:	f423 4307 	bic.w	r3, r3, #34560	; 0x8700
  401dac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  401db0:	9318      	str	r3, [sp, #96]	; 0x60
  401db2:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401db4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  401db8:	9318      	str	r3, [sp, #96]	; 0x60
  401dba:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401dbc:	6323      	str	r3, [r4, #48]	; 0x30
  401dbe:	4622      	mov	r2, r4
  401dc0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401dc2:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  401dc6:	d0fb      	beq.n	401dc0 <UDP_Handler+0x884>
	udd_enable_endpoint(0);
  401dc8:	4a18      	ldr	r2, [pc, #96]	; (401e2c <UDP_Handler+0x8f0>)
  401dca:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401dcc:	9319      	str	r3, [sp, #100]	; 0x64
  401dce:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401dd0:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401dd4:	9319      	str	r3, [sp, #100]	; 0x64
  401dd6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401dd8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  401ddc:	9319      	str	r3, [sp, #100]	; 0x64
  401dde:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401de0:	6313      	str	r3, [r2, #48]	; 0x30
  401de2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401de4:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  401de8:	d0fb      	beq.n	401de2 <UDP_Handler+0x8a6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401dea:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401dee:	fab3 f383 	clz	r3, r3
  401df2:	095b      	lsrs	r3, r3, #5
  401df4:	9317      	str	r3, [sp, #92]	; 0x5c
  __ASM volatile ("cpsid i" : : : "memory");
  401df6:	b672      	cpsid	i
  401df8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401dfc:	2200      	movs	r2, #0
  401dfe:	4b0f      	ldr	r3, [pc, #60]	; (401e3c <UDP_Handler+0x900>)
  401e00:	701a      	strb	r2, [r3, #0]
	return flags;
  401e02:	9b17      	ldr	r3, [sp, #92]	; 0x5c
	udd_enable_endpoint_interrupt(0);
  401e04:	2101      	movs	r1, #1
  401e06:	4a09      	ldr	r2, [pc, #36]	; (401e2c <UDP_Handler+0x8f0>)
  401e08:	6111      	str	r1, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
  401e0a:	b123      	cbz	r3, 401e16 <UDP_Handler+0x8da>
		cpu_irq_enable();
  401e0c:	4b0b      	ldr	r3, [pc, #44]	; (401e3c <UDP_Handler+0x900>)
  401e0e:	7019      	strb	r1, [r3, #0]
  401e10:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401e14:	b662      	cpsie	i
		udd_ctrl_init();
  401e16:	4b0a      	ldr	r3, [pc, #40]	; (401e40 <UDP_Handler+0x904>)
  401e18:	4798      	blx	r3
		udd_enable_suspend_interrupt();
  401e1a:	4b04      	ldr	r3, [pc, #16]	; (401e2c <UDP_Handler+0x8f0>)
  401e1c:	f44f 7280 	mov.w	r2, #256	; 0x100
  401e20:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
  401e22:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401e26:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
  401e28:	f7ff bbd5 	b.w	4015d6 <UDP_Handler+0x9a>
  401e2c:	40034000 	.word	0x40034000
  401e30:	20000da8 	.word	0x20000da8
  401e34:	00401275 	.word	0x00401275
  401e38:	004009c1 	.word	0x004009c1
  401e3c:	20000200 	.word	0x20000200
  401e40:	00401025 	.word	0x00401025

00401e44 <udd_attach>:
{
  401e44:	b510      	push	{r4, lr}
  401e46:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401e48:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401e4c:	fab3 f383 	clz	r3, r3
  401e50:	095b      	lsrs	r3, r3, #5
  401e52:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401e54:	b672      	cpsid	i
  401e56:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401e5a:	2200      	movs	r2, #0
  401e5c:	4b14      	ldr	r3, [pc, #80]	; (401eb0 <udd_attach+0x6c>)
  401e5e:	701a      	strb	r2, [r3, #0]
	return flags;
  401e60:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
  401e62:	2001      	movs	r0, #1
  401e64:	4b13      	ldr	r3, [pc, #76]	; (401eb4 <udd_attach+0x70>)
  401e66:	4798      	blx	r3
	udd_enable_periph_ck();
  401e68:	2022      	movs	r0, #34	; 0x22
  401e6a:	4b13      	ldr	r3, [pc, #76]	; (401eb8 <udd_attach+0x74>)
  401e6c:	4798      	blx	r3
	udd_enable_transceiver();
  401e6e:	4b13      	ldr	r3, [pc, #76]	; (401ebc <udd_attach+0x78>)
  401e70:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e72:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  401e76:	675a      	str	r2, [r3, #116]	; 0x74
	udd_attach_device();
  401e78:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e7a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  401e7e:	675a      	str	r2, [r3, #116]	; 0x74
	udd_enable_suspend_interrupt();
  401e80:	f44f 7280 	mov.w	r2, #256	; 0x100
  401e84:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
  401e86:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  401e8a:	611a      	str	r2, [r3, #16]
	udd_enable_resume_interrupt();
  401e8c:	f44f 7200 	mov.w	r2, #512	; 0x200
  401e90:	611a      	str	r2, [r3, #16]
	udd_enable_ext_resume_interrupt();
  401e92:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401e96:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
  401e98:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401e9c:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  401e9e:	b12c      	cbz	r4, 401eac <udd_attach+0x68>
		cpu_irq_enable();
  401ea0:	2201      	movs	r2, #1
  401ea2:	4b03      	ldr	r3, [pc, #12]	; (401eb0 <udd_attach+0x6c>)
  401ea4:	701a      	strb	r2, [r3, #0]
  401ea6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401eaa:	b662      	cpsie	i
}
  401eac:	b002      	add	sp, #8
  401eae:	bd10      	pop	{r4, pc}
  401eb0:	20000200 	.word	0x20000200
  401eb4:	00400f81 	.word	0x00400f81
  401eb8:	00403119 	.word	0x00403119
  401ebc:	40034000 	.word	0x40034000

00401ec0 <udd_enable>:
{
  401ec0:	b530      	push	{r4, r5, lr}
  401ec2:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401ec4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401ec8:	fab3 f383 	clz	r3, r3
  401ecc:	095b      	lsrs	r3, r3, #5
  401ece:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  401ed0:	b672      	cpsid	i
  401ed2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401ed6:	2400      	movs	r4, #0
  401ed8:	4b27      	ldr	r3, [pc, #156]	; (401f78 <udd_enable+0xb8>)
  401eda:	701c      	strb	r4, [r3, #0]
	return flags;
  401edc:	9d00      	ldr	r5, [sp, #0]
	udd_enable_periph_ck();
  401ede:	2022      	movs	r0, #34	; 0x22
  401ee0:	4b26      	ldr	r3, [pc, #152]	; (401f7c <udd_enable+0xbc>)
  401ee2:	4798      	blx	r3
	sysclk_enable_usb();
  401ee4:	4b26      	ldr	r3, [pc, #152]	; (401f80 <udd_enable+0xc0>)
  401ee6:	4798      	blx	r3
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  401ee8:	4b26      	ldr	r3, [pc, #152]	; (401f84 <udd_enable+0xc4>)
  401eea:	2250      	movs	r2, #80	; 0x50
  401eec:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  401ef0:	2204      	movs	r2, #4
  401ef2:	605a      	str	r2, [r3, #4]
  401ef4:	4623      	mov	r3, r4
		udd_ep_job[i].bank = 0;
  401ef6:	4824      	ldr	r0, [pc, #144]	; (401f88 <udd_enable+0xc8>)
  401ef8:	009a      	lsls	r2, r3, #2
  401efa:	18d1      	adds	r1, r2, r3
  401efc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  401f00:	7c49      	ldrb	r1, [r1, #17]
		udd_ep_job[i].b_buf_end = false;
  401f02:	441a      	add	r2, r3
  401f04:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  401f08:	f001 0183 	and.w	r1, r1, #131	; 0x83
  401f0c:	f36f 11c7 	bfc	r1, #7, #1
  401f10:	7451      	strb	r1, [r2, #17]
  401f12:	3301      	adds	r3, #1
	for (i = 0; i < USB_DEVICE_MAX_EP; i++) {
  401f14:	2b03      	cmp	r3, #3
  401f16:	d1ef      	bne.n	401ef8 <udd_enable+0x38>
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
  401f18:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  401f1c:	4b1b      	ldr	r3, [pc, #108]	; (401f8c <udd_enable+0xcc>)
  401f1e:	4798      	blx	r3
	udd_b_idle = false;
  401f20:	2200      	movs	r2, #0
  401f22:	4b1b      	ldr	r3, [pc, #108]	; (401f90 <udd_enable+0xd0>)
  401f24:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
  401f26:	4b1b      	ldr	r3, [pc, #108]	; (401f94 <udd_enable+0xd4>)
  401f28:	781b      	ldrb	r3, [r3, #0]
  401f2a:	2bff      	cmp	r3, #255	; 0xff
  401f2c:	d022      	beq.n	401f74 <udd_enable+0xb4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401f2e:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401f32:	fab3 f383 	clz	r3, r3
  401f36:	095b      	lsrs	r3, r3, #5
  401f38:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401f3a:	b672      	cpsid	i
  401f3c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401f40:	2200      	movs	r2, #0
  401f42:	4b0d      	ldr	r3, [pc, #52]	; (401f78 <udd_enable+0xb8>)
  401f44:	701a      	strb	r2, [r3, #0]
	return flags;
  401f46:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
  401f48:	4a12      	ldr	r2, [pc, #72]	; (401f94 <udd_enable+0xd4>)
  401f4a:	7813      	ldrb	r3, [r2, #0]
  401f4c:	3301      	adds	r3, #1
  401f4e:	7013      	strb	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  401f50:	b129      	cbz	r1, 401f5e <udd_enable+0x9e>
		cpu_irq_enable();
  401f52:	2201      	movs	r2, #1
  401f54:	4b08      	ldr	r3, [pc, #32]	; (401f78 <udd_enable+0xb8>)
  401f56:	701a      	strb	r2, [r3, #0]
  401f58:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401f5c:	b662      	cpsie	i
	udd_attach();
  401f5e:	4b0e      	ldr	r3, [pc, #56]	; (401f98 <udd_enable+0xd8>)
  401f60:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
  401f62:	b12d      	cbz	r5, 401f70 <udd_enable+0xb0>
		cpu_irq_enable();
  401f64:	2201      	movs	r2, #1
  401f66:	4b04      	ldr	r3, [pc, #16]	; (401f78 <udd_enable+0xb8>)
  401f68:	701a      	strb	r2, [r3, #0]
  401f6a:	f3bf 8f5f 	dmb	sy
  401f6e:	b662      	cpsie	i
}
  401f70:	b003      	add	sp, #12
  401f72:	bd30      	pop	{r4, r5, pc}
  401f74:	e7fe      	b.n	401f74 <udd_enable+0xb4>
  401f76:	bf00      	nop
  401f78:	20000200 	.word	0x20000200
  401f7c:	00403119 	.word	0x00403119
  401f80:	00402ee5 	.word	0x00402ee5
  401f84:	e000e100 	.word	0xe000e100
  401f88:	20000da8 	.word	0x20000da8
  401f8c:	004031e1 	.word	0x004031e1
  401f90:	20000da1 	.word	0x20000da1
  401f94:	20000e48 	.word	0x20000e48
  401f98:	00401e45 	.word	0x00401e45

00401f9c <udd_is_high_speed>:
}
  401f9c:	2000      	movs	r0, #0
  401f9e:	4770      	bx	lr

00401fa0 <udd_set_address>:
	udd_disable_address_state();
  401fa0:	4b0d      	ldr	r3, [pc, #52]	; (401fd8 <udd_set_address+0x38>)
  401fa2:	685a      	ldr	r2, [r3, #4]
  401fa4:	f022 0201 	bic.w	r2, r2, #1
  401fa8:	605a      	str	r2, [r3, #4]
	udd_disable_address();
  401faa:	689a      	ldr	r2, [r3, #8]
  401fac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  401fb0:	609a      	str	r2, [r3, #8]
	if (address) {
  401fb2:	4602      	mov	r2, r0
  401fb4:	b170      	cbz	r0, 401fd4 <udd_set_address+0x34>
		udd_configure_address(address);
  401fb6:	6898      	ldr	r0, [r3, #8]
  401fb8:	f020 007f 	bic.w	r0, r0, #127	; 0x7f
  401fbc:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  401fc0:	4310      	orrs	r0, r2
  401fc2:	6098      	str	r0, [r3, #8]
		udd_enable_address();
  401fc4:	689a      	ldr	r2, [r3, #8]
  401fc6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  401fca:	609a      	str	r2, [r3, #8]
		udd_enable_address_state();
  401fcc:	685a      	ldr	r2, [r3, #4]
  401fce:	f042 0201 	orr.w	r2, r2, #1
  401fd2:	605a      	str	r2, [r3, #4]
  401fd4:	4770      	bx	lr
  401fd6:	bf00      	nop
  401fd8:	40034000 	.word	0x40034000

00401fdc <udd_getaddress>:
	if (Is_udd_address_state_enabled())
  401fdc:	4b05      	ldr	r3, [pc, #20]	; (401ff4 <udd_getaddress+0x18>)
  401fde:	685b      	ldr	r3, [r3, #4]
  401fe0:	f013 0f01 	tst.w	r3, #1
		return udd_get_configured_address();
  401fe4:	bf1d      	ittte	ne
  401fe6:	4b03      	ldrne	r3, [pc, #12]	; (401ff4 <udd_getaddress+0x18>)
  401fe8:	6898      	ldrne	r0, [r3, #8]
  401fea:	f000 007f 	andne.w	r0, r0, #127	; 0x7f
	return 0;
  401fee:	2000      	moveq	r0, #0
}
  401ff0:	4770      	bx	lr
  401ff2:	bf00      	nop
  401ff4:	40034000 	.word	0x40034000

00401ff8 <udd_get_frame_number>:
	return udd_frame_number();
  401ff8:	4b02      	ldr	r3, [pc, #8]	; (402004 <udd_get_frame_number+0xc>)
  401ffa:	6818      	ldr	r0, [r3, #0]
}
  401ffc:	f3c0 000a 	ubfx	r0, r0, #0, #11
  402000:	4770      	bx	lr
  402002:	bf00      	nop
  402004:	40034000 	.word	0x40034000

00402008 <udd_get_micro_frame_number>:
}
  402008:	2000      	movs	r0, #0
  40200a:	4770      	bx	lr

0040200c <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
  40200c:	4b01      	ldr	r3, [pc, #4]	; (402014 <udd_set_setup_payload+0x8>)
  40200e:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
  402010:	8199      	strh	r1, [r3, #12]
  402012:	4770      	bx	lr
  402014:	20000e50 	.word	0x20000e50

00402018 <udd_ep_alloc>:
{
  402018:	b5f0      	push	{r4, r5, r6, r7, lr}
  40201a:	b083      	sub	sp, #12
	ep = ep & USB_EP_ADDR_MASK;
  40201c:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
  402020:	2c03      	cmp	r4, #3
  402022:	d867      	bhi.n	4020f4 <udd_ep_alloc+0xdc>
  402024:	00a3      	lsls	r3, r4, #2
  402026:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  40202a:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
	if (Is_udd_endpoint_enabled(ep)) {
  40202e:	6b1d      	ldr	r5, [r3, #48]	; 0x30
  402030:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  402034:	d161      	bne.n	4020fa <udd_ep_alloc+0xe2>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  402036:	f001 0503 	and.w	r5, r1, #3
  40203a:	2d01      	cmp	r5, #1
  40203c:	d050      	beq.n	4020e0 <udd_ep_alloc+0xc8>
	if (MaxEndpointSize > udd_get_endpoint_size_max(ep)) {
  40203e:	1f25      	subs	r5, r4, #4
  402040:	b2ed      	uxtb	r5, r5
  402042:	2d02      	cmp	r5, #2
  402044:	bf34      	ite	cc
  402046:	f44f 7500 	movcc.w	r5, #512	; 0x200
  40204a:	2540      	movcs	r5, #64	; 0x40
  40204c:	4295      	cmp	r5, r2
  40204e:	db58      	blt.n	402102 <udd_ep_alloc+0xea>
  402050:	b240      	sxtb	r0, r0
	ptr_job = &udd_ep_job[ep - 1];
  402052:	1e66      	subs	r6, r4, #1
	ptr_job->size = MaxEndpointSize;
  402054:	eb06 0786 	add.w	r7, r6, r6, lsl #2
  402058:	4d2b      	ldr	r5, [pc, #172]	; (402108 <udd_ep_alloc+0xf0>)
  40205a:	eb05 0587 	add.w	r5, r5, r7, lsl #2
  40205e:	f105 0710 	add.w	r7, r5, #16
  402062:	f8b5 e010 	ldrh.w	lr, [r5, #16]
  402066:	f362 0e09 	bfi	lr, r2, #0, #10
  40206a:	f8a5 e010 	strh.w	lr, [r5, #16]
	ptr_job->b_buf_end = false;
  40206e:	7c6a      	ldrb	r2, [r5, #17]
	ptr_job->b_stall_requested = false;
  402070:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  402074:	f36f 1245 	bfc	r2, #5, #1
  402078:	746a      	strb	r2, [r5, #17]
	if (b_dir_in) {
  40207a:	2800      	cmp	r0, #0
  40207c:	db35      	blt.n	4020ea <udd_ep_alloc+0xd2>
	udd_reset_endpoint(ep);
  40207e:	4e23      	ldr	r6, [pc, #140]	; (40210c <udd_ep_alloc+0xf4>)
  402080:	6ab5      	ldr	r5, [r6, #40]	; 0x28
  402082:	2201      	movs	r2, #1
  402084:	fa02 f404 	lsl.w	r4, r2, r4
  402088:	4325      	orrs	r5, r4
  40208a:	62b5      	str	r5, [r6, #40]	; 0x28
  40208c:	4635      	mov	r5, r6
  40208e:	6aaa      	ldr	r2, [r5, #40]	; 0x28
  402090:	4214      	tst	r4, r2
  402092:	d0fc      	beq.n	40208e <udd_ep_alloc+0x76>
  402094:	4d1d      	ldr	r5, [pc, #116]	; (40210c <udd_ep_alloc+0xf4>)
  402096:	6aaa      	ldr	r2, [r5, #40]	; 0x28
  402098:	ea22 0404 	bic.w	r4, r2, r4
  40209c:	62ac      	str	r4, [r5, #40]	; 0x28
	udd_configure_endpoint(ep,
  40209e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4020a0:	9201      	str	r2, [sp, #4]
  4020a2:	9a01      	ldr	r2, [sp, #4]
  4020a4:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4020a8:	9201      	str	r2, [sp, #4]
  4020aa:	9a01      	ldr	r2, [sp, #4]
  4020ac:	f422 4207 	bic.w	r2, r2, #34560	; 0x8700
  4020b0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  4020b4:	9201      	str	r2, [sp, #4]
  4020b6:	2800      	cmp	r0, #0
  4020b8:	ea4f 2201 	mov.w	r2, r1, lsl #8
  4020bc:	f402 7240 	and.w	r2, r2, #768	; 0x300
  4020c0:	bfb4      	ite	lt
  4020c2:	f442 4204 	orrlt.w	r2, r2, #33792	; 0x8400
  4020c6:	f442 4200 	orrge.w	r2, r2, #32768	; 0x8000
  4020ca:	9901      	ldr	r1, [sp, #4]
  4020cc:	4311      	orrs	r1, r2
  4020ce:	9101      	str	r1, [sp, #4]
  4020d0:	9901      	ldr	r1, [sp, #4]
  4020d2:	6319      	str	r1, [r3, #48]	; 0x30
  4020d4:	6b19      	ldr	r1, [r3, #48]	; 0x30
  4020d6:	ea32 0101 	bics.w	r1, r2, r1
  4020da:	d1fb      	bne.n	4020d4 <udd_ep_alloc+0xbc>
	return true;
  4020dc:	2001      	movs	r0, #1
  4020de:	e00a      	b.n	4020f6 <udd_ep_alloc+0xde>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  4020e0:	b16c      	cbz	r4, 4020fe <udd_ep_alloc+0xe6>
  4020e2:	2c03      	cmp	r4, #3
  4020e4:	d1ab      	bne.n	40203e <udd_ep_alloc+0x26>
		return false;
  4020e6:	2000      	movs	r0, #0
  4020e8:	e005      	b.n	4020f6 <udd_ep_alloc+0xde>
		ptr_job->bank = 0;
  4020ea:	787a      	ldrb	r2, [r7, #1]
  4020ec:	f36f 0283 	bfc	r2, #2, #2
  4020f0:	707a      	strb	r2, [r7, #1]
  4020f2:	e7c4      	b.n	40207e <udd_ep_alloc+0x66>
		return false;
  4020f4:	2000      	movs	r0, #0
}
  4020f6:	b003      	add	sp, #12
  4020f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false;
  4020fa:	2000      	movs	r0, #0
  4020fc:	e7fb      	b.n	4020f6 <udd_ep_alloc+0xde>
		return false;
  4020fe:	2000      	movs	r0, #0
  402100:	e7f9      	b.n	4020f6 <udd_ep_alloc+0xde>
		return false;
  402102:	2000      	movs	r0, #0
  402104:	e7f7      	b.n	4020f6 <udd_ep_alloc+0xde>
  402106:	bf00      	nop
  402108:	20000da8 	.word	0x20000da8
  40210c:	40034000 	.word	0x40034000

00402110 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  402110:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  402114:	2a03      	cmp	r2, #3
  402116:	d822      	bhi.n	40215e <udd_ep_free+0x4e>
{
  402118:	b500      	push	{lr}
  40211a:	b083      	sub	sp, #12
  40211c:	0091      	lsls	r1, r2, #2
  40211e:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
  402122:	f501 3140 	add.w	r1, r1, #196608	; 0x30000
	udd_disable_endpoint(ep_index);
  402126:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402128:	9301      	str	r3, [sp, #4]
  40212a:	9b01      	ldr	r3, [sp, #4]
  40212c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  402130:	9301      	str	r3, [sp, #4]
  402132:	9b01      	ldr	r3, [sp, #4]
  402134:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
  402138:	9301      	str	r3, [sp, #4]
  40213a:	9b01      	ldr	r3, [sp, #4]
  40213c:	630b      	str	r3, [r1, #48]	; 0x30
  40213e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402140:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  402144:	d1fb      	bne.n	40213e <udd_ep_free+0x2e>
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  402146:	1e50      	subs	r0, r2, #1
  402148:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  40214c:	2101      	movs	r1, #1
  40214e:	4b04      	ldr	r3, [pc, #16]	; (402160 <udd_ep_free+0x50>)
  402150:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  402154:	4b03      	ldr	r3, [pc, #12]	; (402164 <udd_ep_free+0x54>)
  402156:	4798      	blx	r3
}
  402158:	b003      	add	sp, #12
  40215a:	f85d fb04 	ldr.w	pc, [sp], #4
  40215e:	4770      	bx	lr
  402160:	20000da8 	.word	0x20000da8
  402164:	00401275 	.word	0x00401275

00402168 <udd_ep_is_halted>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  402168:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  40216c:	2803      	cmp	r0, #3
  40216e:	d815      	bhi.n	40219c <udd_ep_is_halted+0x34>
	return ptr_job->b_stall_requested ||
  402170:	1e43      	subs	r3, r0, #1
  402172:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  402176:	4a0a      	ldr	r2, [pc, #40]	; (4021a0 <udd_ep_is_halted+0x38>)
  402178:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40217c:	7c5b      	ldrb	r3, [r3, #17]
  40217e:	f013 0f20 	tst.w	r3, #32
  402182:	d109      	bne.n	402198 <udd_ep_is_halted+0x30>
			Is_udd_endpoint_stall_pending(ep & USB_EP_ADDR_MASK);
  402184:	300c      	adds	r0, #12
  402186:	4b07      	ldr	r3, [pc, #28]	; (4021a4 <udd_ep_is_halted+0x3c>)
  402188:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
	return ptr_job->b_stall_requested ||
  40218c:	f013 0f28 	tst.w	r3, #40	; 0x28
  402190:	bf14      	ite	ne
  402192:	2001      	movne	r0, #1
  402194:	2000      	moveq	r0, #0
  402196:	4770      	bx	lr
  402198:	2001      	movs	r0, #1
  40219a:	4770      	bx	lr
		return false;
  40219c:	2000      	movs	r0, #0
}
  40219e:	4770      	bx	lr
  4021a0:	20000da8 	.word	0x20000da8
  4021a4:	40034000 	.word	0x40034000

004021a8 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  4021a8:	f000 010f 	and.w	r1, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  4021ac:	2903      	cmp	r1, #3
  4021ae:	d85f      	bhi.n	402270 <udd_ep_set_halt+0xc8>
{
  4021b0:	b410      	push	{r4}
  4021b2:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4021b4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4021b8:	fab3 f383 	clz	r3, r3
  4021bc:	095b      	lsrs	r3, r3, #5
  4021be:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4021c0:	b672      	cpsid	i
  4021c2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4021c6:	2200      	movs	r2, #0
  4021c8:	4b2c      	ldr	r3, [pc, #176]	; (40227c <udd_ep_set_halt+0xd4>)
  4021ca:	701a      	strb	r2, [r3, #0]
	return flags;
  4021cc:	9c01      	ldr	r4, [sp, #4]
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  4021ce:	f010 0f80 	tst.w	r0, #128	; 0x80
  4021d2:	d124      	bne.n	40221e <udd_ep_set_halt+0x76>
  4021d4:	008a      	lsls	r2, r1, #2
  4021d6:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  4021da:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
		udd_enable_stall_handshake(ep_index);
  4021de:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4021e0:	9300      	str	r3, [sp, #0]
  4021e2:	9b00      	ldr	r3, [sp, #0]
  4021e4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4021e8:	9300      	str	r3, [sp, #0]
  4021ea:	9b00      	ldr	r3, [sp, #0]
  4021ec:	f043 0320 	orr.w	r3, r3, #32
  4021f0:	9300      	str	r3, [sp, #0]
  4021f2:	9b00      	ldr	r3, [sp, #0]
  4021f4:	6313      	str	r3, [r2, #48]	; 0x30
  4021f6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4021f8:	f013 0f20 	tst.w	r3, #32
  4021fc:	d0fb      	beq.n	4021f6 <udd_ep_set_halt+0x4e>
		udd_enable_endpoint_interrupt(ep_index);
  4021fe:	2301      	movs	r3, #1
  402200:	fa03 f101 	lsl.w	r1, r3, r1
  402204:	4b1e      	ldr	r3, [pc, #120]	; (402280 <udd_ep_set_halt+0xd8>)
  402206:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  402208:	2c00      	cmp	r4, #0
  40220a:	d035      	beq.n	402278 <udd_ep_set_halt+0xd0>
		cpu_irq_enable();
  40220c:	2001      	movs	r0, #1
  40220e:	4b1b      	ldr	r3, [pc, #108]	; (40227c <udd_ep_set_halt+0xd4>)
  402210:	7018      	strb	r0, [r3, #0]
  402212:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402216:	b662      	cpsie	i
}
  402218:	b003      	add	sp, #12
  40221a:	bc10      	pop	{r4}
  40221c:	4770      	bx	lr
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
  40221e:	1e4b      	subs	r3, r1, #1
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  402220:	f101 020c 	add.w	r2, r1, #12
  402224:	4816      	ldr	r0, [pc, #88]	; (402280 <udd_ep_set_halt+0xd8>)
  402226:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  40222a:	f012 0f10 	tst.w	r2, #16
  40222e:	d109      	bne.n	402244 <udd_ep_set_halt+0x9c>
				|| ptr_job->bank > 1)) {
  402230:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  402234:	4813      	ldr	r0, [pc, #76]	; (402284 <udd_ep_set_halt+0xdc>)
  402236:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  40223a:	7c52      	ldrb	r2, [r2, #17]
  40223c:	f3c2 0281 	ubfx	r2, r2, #2, #2
  402240:	2a01      	cmp	r2, #1
  402242:	ddc7      	ble.n	4021d4 <udd_ep_set_halt+0x2c>
		ptr_job->b_stall_requested = true;
  402244:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  402248:	4b0e      	ldr	r3, [pc, #56]	; (402284 <udd_ep_set_halt+0xdc>)
  40224a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40224e:	7c5a      	ldrb	r2, [r3, #17]
  402250:	f042 0220 	orr.w	r2, r2, #32
  402254:	745a      	strb	r2, [r3, #17]
		udd_enable_endpoint_interrupt(ep_index);
  402256:	2301      	movs	r3, #1
  402258:	fa03 f101 	lsl.w	r1, r3, r1
  40225c:	4b08      	ldr	r3, [pc, #32]	; (402280 <udd_ep_set_halt+0xd8>)
  40225e:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  402260:	b144      	cbz	r4, 402274 <udd_ep_set_halt+0xcc>
		cpu_irq_enable();
  402262:	2001      	movs	r0, #1
  402264:	4b05      	ldr	r3, [pc, #20]	; (40227c <udd_ep_set_halt+0xd4>)
  402266:	7018      	strb	r0, [r3, #0]
  402268:	f3bf 8f5f 	dmb	sy
  40226c:	b662      	cpsie	i
  40226e:	e7d3      	b.n	402218 <udd_ep_set_halt+0x70>
		return false;
  402270:	2000      	movs	r0, #0
  402272:	4770      	bx	lr
		return true;
  402274:	2001      	movs	r0, #1
  402276:	e7cf      	b.n	402218 <udd_ep_set_halt+0x70>
	return true;
  402278:	2001      	movs	r0, #1
  40227a:	e7cd      	b.n	402218 <udd_ep_set_halt+0x70>
  40227c:	20000200 	.word	0x20000200
  402280:	40034000 	.word	0x40034000
  402284:	20000da8 	.word	0x20000da8

00402288 <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
  402288:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  40228c:	2803      	cmp	r0, #3
  40228e:	d85e      	bhi.n	40234e <udd_ep_clear_halt+0xc6>
{
  402290:	b530      	push	{r4, r5, lr}
  402292:	b083      	sub	sp, #12
	ptr_job = &udd_ep_job[ep - 1];
  402294:	1e44      	subs	r4, r0, #1
	ptr_job->b_stall_requested = false;
  402296:	eb04 0284 	add.w	r2, r4, r4, lsl #2
  40229a:	4b2f      	ldr	r3, [pc, #188]	; (402358 <udd_ep_clear_halt+0xd0>)
  40229c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4022a0:	7c5a      	ldrb	r2, [r3, #17]
  4022a2:	f36f 1245 	bfc	r2, #5, #1
  4022a6:	745a      	strb	r2, [r3, #17]
  4022a8:	0083      	lsls	r3, r0, #2
  4022aa:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  4022ae:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
	if (Is_udd_endpoint_stall_requested(ep)) {
  4022b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022b4:	f012 0f20 	tst.w	r2, #32
  4022b8:	d04b      	beq.n	402352 <udd_ep_clear_halt+0xca>
		udd_disable_stall_handshake(ep);
  4022ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022bc:	9200      	str	r2, [sp, #0]
  4022be:	9a00      	ldr	r2, [sp, #0]
  4022c0:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4022c4:	9200      	str	r2, [sp, #0]
  4022c6:	9a00      	ldr	r2, [sp, #0]
  4022c8:	f022 0220 	bic.w	r2, r2, #32
  4022cc:	9200      	str	r2, [sp, #0]
  4022ce:	9a00      	ldr	r2, [sp, #0]
  4022d0:	631a      	str	r2, [r3, #48]	; 0x30
  4022d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022d4:	f012 0f20 	tst.w	r2, #32
  4022d8:	d1fb      	bne.n	4022d2 <udd_ep_clear_halt+0x4a>
		udd_reset_endpoint(ep);
  4022da:	4d20      	ldr	r5, [pc, #128]	; (40235c <udd_ep_clear_halt+0xd4>)
  4022dc:	6aa9      	ldr	r1, [r5, #40]	; 0x28
  4022de:	2201      	movs	r2, #1
  4022e0:	fa02 f000 	lsl.w	r0, r2, r0
  4022e4:	4301      	orrs	r1, r0
  4022e6:	62a9      	str	r1, [r5, #40]	; 0x28
  4022e8:	4629      	mov	r1, r5
  4022ea:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  4022ec:	4210      	tst	r0, r2
  4022ee:	d0fc      	beq.n	4022ea <udd_ep_clear_halt+0x62>
  4022f0:	491a      	ldr	r1, [pc, #104]	; (40235c <udd_ep_clear_halt+0xd4>)
  4022f2:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  4022f4:	ea22 0000 	bic.w	r0, r2, r0
  4022f8:	6288      	str	r0, [r1, #40]	; 0x28
		udd_ack_stall(ep);
  4022fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022fc:	9201      	str	r2, [sp, #4]
  4022fe:	9a01      	ldr	r2, [sp, #4]
  402300:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  402304:	9201      	str	r2, [sp, #4]
  402306:	9a01      	ldr	r2, [sp, #4]
  402308:	f022 0208 	bic.w	r2, r2, #8
  40230c:	9201      	str	r2, [sp, #4]
  40230e:	9a01      	ldr	r2, [sp, #4]
  402310:	631a      	str	r2, [r3, #48]	; 0x30
  402312:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402314:	f012 0f08 	tst.w	r2, #8
  402318:	d1fb      	bne.n	402312 <udd_ep_clear_halt+0x8a>
		if (ptr_job->busy == true) {
  40231a:	eb04 0384 	add.w	r3, r4, r4, lsl #2
  40231e:	4a0e      	ldr	r2, [pc, #56]	; (402358 <udd_ep_clear_halt+0xd0>)
  402320:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  402324:	7c5b      	ldrb	r3, [r3, #17]
  402326:	f013 0f10 	tst.w	r3, #16
  40232a:	d101      	bne.n	402330 <udd_ep_clear_halt+0xa8>
	return true;
  40232c:	2001      	movs	r0, #1
  40232e:	e011      	b.n	402354 <udd_ep_clear_halt+0xcc>
			ptr_job->busy = false;
  402330:	4611      	mov	r1, r2
  402332:	00a2      	lsls	r2, r4, #2
  402334:	1913      	adds	r3, r2, r4
  402336:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  40233a:	7c58      	ldrb	r0, [r3, #17]
  40233c:	f36f 1004 	bfc	r0, #4, #1
  402340:	7458      	strb	r0, [r3, #17]
			ptr_job->call_nohalt();
  402342:	4414      	add	r4, r2
  402344:	f851 3024 	ldr.w	r3, [r1, r4, lsl #2]
  402348:	4798      	blx	r3
	return true;
  40234a:	2001      	movs	r0, #1
  40234c:	e002      	b.n	402354 <udd_ep_clear_halt+0xcc>
		return false;
  40234e:	2000      	movs	r0, #0
  402350:	4770      	bx	lr
	return true;
  402352:	2001      	movs	r0, #1
}
  402354:	b003      	add	sp, #12
  402356:	bd30      	pop	{r4, r5, pc}
  402358:	20000da8 	.word	0x20000da8
  40235c:	40034000 	.word	0x40034000

00402360 <udd_ep_run>:
{
  402360:	b5f0      	push	{r4, r5, r6, r7, lr}
  402362:	b083      	sub	sp, #12
	ep &= USB_EP_ADDR_MASK;
  402364:	f000 070f 	and.w	r7, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
  402368:	2f03      	cmp	r7, #3
  40236a:	f200 80a2 	bhi.w	4024b2 <udd_ep_run+0x152>
  40236e:	00bc      	lsls	r4, r7, #2
  402370:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  402374:	f504 3440 	add.w	r4, r4, #196608	; 0x30000
	if ((!Is_udd_endpoint_enabled(ep))
  402378:	6b25      	ldr	r5, [r4, #48]	; 0x30
  40237a:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  40237e:	f000 809b 	beq.w	4024b8 <udd_ep_run+0x158>
	ptr_job = &udd_ep_job[ep - 1];
  402382:	1e7d      	subs	r5, r7, #1
			|| ptr_job->b_stall_requested
  402384:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  402388:	4e50      	ldr	r6, [pc, #320]	; (4024cc <udd_ep_run+0x16c>)
  40238a:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  40238e:	7c76      	ldrb	r6, [r6, #17]
  402390:	f016 0f20 	tst.w	r6, #32
  402394:	f040 8092 	bne.w	4024bc <udd_ep_run+0x15c>
			|| Is_udd_endpoint_stall_requested(ep)) {
  402398:	6b26      	ldr	r6, [r4, #48]	; 0x30
  40239a:	f016 0f20 	tst.w	r6, #32
  40239e:	f040 808f 	bne.w	4024c0 <udd_ep_run+0x160>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4023a2:	f3ef 8610 	mrs	r6, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4023a6:	fab6 f686 	clz	r6, r6
  4023aa:	0976      	lsrs	r6, r6, #5
  4023ac:	9600      	str	r6, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  4023ae:	b672      	cpsid	i
  4023b0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4023b4:	f04f 0e00 	mov.w	lr, #0
  4023b8:	4e45      	ldr	r6, [pc, #276]	; (4024d0 <udd_ep_run+0x170>)
  4023ba:	f886 e000 	strb.w	lr, [r6]
	return flags;
  4023be:	f8dd c000 	ldr.w	ip, [sp]
	if (ptr_job->busy == true) {
  4023c2:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  4023c6:	4e41      	ldr	r6, [pc, #260]	; (4024cc <udd_ep_run+0x16c>)
  4023c8:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4023cc:	7c76      	ldrb	r6, [r6, #17]
  4023ce:	f016 0f10 	tst.w	r6, #16
  4023d2:	d00a      	beq.n	4023ea <udd_ep_run+0x8a>
	if (cpu_irq_is_enabled_flags(flags))
  4023d4:	f1bc 0f00 	cmp.w	ip, #0
  4023d8:	d074      	beq.n	4024c4 <udd_ep_run+0x164>
		cpu_irq_enable();
  4023da:	2201      	movs	r2, #1
  4023dc:	4b3c      	ldr	r3, [pc, #240]	; (4024d0 <udd_ep_run+0x170>)
  4023de:	701a      	strb	r2, [r3, #0]
  4023e0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4023e4:	b662      	cpsie	i
		return false; // Job already on going
  4023e6:	2000      	movs	r0, #0
  4023e8:	e064      	b.n	4024b4 <udd_ep_run+0x154>
	ptr_job->busy = true;
  4023ea:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  4023ee:	4e37      	ldr	r6, [pc, #220]	; (4024cc <udd_ep_run+0x16c>)
  4023f0:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4023f4:	f896 e011 	ldrb.w	lr, [r6, #17]
  4023f8:	f04e 0e10 	orr.w	lr, lr, #16
  4023fc:	f886 e011 	strb.w	lr, [r6, #17]
	if (cpu_irq_is_enabled_flags(flags))
  402400:	f1bc 0f00 	cmp.w	ip, #0
  402404:	d007      	beq.n	402416 <udd_ep_run+0xb6>
		cpu_irq_enable();
  402406:	f04f 0e01 	mov.w	lr, #1
  40240a:	4e31      	ldr	r6, [pc, #196]	; (4024d0 <udd_ep_run+0x170>)
  40240c:	f886 e000 	strb.w	lr, [r6]
  402410:	f3bf 8f5f 	dmb	sy
  402414:	b662      	cpsie	i
	ptr_job->buf = buf;
  402416:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 4024cc <udd_ep_run+0x16c>
  40241a:	eb05 0685 	add.w	r6, r5, r5, lsl #2
  40241e:	00b6      	lsls	r6, r6, #2
  402420:	eb0c 0e06 	add.w	lr, ip, r6
  402424:	f8ce 2004 	str.w	r2, [lr, #4]
	ptr_job->buf_size = buf_size;
  402428:	f8ce 3008 	str.w	r3, [lr, #8]
	ptr_job->buf_cnt = 0;
  40242c:	2200      	movs	r2, #0
  40242e:	f8ce 200c 	str.w	r2, [lr, #12]
	ptr_job->call_trans = callback;
  402432:	9a08      	ldr	r2, [sp, #32]
  402434:	f84c 2006 	str.w	r2, [ip, r6]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
  402438:	b911      	cbnz	r1, 402440 <udd_ep_run+0xe0>
  40243a:	fab3 f183 	clz	r1, r3
  40243e:	0949      	lsrs	r1, r1, #5
  402440:	4a22      	ldr	r2, [pc, #136]	; (4024cc <udd_ep_run+0x16c>)
  402442:	00ae      	lsls	r6, r5, #2
  402444:	1973      	adds	r3, r6, r5
  402446:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40244a:	7c5b      	ldrb	r3, [r3, #17]
  40244c:	f361 1386 	bfi	r3, r1, #6, #1
	ptr_job->b_buf_end = false;
  402450:	4435      	add	r5, r6
  402452:	eb02 0285 	add.w	r2, r2, r5, lsl #2
  402456:	f36f 13c7 	bfc	r3, #7, #1
  40245a:	7453      	strb	r3, [r2, #17]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40245c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  402460:	fab3 f383 	clz	r3, r3
  402464:	095b      	lsrs	r3, r3, #5
  402466:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  402468:	b672      	cpsid	i
  40246a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40246e:	2200      	movs	r2, #0
  402470:	4b17      	ldr	r3, [pc, #92]	; (4024d0 <udd_ep_run+0x170>)
  402472:	701a      	strb	r2, [r3, #0]
	return flags;
  402474:	9d01      	ldr	r5, [sp, #4]
	udd_enable_endpoint_interrupt(ep);
  402476:	2301      	movs	r3, #1
  402478:	40bb      	lsls	r3, r7
  40247a:	4a16      	ldr	r2, [pc, #88]	; (4024d4 <udd_ep_run+0x174>)
  40247c:	6113      	str	r3, [r2, #16]
	if (b_dir_in) {
  40247e:	f010 0f80 	tst.w	r0, #128	; 0x80
  402482:	d107      	bne.n	402494 <udd_ep_run+0x134>
	if (cpu_irq_is_enabled_flags(flags))
  402484:	b305      	cbz	r5, 4024c8 <udd_ep_run+0x168>
		cpu_irq_enable();
  402486:	2001      	movs	r0, #1
  402488:	4b11      	ldr	r3, [pc, #68]	; (4024d0 <udd_ep_run+0x170>)
  40248a:	7018      	strb	r0, [r3, #0]
  40248c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402490:	b662      	cpsie	i
  402492:	e00f      	b.n	4024b4 <udd_ep_run+0x154>
		if (Is_udd_in_pending(ep)) {
  402494:	6b23      	ldr	r3, [r4, #48]	; 0x30
  402496:	f013 0f11 	tst.w	r3, #17
  40249a:	d1f3      	bne.n	402484 <udd_ep_run+0x124>
			if (udd_ep_in_sent(ep, true)) {
  40249c:	2101      	movs	r1, #1
  40249e:	4638      	mov	r0, r7
  4024a0:	4b0d      	ldr	r3, [pc, #52]	; (4024d8 <udd_ep_run+0x178>)
  4024a2:	4798      	blx	r3
  4024a4:	2800      	cmp	r0, #0
  4024a6:	d0ed      	beq.n	402484 <udd_ep_run+0x124>
				udd_ep_in_sent(ep, false);
  4024a8:	2100      	movs	r1, #0
  4024aa:	4638      	mov	r0, r7
  4024ac:	4b0a      	ldr	r3, [pc, #40]	; (4024d8 <udd_ep_run+0x178>)
  4024ae:	4798      	blx	r3
  4024b0:	e7e8      	b.n	402484 <udd_ep_run+0x124>
		return false;
  4024b2:	2000      	movs	r0, #0
}
  4024b4:	b003      	add	sp, #12
  4024b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
  4024b8:	2000      	movs	r0, #0
  4024ba:	e7fb      	b.n	4024b4 <udd_ep_run+0x154>
  4024bc:	2000      	movs	r0, #0
  4024be:	e7f9      	b.n	4024b4 <udd_ep_run+0x154>
  4024c0:	2000      	movs	r0, #0
  4024c2:	e7f7      	b.n	4024b4 <udd_ep_run+0x154>
		return false; // Job already on going
  4024c4:	2000      	movs	r0, #0
  4024c6:	e7f5      	b.n	4024b4 <udd_ep_run+0x154>
	return true;
  4024c8:	2001      	movs	r0, #1
  4024ca:	e7f3      	b.n	4024b4 <udd_ep_run+0x154>
  4024cc:	20000da8 	.word	0x20000da8
  4024d0:	20000200 	.word	0x20000200
  4024d4:	40034000 	.word	0x40034000
  4024d8:	00401389 	.word	0x00401389

004024dc <udd_ep_abort>:
{
  4024dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4024de:	b087      	sub	sp, #28
	ep &= USB_EP_ADDR_MASK;
  4024e0:	f000 050f 	and.w	r5, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  4024e4:	2d03      	cmp	r5, #3
  4024e6:	d840      	bhi.n	40256a <udd_ep_abort+0x8e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4024e8:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4024ec:	fab3 f383 	clz	r3, r3
  4024f0:	095b      	lsrs	r3, r3, #5
  4024f2:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
  4024f4:	b672      	cpsid	i
  4024f6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4024fa:	2200      	movs	r2, #0
  4024fc:	4b4b      	ldr	r3, [pc, #300]	; (40262c <udd_ep_abort+0x150>)
  4024fe:	701a      	strb	r2, [r3, #0]
	return flags;
  402500:	9b05      	ldr	r3, [sp, #20]
	udd_disable_endpoint_interrupt(ep);
  402502:	2401      	movs	r4, #1
  402504:	40ac      	lsls	r4, r5
  402506:	4a4a      	ldr	r2, [pc, #296]	; (402630 <udd_ep_abort+0x154>)
  402508:	6154      	str	r4, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  40250a:	b12b      	cbz	r3, 402518 <udd_ep_abort+0x3c>
		cpu_irq_enable();
  40250c:	2201      	movs	r2, #1
  40250e:	4b47      	ldr	r3, [pc, #284]	; (40262c <udd_ep_abort+0x150>)
  402510:	701a      	strb	r2, [r3, #0]
  402512:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402516:	b662      	cpsie	i
	if (b_dir_in) {
  402518:	f010 0f80 	tst.w	r0, #128	; 0x80
  40251c:	d127      	bne.n	40256e <udd_ep_abort+0x92>
  40251e:	00ae      	lsls	r6, r5, #2
  402520:	f106 2640 	add.w	r6, r6, #1073758208	; 0x40004000
  402524:	f506 3640 	add.w	r6, r6, #196608	; 0x30000
		while(Is_udd_any_bank_received(ep)) {
  402528:	6b33      	ldr	r3, [r6, #48]	; 0x30
  40252a:	f013 0f42 	tst.w	r3, #66	; 0x42
  40252e:	d006      	beq.n	40253e <udd_ep_abort+0x62>
			udd_ep_ack_out_received(ep);
  402530:	4f40      	ldr	r7, [pc, #256]	; (402634 <udd_ep_abort+0x158>)
  402532:	4628      	mov	r0, r5
  402534:	47b8      	blx	r7
		while(Is_udd_any_bank_received(ep)) {
  402536:	6b33      	ldr	r3, [r6, #48]	; 0x30
  402538:	f013 0f42 	tst.w	r3, #66	; 0x42
  40253c:	d1f9      	bne.n	402532 <udd_ep_abort+0x56>
	udd_reset_endpoint(ep);
  40253e:	4a3c      	ldr	r2, [pc, #240]	; (402630 <udd_ep_abort+0x154>)
  402540:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402542:	4323      	orrs	r3, r4
  402544:	6293      	str	r3, [r2, #40]	; 0x28
  402546:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402548:	421c      	tst	r4, r3
  40254a:	d0fc      	beq.n	402546 <udd_ep_abort+0x6a>
  40254c:	4a38      	ldr	r2, [pc, #224]	; (402630 <udd_ep_abort+0x154>)
  40254e:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402550:	ea23 0404 	bic.w	r4, r3, r4
  402554:	6294      	str	r4, [r2, #40]	; 0x28
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  402556:	1e68      	subs	r0, r5, #1
  402558:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  40255c:	462a      	mov	r2, r5
  40255e:	2101      	movs	r1, #1
  402560:	4b35      	ldr	r3, [pc, #212]	; (402638 <udd_ep_abort+0x15c>)
  402562:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  402566:	4b35      	ldr	r3, [pc, #212]	; (40263c <udd_ep_abort+0x160>)
  402568:	4798      	blx	r3
}
  40256a:	b007      	add	sp, #28
  40256c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40256e:	00ab      	lsls	r3, r5, #2
  402570:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  402574:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
		if (Is_udd_transmit_ready(ep)) {
  402578:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40257a:	f012 0f10 	tst.w	r2, #16
  40257e:	d03a      	beq.n	4025f6 <udd_ep_abort+0x11a>
			udd_kill_data_in_fifo(ep,
  402580:	b34d      	cbz	r5, 4025d6 <udd_ep_abort+0xfa>
  402582:	2d03      	cmp	r5, #3
  402584:	d027      	beq.n	4025d6 <udd_ep_abort+0xfa>
  402586:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402588:	9201      	str	r2, [sp, #4]
  40258a:	9a01      	ldr	r2, [sp, #4]
  40258c:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  402590:	9201      	str	r2, [sp, #4]
  402592:	9a01      	ldr	r2, [sp, #4]
  402594:	f022 0210 	bic.w	r2, r2, #16
  402598:	9201      	str	r2, [sp, #4]
  40259a:	9a01      	ldr	r2, [sp, #4]
  40259c:	631a      	str	r2, [r3, #48]	; 0x30
  40259e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025a0:	f012 0f10 	tst.w	r2, #16
  4025a4:	d1fb      	bne.n	40259e <udd_ep_abort+0xc2>
  4025a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025a8:	f012 0f10 	tst.w	r2, #16
  4025ac:	d1fb      	bne.n	4025a6 <udd_ep_abort+0xca>
  4025ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025b0:	9202      	str	r2, [sp, #8]
  4025b2:	9a02      	ldr	r2, [sp, #8]
  4025b4:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4025b8:	9202      	str	r2, [sp, #8]
  4025ba:	9a02      	ldr	r2, [sp, #8]
  4025bc:	f042 0210 	orr.w	r2, r2, #16
  4025c0:	9202      	str	r2, [sp, #8]
  4025c2:	9a02      	ldr	r2, [sp, #8]
  4025c4:	631a      	str	r2, [r3, #48]	; 0x30
  4025c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025c8:	f012 0f10 	tst.w	r2, #16
  4025cc:	d0fb      	beq.n	4025c6 <udd_ep_abort+0xea>
  4025ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025d0:	f012 0f10 	tst.w	r2, #16
  4025d4:	d0fb      	beq.n	4025ce <udd_ep_abort+0xf2>
  4025d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025d8:	9203      	str	r2, [sp, #12]
  4025da:	9a03      	ldr	r2, [sp, #12]
  4025dc:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4025e0:	9203      	str	r2, [sp, #12]
  4025e2:	9a03      	ldr	r2, [sp, #12]
  4025e4:	f022 0210 	bic.w	r2, r2, #16
  4025e8:	9203      	str	r2, [sp, #12]
  4025ea:	9a03      	ldr	r2, [sp, #12]
  4025ec:	631a      	str	r2, [r3, #48]	; 0x30
  4025ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025f0:	f012 0f10 	tst.w	r2, #16
  4025f4:	d1fb      	bne.n	4025ee <udd_ep_abort+0x112>
		udd_ack_in_sent(ep);
  4025f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025f8:	9204      	str	r2, [sp, #16]
  4025fa:	9a04      	ldr	r2, [sp, #16]
  4025fc:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  402600:	9204      	str	r2, [sp, #16]
  402602:	9a04      	ldr	r2, [sp, #16]
  402604:	f022 0201 	bic.w	r2, r2, #1
  402608:	9204      	str	r2, [sp, #16]
  40260a:	9a04      	ldr	r2, [sp, #16]
  40260c:	631a      	str	r2, [r3, #48]	; 0x30
  40260e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402610:	f012 0f01 	tst.w	r2, #1
  402614:	d1fb      	bne.n	40260e <udd_ep_abort+0x132>
		udd_ep_job[ep - 1].bank = 0;
  402616:	1e6b      	subs	r3, r5, #1
  402618:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40261c:	4b06      	ldr	r3, [pc, #24]	; (402638 <udd_ep_abort+0x15c>)
  40261e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  402622:	7c5a      	ldrb	r2, [r3, #17]
  402624:	f36f 0283 	bfc	r2, #2, #2
  402628:	745a      	strb	r2, [r3, #17]
  40262a:	e788      	b.n	40253e <udd_ep_abort+0x62>
  40262c:	20000200 	.word	0x20000200
  402630:	40034000 	.word	0x40034000
  402634:	004012b5 	.word	0x004012b5
  402638:	20000da8 	.word	0x20000da8
  40263c:	00401275 	.word	0x00401275

00402640 <wdt_disable>:
  402640:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402644:	6043      	str	r3, [r0, #4]
  402646:	4770      	bx	lr

00402648 <init>:
** \brief     Initializes the USB interface.
** \param     settings Pointer to the USB interface settings.
**
****************************************************************************************/
uint8_t init(void *ptr) //initialize communication
{
  402648:	b508      	push	{r3, lr}
  /* Set result to false. */
  bool result = 0;
  /* USB stack, ASF */
  udc_start();
  40264a:	4b02      	ldr	r3, [pc, #8]	; (402654 <init+0xc>)
  40264c:	4798      	blx	r3
  result = 1;
  /* return result */
  return result;
} /*** end of init ***/
  40264e:	2001      	movs	r0, #1
  402650:	bd08      	pop	{r3, pc}
  402652:	bf00      	nop
  402654:	004009b5 	.word	0x004009b5

00402658 <available>:
** \brief     Return length of data in receive buffer.
** \return    Length of data in receive buffer.
**
****************************************************************************************/
uint8_t available()
{
  402658:	b508      	push	{r3, lr}
  return udi_cdc_get_nb_received_data();
  40265a:	4b02      	ldr	r3, [pc, #8]	; (402664 <available+0xc>)
  40265c:	4798      	blx	r3
} /*** end of available ***/
  40265e:	b2c0      	uxtb	r0, r0
  402660:	bd08      	pop	{r3, pc}
  402662:	bf00      	nop
  402664:	00400429 	.word	0x00400429

00402668 <read>:
** \brief     Return char from receive buffer.
** \return    Return next uint8_t from buffer.
**
****************************************************************************************/
uint8_t read()
{
  402668:	b508      	push	{r3, lr}
  return udi_cdc_getc();
  40266a:	4b02      	ldr	r3, [pc, #8]	; (402674 <read+0xc>)
  40266c:	4798      	blx	r3
} /*** end of read ***/
  40266e:	b2c0      	uxtb	r0, r0
  402670:	bd08      	pop	{r3, pc}
  402672:	bf00      	nop
  402674:	004006b1 	.word	0x004006b1

00402678 <write>:
** \brief     Write single char to interface.
** \return    Return result.
**
****************************************************************************************/
uint8_t write(const uint8_t *payload)
{
  402678:	b500      	push	{lr}
  40267a:	b083      	sub	sp, #12
  40267c:	ab02      	add	r3, sp, #8
  40267e:	f843 0d04 	str.w	r0, [r3, #-4]!
  return udi_cdc_write_buf(&payload, 1);
  402682:	2101      	movs	r1, #1
  402684:	4618      	mov	r0, r3
  402686:	4b03      	ldr	r3, [pc, #12]	; (402694 <write+0x1c>)
  402688:	4798      	blx	r3
} /*** end of write ***/
  40268a:	b2c0      	uxtb	r0, r0
  40268c:	b003      	add	sp, #12
  40268e:	f85d fb04 	ldr.w	pc, [sp], #4
  402692:	bf00      	nop
  402694:	00400805 	.word	0x00400805

00402698 <printbuf>:
** \brief     Print buffer to interface
** \return    Return result.
**
****************************************************************************************/
uint8_t printbuf(uint8_t *bufPtr, uint8_t len)  //print buffer
{
  402698:	b508      	push	{r3, lr}
  return udi_cdc_write_buf(bufPtr, len);	//return result
  40269a:	4b02      	ldr	r3, [pc, #8]	; (4026a4 <printbuf+0xc>)
  40269c:	4798      	blx	r3
} /*** end of printbuf ***/
  40269e:	b2c0      	uxtb	r0, r0
  4026a0:	bd08      	pop	{r3, pc}
  4026a2:	bf00      	nop
  4026a4:	00400805 	.word	0x00400805

004026a8 <getComInterface>:
} /*** end of getComInterface ***/
  4026a8:	4800      	ldr	r0, [pc, #0]	; (4026ac <getComInterface+0x4>)
  4026aa:	4770      	bx	lr
  4026ac:	20000110 	.word	0x20000110

004026b0 <pio_init>:
** \return
**
****************************************************************************************/
#if ADC_CORE_DEBUG == 1
	void pio_init (void)
	{
  4026b0:	b570      	push	{r4, r5, r6, lr}
  4026b2:	b082      	sub	sp, #8
		pmc_enable_periph_clk(ID_PIOA);
  4026b4:	200b      	movs	r0, #11
  4026b6:	4b0a      	ldr	r3, [pc, #40]	; (4026e0 <pio_init+0x30>)
  4026b8:	4798      	blx	r3
		pio_set_output(PIOA, ADC_DEBUG_PIN, LOW, DISABLE, DISABLE); //indicator pin for ADC
  4026ba:	4e0a      	ldr	r6, [pc, #40]	; (4026e4 <pio_init+0x34>)
  4026bc:	2400      	movs	r4, #0
  4026be:	9400      	str	r4, [sp, #0]
  4026c0:	4623      	mov	r3, r4
  4026c2:	4622      	mov	r2, r4
  4026c4:	f44f 7100 	mov.w	r1, #512	; 0x200
  4026c8:	4630      	mov	r0, r6
  4026ca:	4d07      	ldr	r5, [pc, #28]	; (4026e8 <pio_init+0x38>)
  4026cc:	47a8      	blx	r5
		pio_set_output(PIOA, TIMER_DEBUG_PIN, LOW, DISABLE, DISABLE);//indicator pin for Timer0
  4026ce:	9400      	str	r4, [sp, #0]
  4026d0:	4623      	mov	r3, r4
  4026d2:	4622      	mov	r2, r4
  4026d4:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4026d8:	4630      	mov	r0, r6
  4026da:	47a8      	blx	r5
	} /*** end of pio_init ***/
  4026dc:	b002      	add	sp, #8
  4026de:	bd70      	pop	{r4, r5, r6, pc}
  4026e0:	00403119 	.word	0x00403119
  4026e4:	400e0e00 	.word	0x400e0e00
  4026e8:	00402fd9 	.word	0x00402fd9

004026ec <core_init>:
** \param
** \return
**
****************************************************************************************/
void core_init (void)
{
  4026ec:	b570      	push	{r4, r5, r6, lr}
	/* Init ADC */
	pmc_enable_periph_clk(ID_ADC);
  4026ee:	201d      	movs	r0, #29
  4026f0:	4d26      	ldr	r5, [pc, #152]	; (40278c <core_init+0xa0>)
  4026f2:	47a8      	blx	r5
	adc_init(ADC, sysclk_get_cpu_hz(), ADC_CLK, 0);
  4026f4:	4c26      	ldr	r4, [pc, #152]	; (402790 <core_init+0xa4>)
  4026f6:	2300      	movs	r3, #0
  4026f8:	4a26      	ldr	r2, [pc, #152]	; (402794 <core_init+0xa8>)
  4026fa:	4927      	ldr	r1, [pc, #156]	; (402798 <core_init+0xac>)
  4026fc:	4620      	mov	r0, r4
  4026fe:	4e27      	ldr	r6, [pc, #156]	; (40279c <core_init+0xb0>)
  402700:	47b0      	blx	r6
	adc_configure_timing(ADC, 15, ADC_SETTLING_TIME_0, 0);
  402702:	2300      	movs	r3, #0
  402704:	461a      	mov	r2, r3
  402706:	210f      	movs	r1, #15
  402708:	4620      	mov	r0, r4
  40270a:	4e25      	ldr	r6, [pc, #148]	; (4027a0 <core_init+0xb4>)
  40270c:	47b0      	blx	r6
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0); //! WARNING! Bug in ASF! ADC_MR_FREERUN_ON doesn't actually enables freerun mode!
  40270e:	2200      	movs	r2, #0
  402710:	4611      	mov	r1, r2
  402712:	4620      	mov	r0, r4
  402714:	4b23      	ldr	r3, [pc, #140]	; (4027a4 <core_init+0xb8>)
  402716:	4798      	blx	r3
	//adc_check(ADC, sysclk_get_cpu_hz());
	ADC->ADC_COR |= (ADC_COR_DIFF0 | ADC_COR_DIFF1 | ADC_COR_DIFF2 | ADC_COR_DIFF3 |
  402718:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  40271a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
  40271e:	64e3      	str	r3, [r4, #76]	; 0x4c
                   ADC_COR_DIFF4 | ADC_COR_DIFF5 | ADC_COR_DIFF6 | ADC_COR_DIFF7); // set channels to differential
	//ADC->ADC_CGR = 0x00005555; // set gain to 1
	//TODO: replace with 
	int gain = 0x11;
	ADC -> ADC_CGR = ( ADC_CGR_GAIN0(gain) | ADC_CGR_GAIN1(gain) | ADC_CGR_GAIN2(gain) | ADC_CGR_GAIN3(gain));
  402720:	2355      	movs	r3, #85	; 0x55
  402722:	64a3      	str	r3, [r4, #72]	; 0x48
	adc_set_bias_current(ADC, 1);
  402724:	2101      	movs	r1, #1
  402726:	4620      	mov	r0, r4
  402728:	4b1f      	ldr	r3, [pc, #124]	; (4027a8 <core_init+0xbc>)
  40272a:	4798      	blx	r3
	#if ADC_CORE_DEBUG == 1
		pio_init();
  40272c:	4b1f      	ldr	r3, [pc, #124]	; (4027ac <core_init+0xc0>)
  40272e:	4798      	blx	r3
	#endif //ADC_CORE_DEBUG == 1

	adc_pdc_pntr = adc_get_pdc_base(ADC); // init DMA
  402730:	4620      	mov	r0, r4
  402732:	4b1f      	ldr	r3, [pc, #124]	; (4027b0 <core_init+0xc4>)
  402734:	4798      	blx	r3
  402736:	4b1f      	ldr	r3, [pc, #124]	; (4027b4 <core_init+0xc8>)
  402738:	6018      	str	r0, [r3, #0]

	//Both pdc1 & pdc2:
	adc_pdc1.ul_addr = adc_raw_data1;   //	!Warning		assignment makes integer from pointer without a cast [-Wint-conversion]
  40273a:	4a1f      	ldr	r2, [pc, #124]	; (4027b8 <core_init+0xcc>)
  40273c:	4b1f      	ldr	r3, [pc, #124]	; (4027bc <core_init+0xd0>)
  40273e:	601a      	str	r2, [r3, #0]
	adc_pdc2.ul_addr = adc_raw_data2;   //	!Warning		assignment makes integer from pointer without a cast [-Wint-conversion]
  402740:	4a1f      	ldr	r2, [pc, #124]	; (4027c0 <core_init+0xd4>)
  402742:	4b20      	ldr	r3, [pc, #128]	; (4027c4 <core_init+0xd8>)
  402744:	601a      	str	r2, [r3, #0]
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  402746:	4c20      	ldr	r4, [pc, #128]	; (4027c8 <core_init+0xdc>)
  402748:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
  40274c:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  402750:	2640      	movs	r6, #64	; 0x40
  402752:	f884 631d 	strb.w	r6, [r4, #797]	; 0x31d
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  402756:	6023      	str	r3, [r4, #0]
	NVIC_ClearPendingIRQ(ADC_IRQn);
	NVIC_SetPriority(ADC_IRQn, ADC_IRQ_PRIORITY);
	NVIC_EnableIRQ(ADC_IRQn);

	//init timer 0
	pmc_enable_periph_clk(ID_TC0); //Enable a peripheral's clock
  402758:	2017      	movs	r0, #23
  40275a:	47a8      	blx	r5
	tc_init(TC0, TIMER_CH, TC_CMR_TCCLKS_TIMER_CLOCK4 | TC_CMR_WAVE | TC_CMR_WAVSEL_UP_RC ); //Configure TC for timer, waveform generation, or capture.
  40275c:	4d1b      	ldr	r5, [pc, #108]	; (4027cc <core_init+0xe0>)
  40275e:	f24c 0203 	movw	r2, #49155	; 0xc003
  402762:	2100      	movs	r1, #0
  402764:	4628      	mov	r0, r5
  402766:	4b1a      	ldr	r3, [pc, #104]	; (4027d0 <core_init+0xe4>)
  402768:	4798      	blx	r3
	tc_write_rc(TC0, TIMER_CH, 50000); // Write to TC Register C (RC) on the selected channel.
  40276a:	f24c 3250 	movw	r2, #50000	; 0xc350
  40276e:	2100      	movs	r1, #0
  402770:	4628      	mov	r0, r5
  402772:	4b18      	ldr	r3, [pc, #96]	; (4027d4 <core_init+0xe8>)
  402774:	4798      	blx	r3
	tc_enable_interrupt(TC0, TIMER_CH, TC_IER_CPCS); //Enable the TC interrupts on the specified channel.
  402776:	2210      	movs	r2, #16
  402778:	2100      	movs	r1, #0
  40277a:	4628      	mov	r0, r5
  40277c:	4b16      	ldr	r3, [pc, #88]	; (4027d8 <core_init+0xec>)
  40277e:	4798      	blx	r3
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  402780:	f884 6317 	strb.w	r6, [r4, #791]	; 0x317
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  402784:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
  402788:	6023      	str	r3, [r4, #0]
  40278a:	bd70      	pop	{r4, r5, r6, pc}
  40278c:	00403119 	.word	0x00403119
  402790:	40038000 	.word	0x40038000
  402794:	00f42400 	.word	0x00f42400
  402798:	02dc6c00 	.word	0x02dc6c00
  40279c:	00400e59 	.word	0x00400e59
  4027a0:	00400e9b 	.word	0x00400e9b
  4027a4:	00400e8d 	.word	0x00400e8d
  4027a8:	00400ed7 	.word	0x00400ed7
  4027ac:	004026b1 	.word	0x004026b1
  4027b0:	00400ee9 	.word	0x00400ee9
  4027b4:	20000ea4 	.word	0x20000ea4
  4027b8:	20000e9c 	.word	0x20000e9c
  4027bc:	20000e90 	.word	0x20000e90
  4027c0:	20000e84 	.word	0x20000e84
  4027c4:	20000e68 	.word	0x20000e68
  4027c8:	e000e100 	.word	0xe000e100
  4027cc:	40010000 	.word	0x40010000
  4027d0:	004031f5 	.word	0x004031f5
  4027d4:	00403215 	.word	0x00403215
  4027d8:	0040321d 	.word	0x0040321d

004027dc <timer_set_compare_time>:
** \param
** \return
**
****************************************************************************************/
void timer_set_compare_time (uint32_t tim)
{
  4027dc:	b508      	push	{r3, lr}
	if(tim > 50000) tim = 50000;
	tc_write_rc(TC0, TIMER_CH, tim);
  4027de:	f24c 3250 	movw	r2, #50000	; 0xc350
  4027e2:	4282      	cmp	r2, r0
  4027e4:	bf28      	it	cs
  4027e6:	4602      	movcs	r2, r0
  4027e8:	2100      	movs	r1, #0
  4027ea:	4802      	ldr	r0, [pc, #8]	; (4027f4 <timer_set_compare_time+0x18>)
  4027ec:	4b02      	ldr	r3, [pc, #8]	; (4027f8 <timer_set_compare_time+0x1c>)
  4027ee:	4798      	blx	r3
  4027f0:	bd08      	pop	{r3, pc}
  4027f2:	bf00      	nop
  4027f4:	40010000 	.word	0x40010000
  4027f8:	00403215 	.word	0x00403215

004027fc <core_clear_avg_acuum>:
{
	uint32_t n;
	//clear averaging accumulator
	for(n = 0; n < ADC_RAW_DATA_SIZE; n++)
	{
		adc_raw_accumulator[n] = 0;
  4027fc:	4b03      	ldr	r3, [pc, #12]	; (40280c <core_clear_avg_acuum+0x10>)
  4027fe:	2200      	movs	r2, #0
  402800:	601a      	str	r2, [r3, #0]
  402802:	605a      	str	r2, [r3, #4]
  402804:	609a      	str	r2, [r3, #8]
  402806:	60da      	str	r2, [r3, #12]
  402808:	4770      	bx	lr
  40280a:	bf00      	nop
  40280c:	20000e74 	.word	0x20000e74

00402810 <core_configure>:
  if(master_settings != NULL)
  402810:	2800      	cmp	r0, #0
  402812:	d045      	beq.n	4028a0 <core_configure+0x90>
{
  402814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402816:	4604      	mov	r4, r0
    settings = *master_settings;
  402818:	4d22      	ldr	r5, [pc, #136]	; (4028a4 <core_configure+0x94>)
  40281a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  40281c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  40281e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
  402822:	e885 0007 	stmia.w	r5, {r0, r1, r2}
	  core_clear_avg_acuum ();
  402826:	4b20      	ldr	r3, [pc, #128]	; (4028a8 <core_configure+0x98>)
  402828:	4798      	blx	r3
	  adc_disable_all_channel(ADC);
  40282a:	4820      	ldr	r0, [pc, #128]	; (4028ac <core_configure+0x9c>)
  40282c:	4b20      	ldr	r3, [pc, #128]	; (4028b0 <core_configure+0xa0>)
  40282e:	4798      	blx	r3
  402830:	2400      	movs	r4, #0
		  if(settings.channels & (0x01 << n))
  402832:	3d10      	subs	r5, #16
			  nb_enables_ch++;
  402834:	4e1f      	ldr	r6, [pc, #124]	; (4028b4 <core_configure+0xa4>)
			  adc_enable_channel(ADC, (n * 2));
  402836:	4f1d      	ldr	r7, [pc, #116]	; (4028ac <core_configure+0x9c>)
  402838:	e002      	b.n	402840 <core_configure+0x30>
  40283a:	3401      	adds	r4, #1
	  for(n = 0; n < 4; n++)
  40283c:	2c04      	cmp	r4, #4
  40283e:	d00e      	beq.n	40285e <core_configure+0x4e>
		  if(settings.channels & (0x01 << n))
  402840:	7bab      	ldrb	r3, [r5, #14]
  402842:	4123      	asrs	r3, r4
  402844:	f013 0f01 	tst.w	r3, #1
  402848:	d0f7      	beq.n	40283a <core_configure+0x2a>
			  nb_enables_ch++;
  40284a:	6833      	ldr	r3, [r6, #0]
  40284c:	3301      	adds	r3, #1
  40284e:	6033      	str	r3, [r6, #0]
			  adc_enable_channel(ADC, (n * 2));
  402850:	0061      	lsls	r1, r4, #1
  402852:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
  402856:	4638      	mov	r0, r7
  402858:	4b17      	ldr	r3, [pc, #92]	; (4028b8 <core_configure+0xa8>)
  40285a:	4798      	blx	r3
  40285c:	e7ed      	b.n	40283a <core_configure+0x2a>
	  adc_pdc1.ul_size = nb_enables_ch;
  40285e:	4b15      	ldr	r3, [pc, #84]	; (4028b4 <core_configure+0xa4>)
  402860:	681b      	ldr	r3, [r3, #0]
  402862:	4916      	ldr	r1, [pc, #88]	; (4028bc <core_configure+0xac>)
  402864:	604b      	str	r3, [r1, #4]
	  adc_pdc2.ul_size = nb_enables_ch;
  402866:	4a16      	ldr	r2, [pc, #88]	; (4028c0 <core_configure+0xb0>)
  402868:	6053      	str	r3, [r2, #4]
	  pdc_rx_init(adc_pdc_pntr, &adc_pdc1, &adc_pdc2);
  40286a:	4b16      	ldr	r3, [pc, #88]	; (4028c4 <core_configure+0xb4>)
  40286c:	6818      	ldr	r0, [r3, #0]
  40286e:	4b16      	ldr	r3, [pc, #88]	; (4028c8 <core_configure+0xb8>)
  402870:	4798      	blx	r3
	  data_bank = 0;
  402872:	2200      	movs	r2, #0
  402874:	4b15      	ldr	r3, [pc, #84]	; (4028cc <core_configure+0xbc>)
  402876:	601a      	str	r2, [r3, #0]
	  adc_enable_interrupt(ADC, ADC_IER_ENDRX);
  402878:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40287c:	480b      	ldr	r0, [pc, #44]	; (4028ac <core_configure+0x9c>)
  40287e:	4b14      	ldr	r3, [pc, #80]	; (4028d0 <core_configure+0xc0>)
  402880:	4798      	blx	r3
	  avg_cntr = settings.averaging;
  402882:	4b08      	ldr	r3, [pc, #32]	; (4028a4 <core_configure+0x94>)
  402884:	8899      	ldrh	r1, [r3, #4]
  402886:	4a13      	ldr	r2, [pc, #76]	; (4028d4 <core_configure+0xc4>)
  402888:	6011      	str	r1, [r2, #0]
	  timer_set_compare_time(US_TO_TC(settings.acqusitionTime));
  40288a:	8818      	ldrh	r0, [r3, #0]
  40288c:	0840      	lsrs	r0, r0, #1
  40288e:	4b12      	ldr	r3, [pc, #72]	; (4028d8 <core_configure+0xc8>)
  402890:	4798      	blx	r3
			  TIMER_DEBUG_PIN_CLR;
  402892:	f44f 6180 	mov.w	r1, #1024	; 0x400
  402896:	4811      	ldr	r0, [pc, #68]	; (4028dc <core_configure+0xcc>)
  402898:	4b11      	ldr	r3, [pc, #68]	; (4028e0 <core_configure+0xd0>)
  40289a:	4798      	blx	r3
    return TRUE;
  40289c:	2001      	movs	r0, #1
  40289e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return FALSE;
  4028a0:	2000      	movs	r0, #0
  4028a2:	4770      	bx	lr
  4028a4:	20000df0 	.word	0x20000df0
  4028a8:	004027fd 	.word	0x004027fd
  4028ac:	40038000 	.word	0x40038000
  4028b0:	00400ec7 	.word	0x00400ec7
  4028b4:	20000e98 	.word	0x20000e98
  4028b8:	00400ebd 	.word	0x00400ebd
  4028bc:	20000e90 	.word	0x20000e90
  4028c0:	20000e68 	.word	0x20000e68
  4028c4:	20000ea4 	.word	0x20000ea4
  4028c8:	00402f9d 	.word	0x00402f9d
  4028cc:	20000de8 	.word	0x20000de8
  4028d0:	00400ecf 	.word	0x00400ecf
  4028d4:	20000e8c 	.word	0x20000e8c
  4028d8:	004027dd 	.word	0x004027dd
  4028dc:	400e0e00 	.word	0x400e0e00
  4028e0:	00402fd5 	.word	0x00402fd5

004028e4 <ADC_Handler>:
** \param
** \return
**
****************************************************************************************/
void ADC_Handler (void)
{
  4028e4:	b510      	push	{r4, lr}
	uint32_t n;
	if(adc_get_status(ADC) & ADC_ISR_ENDRX) // this gets triggered when acquisition of all samples for one averaging is complete
  4028e6:	4833      	ldr	r0, [pc, #204]	; (4029b4 <ADC_Handler+0xd0>)
  4028e8:	4b33      	ldr	r3, [pc, #204]	; (4029b8 <ADC_Handler+0xd4>)
  4028ea:	4798      	blx	r3
  4028ec:	f010 6f00 	tst.w	r0, #134217728	; 0x8000000
  4028f0:	d100      	bne.n	4028f4 <ADC_Handler+0x10>
  4028f2:	bd10      	pop	{r4, pc}

	{
		#if ADC_CORE_DEBUG == 1
		ADC_DEBUG_PIN_SET;
  4028f4:	f44f 7100 	mov.w	r1, #512	; 0x200
  4028f8:	4830      	ldr	r0, [pc, #192]	; (4029bc <ADC_Handler+0xd8>)
  4028fa:	4b31      	ldr	r3, [pc, #196]	; (4029c0 <ADC_Handler+0xdc>)
  4028fc:	4798      	blx	r3
		#endif //ADC_CORE_DEBUG == 1

		//ADC->ADC_MR &= (~ADC_MR_FREERUN); //stop adc
		if(!data_bank) // new data resides in adc_raw_data1
  4028fe:	4b31      	ldr	r3, [pc, #196]	; (4029c4 <ADC_Handler+0xe0>)
  402900:	681b      	ldr	r3, [r3, #0]
  402902:	2b00      	cmp	r3, #0
  402904:	d138      	bne.n	402978 <ADC_Handler+0x94>
		{
			pdc_rx_init(adc_pdc_pntr, NULL, &adc_pdc2);
  402906:	4c30      	ldr	r4, [pc, #192]	; (4029c8 <ADC_Handler+0xe4>)
  402908:	4a30      	ldr	r2, [pc, #192]	; (4029cc <ADC_Handler+0xe8>)
  40290a:	2100      	movs	r1, #0
  40290c:	6820      	ldr	r0, [r4, #0]
  40290e:	4b30      	ldr	r3, [pc, #192]	; (4029d0 <ADC_Handler+0xec>)
  402910:	4798      	blx	r3
			pdc_enable_transfer(adc_pdc_pntr, PERIPH_PTCR_RXTEN);
  402912:	2101      	movs	r1, #1
  402914:	6820      	ldr	r0, [r4, #0]
  402916:	4b2f      	ldr	r3, [pc, #188]	; (4029d4 <ADC_Handler+0xf0>)
  402918:	4798      	blx	r3
			adc_start(ADC);
  40291a:	4826      	ldr	r0, [pc, #152]	; (4029b4 <ADC_Handler+0xd0>)
  40291c:	4b2e      	ldr	r3, [pc, #184]	; (4029d8 <ADC_Handler+0xf4>)
  40291e:	4798      	blx	r3

			data_bank = 1;
  402920:	2201      	movs	r2, #1
  402922:	4b28      	ldr	r3, [pc, #160]	; (4029c4 <ADC_Handler+0xe0>)
  402924:	601a      	str	r2, [r3, #0]
  402926:	4b2d      	ldr	r3, [pc, #180]	; (4029dc <ADC_Handler+0xf8>)
  402928:	492d      	ldr	r1, [pc, #180]	; (4029e0 <ADC_Handler+0xfc>)
  40292a:	f103 0410 	add.w	r4, r3, #16
			for(n = 0; n < 4; n++)
			{
				adc_raw_accumulator[n] += adc_raw_data1[n];
  40292e:	f831 0b02 	ldrh.w	r0, [r1], #2
  402932:	681a      	ldr	r2, [r3, #0]
  402934:	4402      	add	r2, r0
  402936:	f843 2b04 	str.w	r2, [r3], #4
			for(n = 0; n < 4; n++)
  40293a:	42a3      	cmp	r3, r4
  40293c:	d1f7      	bne.n	40292e <ADC_Handler+0x4a>
				adc_raw_accumulator[n] += adc_raw_data2[n];
			}

		}
		#if ADC_CORE_DEBUG == 1
		ADC_DEBUG_PIN_CLR;
  40293e:	f44f 7100 	mov.w	r1, #512	; 0x200
  402942:	481e      	ldr	r0, [pc, #120]	; (4029bc <ADC_Handler+0xd8>)
  402944:	4b27      	ldr	r3, [pc, #156]	; (4029e4 <ADC_Handler+0x100>)
  402946:	4798      	blx	r3
		#endif //ADC_CORE_DEBUG == 1
		if(!(--avg_cntr))
  402948:	4a27      	ldr	r2, [pc, #156]	; (4029e8 <ADC_Handler+0x104>)
  40294a:	6813      	ldr	r3, [r2, #0]
  40294c:	3b01      	subs	r3, #1
  40294e:	6013      	str	r3, [r2, #0]
  402950:	2b00      	cmp	r3, #0
  402952:	d1ce      	bne.n	4028f2 <ADC_Handler+0xe>
		{
			pdc_disable_transfer(adc_pdc_pntr, PERIPH_PTCR_RXTEN);
  402954:	4c1c      	ldr	r4, [pc, #112]	; (4029c8 <ADC_Handler+0xe4>)
  402956:	2101      	movs	r1, #1
  402958:	6820      	ldr	r0, [r4, #0]
  40295a:	4b24      	ldr	r3, [pc, #144]	; (4029ec <ADC_Handler+0x108>)
  40295c:	4798      	blx	r3
			//do this to clear DMA flag
			pdc_rx_init(adc_pdc_pntr, &adc_pdc1, NULL);
  40295e:	2200      	movs	r2, #0
  402960:	4923      	ldr	r1, [pc, #140]	; (4029f0 <ADC_Handler+0x10c>)
  402962:	6820      	ldr	r0, [r4, #0]
  402964:	4b1a      	ldr	r3, [pc, #104]	; (4029d0 <ADC_Handler+0xec>)
  402966:	4798      	blx	r3
			//report new data
			new_data = 1;
  402968:	2201      	movs	r2, #1
  40296a:	4b22      	ldr	r3, [pc, #136]	; (4029f4 <ADC_Handler+0x110>)
  40296c:	601a      	str	r2, [r3, #0]
			avg_cntr = settings.acquisitionNbr;
  40296e:	4b22      	ldr	r3, [pc, #136]	; (4029f8 <ADC_Handler+0x114>)
  402970:	885a      	ldrh	r2, [r3, #2]
  402972:	4b1d      	ldr	r3, [pc, #116]	; (4029e8 <ADC_Handler+0x104>)
  402974:	601a      	str	r2, [r3, #0]
		}


	}
} /*** end of ADC_Handler ***/
  402976:	e7bc      	b.n	4028f2 <ADC_Handler+0xe>
			pdc_rx_init(adc_pdc_pntr, NULL, &adc_pdc1);
  402978:	4c13      	ldr	r4, [pc, #76]	; (4029c8 <ADC_Handler+0xe4>)
  40297a:	4a1d      	ldr	r2, [pc, #116]	; (4029f0 <ADC_Handler+0x10c>)
  40297c:	2100      	movs	r1, #0
  40297e:	6820      	ldr	r0, [r4, #0]
  402980:	4b13      	ldr	r3, [pc, #76]	; (4029d0 <ADC_Handler+0xec>)
  402982:	4798      	blx	r3
			pdc_enable_transfer(adc_pdc_pntr, PERIPH_PTCR_RXTEN);
  402984:	2101      	movs	r1, #1
  402986:	6820      	ldr	r0, [r4, #0]
  402988:	4b12      	ldr	r3, [pc, #72]	; (4029d4 <ADC_Handler+0xf0>)
  40298a:	4798      	blx	r3
			adc_start(ADC);
  40298c:	4809      	ldr	r0, [pc, #36]	; (4029b4 <ADC_Handler+0xd0>)
  40298e:	4b12      	ldr	r3, [pc, #72]	; (4029d8 <ADC_Handler+0xf4>)
  402990:	4798      	blx	r3
			data_bank = 0;
  402992:	2200      	movs	r2, #0
  402994:	4b0b      	ldr	r3, [pc, #44]	; (4029c4 <ADC_Handler+0xe0>)
  402996:	601a      	str	r2, [r3, #0]
  402998:	4b10      	ldr	r3, [pc, #64]	; (4029dc <ADC_Handler+0xf8>)
  40299a:	4918      	ldr	r1, [pc, #96]	; (4029fc <ADC_Handler+0x118>)
  40299c:	f103 0410 	add.w	r4, r3, #16
				adc_raw_accumulator[n] += adc_raw_data2[n];
  4029a0:	f831 0b02 	ldrh.w	r0, [r1], #2
  4029a4:	681a      	ldr	r2, [r3, #0]
  4029a6:	4402      	add	r2, r0
  4029a8:	f843 2b04 	str.w	r2, [r3], #4
			for(n = 0; n < ADC_RAW_DATA_SIZE; n++)
  4029ac:	42a3      	cmp	r3, r4
  4029ae:	d1f7      	bne.n	4029a0 <ADC_Handler+0xbc>
  4029b0:	e7c5      	b.n	40293e <ADC_Handler+0x5a>
  4029b2:	bf00      	nop
  4029b4:	40038000 	.word	0x40038000
  4029b8:	00400ed3 	.word	0x00400ed3
  4029bc:	400e0e00 	.word	0x400e0e00
  4029c0:	00402fd1 	.word	0x00402fd1
  4029c4:	20000de8 	.word	0x20000de8
  4029c8:	20000ea4 	.word	0x20000ea4
  4029cc:	20000e68 	.word	0x20000e68
  4029d0:	00402f9d 	.word	0x00402f9d
  4029d4:	00402fb5 	.word	0x00402fb5
  4029d8:	00400eb7 	.word	0x00400eb7
  4029dc:	20000e74 	.word	0x20000e74
  4029e0:	20000e9c 	.word	0x20000e9c
  4029e4:	00402fd5 	.word	0x00402fd5
  4029e8:	20000e8c 	.word	0x20000e8c
  4029ec:	00402fc1 	.word	0x00402fc1
  4029f0:	20000e90 	.word	0x20000e90
  4029f4:	20000dec 	.word	0x20000dec
  4029f8:	20000df0 	.word	0x20000df0
  4029fc:	20000e84 	.word	0x20000e84

00402a00 <TC0_Handler>:
** \param
** \return
**
****************************************************************************************/
void TC0_Handler (void) //?Timer/Counter 0 handler, se uporablja za ADC??
{
  402a00:	b510      	push	{r4, lr}
	if((tc_get_status(TC0, 0) & TC_SR_CPCS))
  402a02:	2100      	movs	r1, #0
  402a04:	4814      	ldr	r0, [pc, #80]	; (402a58 <TC0_Handler+0x58>)
  402a06:	4b15      	ldr	r3, [pc, #84]	; (402a5c <TC0_Handler+0x5c>)
  402a08:	4798      	blx	r3
  402a0a:	f010 0f10 	tst.w	r0, #16
  402a0e:	d100      	bne.n	402a12 <TC0_Handler+0x12>
  402a10:	bd10      	pop	{r4, pc}
	{
		#if ADC_CORE_DEBUG == 1
			TIMER_DEBUG_PIN_TGL;
  402a12:	f44f 6180 	mov.w	r1, #1024	; 0x400
  402a16:	4812      	ldr	r0, [pc, #72]	; (402a60 <TC0_Handler+0x60>)
  402a18:	4b12      	ldr	r3, [pc, #72]	; (402a64 <TC0_Handler+0x64>)
  402a1a:	4798      	blx	r3
		#endif //ADC_CORE_DEBUG == 1
		if(--settings.acquisitionNbr)
  402a1c:	4a12      	ldr	r2, [pc, #72]	; (402a68 <TC0_Handler+0x68>)
  402a1e:	8853      	ldrh	r3, [r2, #2]
  402a20:	3b01      	subs	r3, #1
  402a22:	b29b      	uxth	r3, r3
  402a24:	8053      	strh	r3, [r2, #2]
  402a26:	b933      	cbnz	r3, 402a36 <TC0_Handler+0x36>
			pdc_enable_transfer(adc_pdc_pntr, PERIPH_PTCR_RXTEN);
			adc_start(ADC);
		}
		else
		{
			acqusition_in_progress = 0;
  402a28:	2100      	movs	r1, #0
  402a2a:	4b10      	ldr	r3, [pc, #64]	; (402a6c <TC0_Handler+0x6c>)
  402a2c:	6019      	str	r1, [r3, #0]
			tc_stop(TC0, TIMER_CH);
  402a2e:	480a      	ldr	r0, [pc, #40]	; (402a58 <TC0_Handler+0x58>)
  402a30:	4b0f      	ldr	r3, [pc, #60]	; (402a70 <TC0_Handler+0x70>)
  402a32:	4798      	blx	r3
		}
	}
} /*** end of TC0_Handler ***/
  402a34:	e7ec      	b.n	402a10 <TC0_Handler+0x10>
			pdc_rx_init(adc_pdc_pntr, &adc_pdc1, &adc_pdc2);
  402a36:	4c0f      	ldr	r4, [pc, #60]	; (402a74 <TC0_Handler+0x74>)
  402a38:	4a0f      	ldr	r2, [pc, #60]	; (402a78 <TC0_Handler+0x78>)
  402a3a:	4910      	ldr	r1, [pc, #64]	; (402a7c <TC0_Handler+0x7c>)
  402a3c:	6820      	ldr	r0, [r4, #0]
  402a3e:	4b10      	ldr	r3, [pc, #64]	; (402a80 <TC0_Handler+0x80>)
  402a40:	4798      	blx	r3
			data_bank = 0;
  402a42:	2200      	movs	r2, #0
  402a44:	4b0f      	ldr	r3, [pc, #60]	; (402a84 <TC0_Handler+0x84>)
  402a46:	601a      	str	r2, [r3, #0]
			pdc_enable_transfer(adc_pdc_pntr, PERIPH_PTCR_RXTEN);
  402a48:	2101      	movs	r1, #1
  402a4a:	6820      	ldr	r0, [r4, #0]
  402a4c:	4b0e      	ldr	r3, [pc, #56]	; (402a88 <TC0_Handler+0x88>)
  402a4e:	4798      	blx	r3
			adc_start(ADC);
  402a50:	480e      	ldr	r0, [pc, #56]	; (402a8c <TC0_Handler+0x8c>)
  402a52:	4b0f      	ldr	r3, [pc, #60]	; (402a90 <TC0_Handler+0x90>)
  402a54:	4798      	blx	r3
  402a56:	bd10      	pop	{r4, pc}
  402a58:	40010000 	.word	0x40010000
  402a5c:	00403225 	.word	0x00403225
  402a60:	400e0e00 	.word	0x400e0e00
  402a64:	00403007 	.word	0x00403007
  402a68:	20000df0 	.word	0x20000df0
  402a6c:	20000de4 	.word	0x20000de4
  402a70:	0040320d 	.word	0x0040320d
  402a74:	20000ea4 	.word	0x20000ea4
  402a78:	20000e68 	.word	0x20000e68
  402a7c:	20000e90 	.word	0x20000e90
  402a80:	00402f9d 	.word	0x00402f9d
  402a84:	20000de8 	.word	0x20000de8
  402a88:	00402fb5 	.word	0x00402fb5
  402a8c:	40038000 	.word	0x40038000
  402a90:	00400eb7 	.word	0x00400eb7

00402a94 <StartACQ>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool StartACQ (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402a94:	b570      	push	{r4, r5, r6, lr}
  402a96:	4616      	mov	r6, r2
  /* Set result to false. */
  bool result = FALSE;
  
  /* Set parameter */
  settings->binMode = (uint8_t)ASCII_MODE;
  402a98:	2300      	movs	r3, #0
  402a9a:	73cb      	strb	r3, [r1, #15]
  /* Configure core with new settings. */
  core_configure(settings);
  402a9c:	4608      	mov	r0, r1
  402a9e:	4b0b      	ldr	r3, [pc, #44]	; (402acc <StartACQ+0x38>)
  402aa0:	4798      	blx	r3
  /* Start core */
  //core_start();
  /* Print msg to inform user */
  comInterface->len = sprintf((char*)comInterface->buf, "Acquisition started in ASCII\n\r");
  402aa2:	4c0b      	ldr	r4, [pc, #44]	; (402ad0 <StartACQ+0x3c>)
  402aa4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  402aa6:	6170      	str	r0, [r6, #20]
  402aa8:	61b1      	str	r1, [r6, #24]
  402aaa:	61f2      	str	r2, [r6, #28]
  402aac:	6233      	str	r3, [r6, #32]
  402aae:	cc07      	ldmia	r4!, {r0, r1, r2}
  402ab0:	6270      	str	r0, [r6, #36]	; 0x24
  402ab2:	62b1      	str	r1, [r6, #40]	; 0x28
  402ab4:	62f2      	str	r2, [r6, #44]	; 0x2c
  402ab6:	8822      	ldrh	r2, [r4, #0]
  402ab8:	78a3      	ldrb	r3, [r4, #2]
  402aba:	8632      	strh	r2, [r6, #48]	; 0x30
  402abc:	f886 3032 	strb.w	r3, [r6, #50]	; 0x32
  402ac0:	231e      	movs	r3, #30
  402ac2:	f886 3078 	strb.w	r3, [r6, #120]	; 0x78
  /* Set result */
  result = TRUE;
  
  /* Return result */
  return result;
} /*** end of StartACQ ***/
  402ac6:	2001      	movs	r0, #1
  402ac8:	bd70      	pop	{r4, r5, r6, pc}
  402aca:	bf00      	nop
  402acc:	00402811 	.word	0x00402811
  402ad0:	00407fc4 	.word	0x00407fc4

00402ad4 <StartFastACQ>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool StartFastACQ (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402ad4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402ad6:	4616      	mov	r6, r2
  /* Set result to false. */
  bool result = FALSE;
  
  /* Set parameter */
  settings->binMode = (uint8_t)FAST_MODE;
  402ad8:	2701      	movs	r7, #1
  402ada:	73cf      	strb	r7, [r1, #15]
  /* Configure core with new settings. */
  core_configure(settings); //configure core with new settings
  402adc:	4608      	mov	r0, r1
  402ade:	4b09      	ldr	r3, [pc, #36]	; (402b04 <StartFastACQ+0x30>)
  402ae0:	4798      	blx	r3
  /* Start core */
  //core_start();
  /* Print msg to inform user */
  comInterface->len = sprintf((char*)comInterface->buf, "Acquisition started in binary\n\r");
  402ae2:	4c09      	ldr	r4, [pc, #36]	; (402b08 <StartFastACQ+0x34>)
  402ae4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  402ae6:	6170      	str	r0, [r6, #20]
  402ae8:	61b1      	str	r1, [r6, #24]
  402aea:	61f2      	str	r2, [r6, #28]
  402aec:	6233      	str	r3, [r6, #32]
  402aee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  402af0:	6270      	str	r0, [r6, #36]	; 0x24
  402af2:	62b1      	str	r1, [r6, #40]	; 0x28
  402af4:	62f2      	str	r2, [r6, #44]	; 0x2c
  402af6:	6333      	str	r3, [r6, #48]	; 0x30
  402af8:	231f      	movs	r3, #31
  402afa:	f886 3078 	strb.w	r3, [r6, #120]	; 0x78
  /* Set result */
  result = TRUE;
  
  /* Return result */
  return result;
} /*** end of StartFastACQ ***/
  402afe:	4638      	mov	r0, r7
  402b00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402b02:	bf00      	nop
  402b04:	00402811 	.word	0x00402811
  402b08:	00407fe4 	.word	0x00407fe4

00402b0c <StopACQ>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool StopACQ (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402b0c:	b570      	push	{r4, r5, r6, lr}
  402b0e:	4616      	mov	r6, r2
  /* Set result to false. */
  bool result = FALSE;
  
  /* Configure core with new settings. */
  core_configure(settings);
  402b10:	4608      	mov	r0, r1
  402b12:	4b08      	ldr	r3, [pc, #32]	; (402b34 <StopACQ+0x28>)
  402b14:	4798      	blx	r3
  /* Stop core */
  //TODO: call function to stop core
  /* Print msg to inform user */
  comInterface->len = sprintf((char*)comInterface->buf, "Acquisition stopped\n\r");
  402b16:	4c08      	ldr	r4, [pc, #32]	; (402b38 <StopACQ+0x2c>)
  402b18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  402b1a:	6170      	str	r0, [r6, #20]
  402b1c:	61b1      	str	r1, [r6, #24]
  402b1e:	61f2      	str	r2, [r6, #28]
  402b20:	6233      	str	r3, [r6, #32]
  402b22:	6820      	ldr	r0, [r4, #0]
  402b24:	6270      	str	r0, [r6, #36]	; 0x24
  402b26:	88a3      	ldrh	r3, [r4, #4]
  402b28:	8533      	strh	r3, [r6, #40]	; 0x28
  402b2a:	2315      	movs	r3, #21
  402b2c:	f886 3078 	strb.w	r3, [r6, #120]	; 0x78
  /* Set result */
  result = TRUE;
  
  /* Return result */
  return result;
} /*** end of StopACQ ***/
  402b30:	2001      	movs	r0, #1
  402b32:	bd70      	pop	{r4, r5, r6, pc}
  402b34:	00402811 	.word	0x00402811
  402b38:	00408004 	.word	0x00408004

00402b3c <SetSamplePeriod>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool SetSamplePeriod (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402b3c:	b538      	push	{r3, r4, r5, lr}
  /* Set result to false. */
  bool result = FALSE;
  
  /* Is parameter is range? */
  if(*parPtr >= SAMPLE_PERIOD_LOWRANGE && *parPtr <= SAMPLE_PERIOD_HIGHRANGE)
  402b3e:	6803      	ldr	r3, [r0, #0]
  402b40:	f1a3 040a 	sub.w	r4, r3, #10
  402b44:	f24c 3046 	movw	r0, #49990	; 0xc346
  402b48:	4284      	cmp	r4, r0
  402b4a:	d901      	bls.n	402b50 <SetSamplePeriod+0x14>
  bool result = FALSE;
  402b4c:	2000      	movs	r0, #0
    result = TRUE;
  }
  
  /* Return result */
  return result;
} /*** end of SetSamplePeriod ***/
  402b4e:	bd38      	pop	{r3, r4, r5, pc}
  402b50:	4615      	mov	r5, r2
  402b52:	460c      	mov	r4, r1
    settings->acqusitionTime = (uint16_t)*parPtr;
  402b54:	800b      	strh	r3, [r1, #0]
    core_configure(settings);
  402b56:	4608      	mov	r0, r1
  402b58:	4b05      	ldr	r3, [pc, #20]	; (402b70 <SetSamplePeriod+0x34>)
  402b5a:	4798      	blx	r3
    comInterface->len = sprintf((char*)comInterface->buf, "Sample period set to %u uS\n\r",
  402b5c:	8822      	ldrh	r2, [r4, #0]
  402b5e:	4905      	ldr	r1, [pc, #20]	; (402b74 <SetSamplePeriod+0x38>)
  402b60:	f105 0014 	add.w	r0, r5, #20
  402b64:	4b04      	ldr	r3, [pc, #16]	; (402b78 <SetSamplePeriod+0x3c>)
  402b66:	4798      	blx	r3
  402b68:	f885 0078 	strb.w	r0, [r5, #120]	; 0x78
    result = TRUE;
  402b6c:	2001      	movs	r0, #1
  402b6e:	bd38      	pop	{r3, r4, r5, pc}
  402b70:	00402811 	.word	0x00402811
  402b74:	00407f80 	.word	0x00407f80
  402b78:	004036dd 	.word	0x004036dd

00402b7c <SetAverageCount>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool SetAverageCount (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402b7c:	b538      	push	{r3, r4, r5, lr}
  /* Set result to false. */
  bool result = FALSE;
  
  /* Is parameter is range? */
  if(*parPtr >= AVERAGE_COUNT_LOWRANGE &&  *parPtr <= AVERAGE_COUNT_HIGHRANGE)
  402b7e:	6803      	ldr	r3, [r0, #0]
  402b80:	1e58      	subs	r0, r3, #1
  402b82:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  402b86:	d301      	bcc.n	402b8c <SetAverageCount+0x10>
  bool result = FALSE;
  402b88:	2000      	movs	r0, #0
    result = TRUE;
  }
  
  /* Return result */
  return result;
} /*** end of SetAverageCount ***/
  402b8a:	bd38      	pop	{r3, r4, r5, pc}
  402b8c:	4615      	mov	r5, r2
  402b8e:	460c      	mov	r4, r1
    settings->averaging = (uint16_t)*parPtr;
  402b90:	808b      	strh	r3, [r1, #4]
    core_configure(settings);
  402b92:	4608      	mov	r0, r1
  402b94:	4b05      	ldr	r3, [pc, #20]	; (402bac <SetAverageCount+0x30>)
  402b96:	4798      	blx	r3
    comInterface->len = sprintf((char*)comInterface->buf,
  402b98:	88a2      	ldrh	r2, [r4, #4]
  402b9a:	4905      	ldr	r1, [pc, #20]	; (402bb0 <SetAverageCount+0x34>)
  402b9c:	f105 0014 	add.w	r0, r5, #20
  402ba0:	4b04      	ldr	r3, [pc, #16]	; (402bb4 <SetAverageCount+0x38>)
  402ba2:	4798      	blx	r3
  402ba4:	f885 0078 	strb.w	r0, [r5, #120]	; 0x78
    result = TRUE;
  402ba8:	2001      	movs	r0, #1
  402baa:	bd38      	pop	{r3, r4, r5, pc}
  402bac:	00402811 	.word	0x00402811
  402bb0:	00407efc 	.word	0x00407efc
  402bb4:	004036dd 	.word	0x004036dd

00402bb8 <SetMeasurmentCount>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool SetMeasurmentCount (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402bb8:	b538      	push	{r3, r4, r5, lr}
  /* Set result to false. */
  bool result = FALSE;
  
  /* Is parameter is range? */
  if(*parPtr >= MEASURMENT_COUNT_LOWRANGE &&  *parPtr <= MEASURMENT_COUNT_HIGHRANGE)
  402bba:	6803      	ldr	r3, [r0, #0]
  402bbc:	1e58      	subs	r0, r3, #1
  402bbe:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  402bc2:	d301      	bcc.n	402bc8 <SetMeasurmentCount+0x10>
  bool result = FALSE;
  402bc4:	2000      	movs	r0, #0
    result = TRUE;
  }
  
  /* Return result */
  return result;
} /*** end of SetMeasurmentCount ***/
  402bc6:	bd38      	pop	{r3, r4, r5, pc}
  402bc8:	4615      	mov	r5, r2
  402bca:	460c      	mov	r4, r1
    settings->acquisitionNbr = (uint16_t)*parPtr;
  402bcc:	804b      	strh	r3, [r1, #2]
    core_configure(settings);
  402bce:	4608      	mov	r0, r1
  402bd0:	4b05      	ldr	r3, [pc, #20]	; (402be8 <SetMeasurmentCount+0x30>)
  402bd2:	4798      	blx	r3
    comInterface->len = sprintf((char*)comInterface->buf,
  402bd4:	8862      	ldrh	r2, [r4, #2]
  402bd6:	4905      	ldr	r1, [pc, #20]	; (402bec <SetMeasurmentCount+0x34>)
  402bd8:	f105 0014 	add.w	r0, r5, #20
  402bdc:	4b04      	ldr	r3, [pc, #16]	; (402bf0 <SetMeasurmentCount+0x38>)
  402bde:	4798      	blx	r3
  402be0:	f885 0078 	strb.w	r0, [r5, #120]	; 0x78
    result = TRUE;
  402be4:	2001      	movs	r0, #1
  402be6:	bd38      	pop	{r3, r4, r5, pc}
  402be8:	00402811 	.word	0x00402811
  402bec:	00407f50 	.word	0x00407f50
  402bf0:	004036dd 	.word	0x004036dd

00402bf4 <SetSequencer>:
{
  /* Set result to false. */
  bool result = FALSE;
  
  /* Is parameter is range? */
  if((*(parPtr + 0) >= SEQUENCER_LOWRANGE && *(parPtr + 0) <= SEQUENCER_HIGHRANGE) &&
  402bf4:	6803      	ldr	r3, [r0, #0]
  402bf6:	2b04      	cmp	r3, #4
  402bf8:	d829      	bhi.n	402c4e <SetSequencer+0x5a>
  402bfa:	6843      	ldr	r3, [r0, #4]
  402bfc:	2b04      	cmp	r3, #4
  402bfe:	d828      	bhi.n	402c52 <SetSequencer+0x5e>
     (*(parPtr + 1) >= SEQUENCER_LOWRANGE && *(parPtr + 1) <= SEQUENCER_HIGHRANGE) &&
  402c00:	6883      	ldr	r3, [r0, #8]
  402c02:	2b04      	cmp	r3, #4
  402c04:	d827      	bhi.n	402c56 <SetSequencer+0x62>
     (*(parPtr + 2) >= SEQUENCER_LOWRANGE && *(parPtr + 2) <= SEQUENCER_HIGHRANGE) &&
  402c06:	68c3      	ldr	r3, [r0, #12]
  402c08:	2b04      	cmp	r3, #4
  402c0a:	d826      	bhi.n	402c5a <SetSequencer+0x66>
{
  402c0c:	b530      	push	{r4, r5, lr}
  402c0e:	b083      	sub	sp, #12
  402c10:	1f03      	subs	r3, r0, #4
  402c12:	f101 0410 	add.w	r4, r1, #16
  402c16:	300c      	adds	r0, #12
     (*(parPtr + 3) >= SEQUENCER_LOWRANGE && *(parPtr + 3) <= SEQUENCER_HIGHRANGE))
  {
    /* Set parameters */
    for(uint8_t i = 0; i < 4; i++)  settings->sequence[i] = (uint8_t)*(parPtr + i);
  402c18:	f853 5f04 	ldr.w	r5, [r3, #4]!
  402c1c:	f804 5b01 	strb.w	r5, [r4], #1
  402c20:	4283      	cmp	r3, r0
  402c22:	d1f9      	bne.n	402c18 <SetSequencer+0x24>
  402c24:	4615      	mov	r5, r2
  402c26:	460c      	mov	r4, r1
    /* Configure core with new settings. */
    core_configure(settings);
  402c28:	4608      	mov	r0, r1
  402c2a:	4b0d      	ldr	r3, [pc, #52]	; (402c60 <SetSequencer+0x6c>)
  402c2c:	4798      	blx	r3
    /* Print msg to inform user */
    comInterface->len = sprintf((char*)comInterface->buf,
  402c2e:	7c63      	ldrb	r3, [r4, #17]
  402c30:	7c22      	ldrb	r2, [r4, #16]
  402c32:	7ce1      	ldrb	r1, [r4, #19]
  402c34:	9101      	str	r1, [sp, #4]
  402c36:	7ca1      	ldrb	r1, [r4, #18]
  402c38:	9100      	str	r1, [sp, #0]
  402c3a:	490a      	ldr	r1, [pc, #40]	; (402c64 <SetSequencer+0x70>)
  402c3c:	f105 0014 	add.w	r0, r5, #20
  402c40:	4c09      	ldr	r4, [pc, #36]	; (402c68 <SetSequencer+0x74>)
  402c42:	47a0      	blx	r4
  402c44:	f885 0078 	strb.w	r0, [r5, #120]	; 0x78
                                "Sequence set to: %u, %u, %u, %u\n\r",
                                settings->sequence[0], settings->sequence[1],
                                settings->sequence[2], settings->sequence[3]);
    /* Set result */
    result = TRUE;
  402c48:	2001      	movs	r0, #1
  }  
  
  /* Return result */
  return result;
} /*** end of SetSequencer ***/
  402c4a:	b003      	add	sp, #12
  402c4c:	bd30      	pop	{r4, r5, pc}
  bool result = FALSE;
  402c4e:	2000      	movs	r0, #0
  402c50:	4770      	bx	lr
  402c52:	2000      	movs	r0, #0
  402c54:	4770      	bx	lr
  402c56:	2000      	movs	r0, #0
  402c58:	4770      	bx	lr
  402c5a:	2000      	movs	r0, #0
  402c5c:	4770      	bx	lr
  402c5e:	bf00      	nop
  402c60:	00402811 	.word	0x00402811
  402c64:	00407fa0 	.word	0x00407fa0
  402c68:	004036dd 	.word	0x004036dd

00402c6c <SetDACvalue>:
**            module.
** \return    True if successful, false otherwise.
**
****************************************************************************************/
bool SetDACvalue (int32_t *parPtr, daq_settings_t *settings, COM_t *comInterface)
{
  402c6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  /* Set result to false. */
  bool result = FALSE;
  
  /* Is parameter is range? */
  if((*(parPtr + 0) >= DAC_VALUE_PAR0_LOWRANGE &&  *(parPtr + 0) <= DAC_VALUE_PAR0_HIGHRANGE) &&
  402c6e:	6803      	ldr	r3, [r0, #0]
  402c70:	1e5c      	subs	r4, r3, #1
  402c72:	2c03      	cmp	r4, #3
  402c74:	d821      	bhi.n	402cba <SetDACvalue+0x4e>
     (*(parPtr + 1) >= DAC_VALUE_PAR1_LOWRANGE &&  *(parPtr + 1) <= DAC_VALUE_PAR1_HIGHRANGE))
  402c76:	6845      	ldr	r5, [r0, #4]
  402c78:	f505 541c 	add.w	r4, r5, #9984	; 0x2700
  402c7c:	3410      	adds	r4, #16
  if((*(parPtr + 0) >= DAC_VALUE_PAR0_LOWRANGE &&  *(parPtr + 0) <= DAC_VALUE_PAR0_HIGHRANGE) &&
  402c7e:	f644 6620 	movw	r6, #20000	; 0x4e20
  402c82:	42b4      	cmp	r4, r6
  402c84:	d901      	bls.n	402c8a <SetDACvalue+0x1e>
  bool result = FALSE;
  402c86:	2000      	movs	r0, #0
    result = TRUE;
  }
  
  /* Return result */
  return result;
} /*** end of SetDACvalue ***/
  402c88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c8a:	4616      	mov	r6, r2
  402c8c:	460f      	mov	r7, r1
  402c8e:	4604      	mov	r4, r0
    settings->DACval[(uint8_t)*parPtr] = (int16_t)*(parPtr + 1);
  402c90:	b2db      	uxtb	r3, r3
  402c92:	eb01 0343 	add.w	r3, r1, r3, lsl #1
  402c96:	80dd      	strh	r5, [r3, #6]
    core_configure(settings);
  402c98:	4608      	mov	r0, r1
  402c9a:	4b09      	ldr	r3, [pc, #36]	; (402cc0 <SetDACvalue+0x54>)
  402c9c:	4798      	blx	r3
  402c9e:	7822      	ldrb	r2, [r4, #0]
                                (uint8_t)*(parPtr + 0), settings->DACval[(uint8_t)*parPtr]);
  402ca0:	eb07 0142 	add.w	r1, r7, r2, lsl #1
    comInterface->len = sprintf((char*)comInterface->buf, "DAC channel %u set to %d mV\n\r",
  402ca4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
  402ca8:	4906      	ldr	r1, [pc, #24]	; (402cc4 <SetDACvalue+0x58>)
  402caa:	f106 0014 	add.w	r0, r6, #20
  402cae:	4c06      	ldr	r4, [pc, #24]	; (402cc8 <SetDACvalue+0x5c>)
  402cb0:	47a0      	blx	r4
  402cb2:	f886 0078 	strb.w	r0, [r6, #120]	; 0x78
    result = TRUE;
  402cb6:	2001      	movs	r0, #1
  402cb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  bool result = FALSE;
  402cba:	2000      	movs	r0, #0
  402cbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402cbe:	bf00      	nop
  402cc0:	00402811 	.word	0x00402811
  402cc4:	00407f30 	.word	0x00407f30
  402cc8:	004036dd 	.word	0x004036dd

00402ccc <getPar>:
{
  402ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402cd0:	b089      	sub	sp, #36	; 0x24
  402cd2:	4681      	mov	r9, r0
  402cd4:	4688      	mov	r8, r1
  402cd6:	4616      	mov	r6, r2
  402cd8:	461c      	mov	r4, r3
  402cda:	1e45      	subs	r5, r0, #1
  402cdc:	b2ed      	uxtb	r5, r5
  402cde:	eb02 0585 	add.w	r5, r2, r5, lsl #2
  uint8_t newChar = 0, currentPar = 0, prevIdx = 0, idx = 0;
  402ce2:	2700      	movs	r7, #0
  402ce4:	46ba      	mov	sl, r7
        buf[currentPar][idx] = 0;
  402ce6:	46bb      	mov	fp, r7
  while(!result && timeout)
  402ce8:	f1b8 0f00 	cmp.w	r8, #0
  402cec:	d061      	beq.n	402db2 <getPar+0xe6>
    if(comInterface->available())
  402cee:	6863      	ldr	r3, [r4, #4]
  402cf0:	4798      	blx	r3
  402cf2:	2800      	cmp	r0, #0
  402cf4:	d0fb      	beq.n	402cee <getPar+0x22>
      newChar = comInterface->read();
  402cf6:	68a3      	ldr	r3, [r4, #8]
  402cf8:	4798      	blx	r3
      if(newChar == '\r')
  402cfa:	280d      	cmp	r0, #13
  402cfc:	d016      	beq.n	402d2c <getPar+0x60>
      else if(newChar == ',')
  402cfe:	282c      	cmp	r0, #44	; 0x2c
  402d00:	d030      	beq.n	402d64 <getPar+0x98>
      else if(newChar == '\b')
  402d02:	2808      	cmp	r0, #8
  402d04:	d032      	beq.n	402d6c <getPar+0xa0>
      else if((newChar >= '0' && newChar <= '9') || newChar == '-')
  402d06:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
  402d0a:	b2db      	uxtb	r3, r3
  402d0c:	2b09      	cmp	r3, #9
  402d0e:	d901      	bls.n	402d14 <getPar+0x48>
  402d10:	282d      	cmp	r0, #45	; 0x2d
  402d12:	d1e9      	bne.n	402ce8 <getPar+0x1c>
        buf[currentPar][idx] = newChar;
  402d14:	ebc7 03c7 	rsb	r3, r7, r7, lsl #3
  402d18:	aa08      	add	r2, sp, #32
  402d1a:	4413      	add	r3, r2
  402d1c:	4453      	add	r3, sl
  402d1e:	f803 0c1c 	strb.w	r0, [r3, #-28]
        idx++;
  402d22:	f10a 0a01 	add.w	sl, sl, #1
  402d26:	fa5f fa8a 	uxtb.w	sl, sl
  402d2a:	e7dd      	b.n	402ce8 <getPar+0x1c>
        if((parCount == (currentPar + 1) && idx) || !parCount)
  402d2c:	1c7b      	adds	r3, r7, #1
  402d2e:	4599      	cmp	r9, r3
  402d30:	d004      	beq.n	402d3c <getPar+0x70>
  402d32:	f1b9 0f00 	cmp.w	r9, #0
  402d36:	d011      	beq.n	402d5c <getPar+0x90>
        else timeout = 0;
  402d38:	46d8      	mov	r8, fp
  402d3a:	e7d5      	b.n	402ce8 <getPar+0x1c>
        if((parCount == (currentPar + 1) && idx) || !parCount)
  402d3c:	f1ba 0f00 	cmp.w	sl, #0
  402d40:	d0f7      	beq.n	402d32 <getPar+0x66>
          for(uint8_t i = 0; i < parCount; i++) *(parPtr + i) = (int32_t)atoi((char*)buf[i]);
  402d42:	f1b9 0f00 	cmp.w	r9, #0
  402d46:	d009      	beq.n	402d5c <getPar+0x90>
  402d48:	ac01      	add	r4, sp, #4
  402d4a:	3e04      	subs	r6, #4
  402d4c:	4f1a      	ldr	r7, [pc, #104]	; (402db8 <getPar+0xec>)
  402d4e:	4620      	mov	r0, r4
  402d50:	47b8      	blx	r7
  402d52:	f846 0f04 	str.w	r0, [r6, #4]!
  402d56:	3407      	adds	r4, #7
  402d58:	42ae      	cmp	r6, r5
  402d5a:	d1f8      	bne.n	402d4e <getPar+0x82>
  while(!result && timeout)
  402d5c:	2001      	movs	r0, #1
} /*** end of getPar ***/
  402d5e:	b009      	add	sp, #36	; 0x24
  402d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        currentPar++;
  402d64:	3701      	adds	r7, #1
  402d66:	b2ff      	uxtb	r7, r7
        idx = 0;
  402d68:	46da      	mov	sl, fp
  402d6a:	e7bd      	b.n	402ce8 <getPar+0x1c>
        if (buf[currentPar][idx - 1] == ',' && currentPar)
  402d6c:	ebc7 03c7 	rsb	r3, r7, r7, lsl #3
  402d70:	aa08      	add	r2, sp, #32
  402d72:	4413      	add	r3, r2
  402d74:	4453      	add	r3, sl
  402d76:	f813 3c1d 	ldrb.w	r3, [r3, #-29]
  402d7a:	2b2c      	cmp	r3, #44	; 0x2c
  402d7c:	d00e      	beq.n	402d9c <getPar+0xd0>
        else if(idx) idx--;
  402d7e:	f1ba 0f00 	cmp.w	sl, #0
  402d82:	d014      	beq.n	402dae <getPar+0xe2>
  402d84:	f10a 3aff 	add.w	sl, sl, #4294967295
  402d88:	fa5f fa8a 	uxtb.w	sl, sl
        buf[currentPar][idx] = 0;
  402d8c:	ebc7 03c7 	rsb	r3, r7, r7, lsl #3
  402d90:	aa08      	add	r2, sp, #32
  402d92:	4413      	add	r3, r2
  402d94:	4453      	add	r3, sl
  402d96:	f803 bc1c 	strb.w	fp, [r3, #-28]
  402d9a:	e7a5      	b.n	402ce8 <getPar+0x1c>
        if (buf[currentPar][idx - 1] == ',' && currentPar)
  402d9c:	2f00      	cmp	r7, #0
  402d9e:	d0ee      	beq.n	402d7e <getPar+0xb2>
          currentPar--;
  402da0:	3f01      	subs	r7, #1
  402da2:	b2ff      	uxtb	r7, r7
          idx = prevIdx + 1;
  402da4:	f10a 0a01 	add.w	sl, sl, #1
  402da8:	fa5f fa8a 	uxtb.w	sl, sl
  402dac:	e7ee      	b.n	402d8c <getPar+0xc0>
        else timeout = 0;
  402dae:	46d8      	mov	r8, fp
  402db0:	e7ec      	b.n	402d8c <getPar+0xc0>
  while(!result && timeout)
  402db2:	2000      	movs	r0, #0
  402db4:	e7d3      	b.n	402d5e <getPar+0x92>
  402db6:	bf00      	nop
  402db8:	004034fd 	.word	0x004034fd

00402dbc <parseCommand>:
{
  402dbc:	b510      	push	{r4, lr}
	switch (CMD)
  402dbe:	3841      	subs	r0, #65	; 0x41
  402dc0:	2832      	cmp	r0, #50	; 0x32
  402dc2:	d878      	bhi.n	402eb6 <parseCommand+0xfa>
  402dc4:	e8df f000 	tbb	[pc, r0]
  402dc8:	6b777747 	.word	0x6b777747
  402dcc:	7777535f 	.word	0x7777535f
  402dd0:	77777777 	.word	0x77777777
  402dd4:	77777777 	.word	0x77777777
  402dd8:	301a3b77 	.word	0x301a3b77
  402ddc:	77777777 	.word	0x77777777
  402de0:	77777777 	.word	0x77777777
  402de4:	77777777 	.word	0x77777777
  402de8:	77777777 	.word	0x77777777
  402dec:	77777777 	.word	0x77777777
  402df0:	77777777 	.word	0x77777777
  402df4:	77777777 	.word	0x77777777
  402df8:	7777      	.short	0x7777
  402dfa:	25          	.byte	0x25
  402dfb:	00          	.byte	0x00
      parsedCMD->cmd = CMD_START_ACQ;
  402dfc:	2353      	movs	r3, #83	; 0x53
  402dfe:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr = StartACQ;
  402e00:	4b2f      	ldr	r3, [pc, #188]	; (402ec0 <parseCommand+0x104>)
  402e02:	604b      	str	r3, [r1, #4]
      result = getPar(0, PARAMETER_TIMEOUT, NULL, comInterface);
  402e04:	4613      	mov	r3, r2
  402e06:	2200      	movs	r2, #0
  402e08:	2164      	movs	r1, #100	; 0x64
  402e0a:	4610      	mov	r0, r2
  402e0c:	4c2d      	ldr	r4, [pc, #180]	; (402ec4 <parseCommand+0x108>)
  402e0e:	47a0      	blx	r4
      break;
  402e10:	bd10      	pop	{r4, pc}
      parsedCMD->cmd = CMD_START_FAST_ACQ;
  402e12:	2373      	movs	r3, #115	; 0x73
  402e14:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr = StartFastACQ;
  402e16:	4b2c      	ldr	r3, [pc, #176]	; (402ec8 <parseCommand+0x10c>)
  402e18:	604b      	str	r3, [r1, #4]
      result = getPar(0, PARAMETER_TIMEOUT, NULL, comInterface);
  402e1a:	4613      	mov	r3, r2
  402e1c:	2200      	movs	r2, #0
  402e1e:	2164      	movs	r1, #100	; 0x64
  402e20:	4610      	mov	r0, r2
  402e22:	4c28      	ldr	r4, [pc, #160]	; (402ec4 <parseCommand+0x108>)
  402e24:	47a0      	blx	r4
      break;
  402e26:	bd10      	pop	{r4, pc}
      parsedCMD->cmd = CMD_STOP_ACQ;
  402e28:	2354      	movs	r3, #84	; 0x54
  402e2a:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr = StopACQ;
  402e2c:	4b27      	ldr	r3, [pc, #156]	; (402ecc <parseCommand+0x110>)
  402e2e:	604b      	str	r3, [r1, #4]
      result = getPar(0, PARAMETER_TIMEOUT, NULL, comInterface);
  402e30:	4613      	mov	r3, r2
  402e32:	2200      	movs	r2, #0
  402e34:	2164      	movs	r1, #100	; 0x64
  402e36:	4610      	mov	r0, r2
  402e38:	4c22      	ldr	r4, [pc, #136]	; (402ec4 <parseCommand+0x108>)
  402e3a:	47a0      	blx	r4
      break;
  402e3c:	bd10      	pop	{r4, pc}
      parsedCMD->cmd = CMD_SET_SAMPLE_PERIOD;
  402e3e:	2352      	movs	r3, #82	; 0x52
  402e40:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr = SetSamplePeriod;
  402e42:	4b23      	ldr	r3, [pc, #140]	; (402ed0 <parseCommand+0x114>)
  402e44:	604b      	str	r3, [r1, #4]
      result = getPar(1, PARAMETER_TIMEOUT, parsedCMD->par, comInterface);
  402e46:	4613      	mov	r3, r2
  402e48:	f101 0208 	add.w	r2, r1, #8
  402e4c:	2164      	movs	r1, #100	; 0x64
  402e4e:	2001      	movs	r0, #1
  402e50:	4c1c      	ldr	r4, [pc, #112]	; (402ec4 <parseCommand+0x108>)
  402e52:	47a0      	blx	r4
      break;
  402e54:	bd10      	pop	{r4, pc}
      parsedCMD->cmd =  CMD_SET_AVERAGE_COUNT;
  402e56:	2341      	movs	r3, #65	; 0x41
  402e58:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr =  SetAverageCount;
  402e5a:	4b1e      	ldr	r3, [pc, #120]	; (402ed4 <parseCommand+0x118>)
  402e5c:	604b      	str	r3, [r1, #4]
      result = getPar(1, PARAMETER_TIMEOUT, parsedCMD->par, comInterface);
  402e5e:	4613      	mov	r3, r2
  402e60:	f101 0208 	add.w	r2, r1, #8
  402e64:	2164      	movs	r1, #100	; 0x64
  402e66:	2001      	movs	r0, #1
  402e68:	4c16      	ldr	r4, [pc, #88]	; (402ec4 <parseCommand+0x108>)
  402e6a:	47a0      	blx	r4
      break;
  402e6c:	bd10      	pop	{r4, pc}
      parsedCMD->cmd =  CMD_SET_MEASURMENT_COUNT;
  402e6e:	2346      	movs	r3, #70	; 0x46
  402e70:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr =  SetMeasurmentCount;
  402e72:	4b19      	ldr	r3, [pc, #100]	; (402ed8 <parseCommand+0x11c>)
  402e74:	604b      	str	r3, [r1, #4]
      result = getPar(1, PARAMETER_TIMEOUT, parsedCMD->par, comInterface);
  402e76:	4613      	mov	r3, r2
  402e78:	f101 0208 	add.w	r2, r1, #8
  402e7c:	2164      	movs	r1, #100	; 0x64
  402e7e:	2001      	movs	r0, #1
  402e80:	4c10      	ldr	r4, [pc, #64]	; (402ec4 <parseCommand+0x108>)
  402e82:	47a0      	blx	r4
      break;
  402e84:	bd10      	pop	{r4, pc}
      parsedCMD->cmd =  CMD_SET_SEQUENCER;
  402e86:	2345      	movs	r3, #69	; 0x45
  402e88:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr = SetSequencer;
  402e8a:	4b14      	ldr	r3, [pc, #80]	; (402edc <parseCommand+0x120>)
  402e8c:	604b      	str	r3, [r1, #4]
      result = getPar(4, PARAMETER_TIMEOUT, parsedCMD->par, comInterface);
  402e8e:	4613      	mov	r3, r2
  402e90:	f101 0208 	add.w	r2, r1, #8
  402e94:	2164      	movs	r1, #100	; 0x64
  402e96:	2004      	movs	r0, #4
  402e98:	4c0a      	ldr	r4, [pc, #40]	; (402ec4 <parseCommand+0x108>)
  402e9a:	47a0      	blx	r4
      break;
  402e9c:	bd10      	pop	{r4, pc}
      parsedCMD->cmd =  CMD_SET_DAC_VALUE;
  402e9e:	2344      	movs	r3, #68	; 0x44
  402ea0:	700b      	strb	r3, [r1, #0]
      parsedCMD->funcPtr = SetDACvalue;
  402ea2:	4b0f      	ldr	r3, [pc, #60]	; (402ee0 <parseCommand+0x124>)
  402ea4:	604b      	str	r3, [r1, #4]
      result = getPar(2, PARAMETER_TIMEOUT, parsedCMD->par, comInterface);
  402ea6:	4613      	mov	r3, r2
  402ea8:	f101 0208 	add.w	r2, r1, #8
  402eac:	2164      	movs	r1, #100	; 0x64
  402eae:	2002      	movs	r0, #2
  402eb0:	4c04      	ldr	r4, [pc, #16]	; (402ec4 <parseCommand+0x108>)
  402eb2:	47a0      	blx	r4
      break;
  402eb4:	bd10      	pop	{r4, pc}
      parsedCMD->cmd = 0;
  402eb6:	2000      	movs	r0, #0
  402eb8:	7008      	strb	r0, [r1, #0]
      parsedCMD->funcPtr = NULL;
  402eba:	6048      	str	r0, [r1, #4]
} /*** end of parseCommand ***/
  402ebc:	bd10      	pop	{r4, pc}
  402ebe:	bf00      	nop
  402ec0:	00402a95 	.word	0x00402a95
  402ec4:	00402ccd 	.word	0x00402ccd
  402ec8:	00402ad5 	.word	0x00402ad5
  402ecc:	00402b0d 	.word	0x00402b0d
  402ed0:	00402b3d 	.word	0x00402b3d
  402ed4:	00402b7d 	.word	0x00402b7d
  402ed8:	00402bb9 	.word	0x00402bb9
  402edc:	00402bf5 	.word	0x00402bf5
  402ee0:	00402c6d 	.word	0x00402c6d

00402ee4 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
  402ee4:	b510      	push	{r4, lr}
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  402ee6:	213e      	movs	r1, #62	; 0x3e
  402ee8:	2000      	movs	r0, #0
  402eea:	4b0a      	ldr	r3, [pc, #40]	; (402f14 <sysclk_enable_usb+0x30>)
  402eec:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  402eee:	4c0a      	ldr	r4, [pc, #40]	; (402f18 <sysclk_enable_usb+0x34>)
  402ef0:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  402ef2:	2800      	cmp	r0, #0
  402ef4:	d0fc      	beq.n	402ef0 <sysclk_enable_usb+0xc>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		pmc_disable_pllbck();
  402ef6:	4b09      	ldr	r3, [pc, #36]	; (402f1c <sysclk_enable_usb+0x38>)
  402ef8:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  402efa:	4a09      	ldr	r2, [pc, #36]	; (402f20 <sysclk_enable_usb+0x3c>)
  402efc:	4b09      	ldr	r3, [pc, #36]	; (402f24 <sysclk_enable_usb+0x40>)
  402efe:	62da      	str	r2, [r3, #44]	; 0x2c
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_pllbck();
  402f00:	4c09      	ldr	r4, [pc, #36]	; (402f28 <sysclk_enable_usb+0x44>)
  402f02:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  402f04:	2800      	cmp	r0, #0
  402f06:	d0fc      	beq.n	402f02 <sysclk_enable_usb+0x1e>

		pll_enable_source(CONFIG_PLL1_SOURCE);
		pll_config_defaults(&pllcfg, 1);
		pll_enable(&pllcfg, 1);
		pll_wait_for_lock(1);
		pmc_switch_udpck_to_pllbck(CONFIG_USBCLK_DIV - 1);
  402f08:	2001      	movs	r0, #1
  402f0a:	4b08      	ldr	r3, [pc, #32]	; (402f2c <sysclk_enable_usb+0x48>)
  402f0c:	4798      	blx	r3
		pmc_enable_udpck();
  402f0e:	4b08      	ldr	r3, [pc, #32]	; (402f30 <sysclk_enable_usb+0x4c>)
  402f10:	4798      	blx	r3
  402f12:	bd10      	pop	{r4, pc}
  402f14:	00403079 	.word	0x00403079
  402f18:	004030cd 	.word	0x004030cd
  402f1c:	004030fd 	.word	0x004030fd
  402f20:	00113f03 	.word	0x00113f03
  402f24:	400e0400 	.word	0x400e0400
  402f28:	00403109 	.word	0x00403109
  402f2c:	004031c1 	.word	0x004031c1
  402f30:	004031d5 	.word	0x004031d5

00402f34 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  402f34:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  402f36:	480e      	ldr	r0, [pc, #56]	; (402f70 <sysclk_init+0x3c>)
  402f38:	4b0e      	ldr	r3, [pc, #56]	; (402f74 <sysclk_init+0x40>)
  402f3a:	4798      	blx	r3
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  402f3c:	213e      	movs	r1, #62	; 0x3e
  402f3e:	2000      	movs	r0, #0
  402f40:	4b0d      	ldr	r3, [pc, #52]	; (402f78 <sysclk_init+0x44>)
  402f42:	4798      	blx	r3
		return pmc_osc_is_ready_mainck();
  402f44:	4c0d      	ldr	r4, [pc, #52]	; (402f7c <sysclk_init+0x48>)
  402f46:	47a0      	blx	r4
  402f48:	2800      	cmp	r0, #0
  402f4a:	d0fc      	beq.n	402f46 <sysclk_init+0x12>
		pmc_disable_pllack(); // Always stop PLL first!
  402f4c:	4b0c      	ldr	r3, [pc, #48]	; (402f80 <sysclk_init+0x4c>)
  402f4e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  402f50:	4a0c      	ldr	r2, [pc, #48]	; (402f84 <sysclk_init+0x50>)
  402f52:	4b0d      	ldr	r3, [pc, #52]	; (402f88 <sysclk_init+0x54>)
  402f54:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
  402f56:	4c0d      	ldr	r4, [pc, #52]	; (402f8c <sysclk_init+0x58>)
  402f58:	47a0      	blx	r4
  402f5a:	2800      	cmp	r0, #0
  402f5c:	d0fc      	beq.n	402f58 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  402f5e:	2010      	movs	r0, #16
  402f60:	4b0b      	ldr	r3, [pc, #44]	; (402f90 <sysclk_init+0x5c>)
  402f62:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  402f64:	4b0b      	ldr	r3, [pc, #44]	; (402f94 <sysclk_init+0x60>)
  402f66:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  402f68:	480b      	ldr	r0, [pc, #44]	; (402f98 <sysclk_init+0x64>)
  402f6a:	4b02      	ldr	r3, [pc, #8]	; (402f74 <sysclk_init+0x40>)
  402f6c:	4798      	blx	r3
  402f6e:	bd10      	pop	{r4, pc}
  402f70:	03d09000 	.word	0x03d09000
  402f74:	200000a1 	.word	0x200000a1
  402f78:	00403079 	.word	0x00403079
  402f7c:	004030cd 	.word	0x004030cd
  402f80:	004030dd 	.word	0x004030dd
  402f84:	20173f03 	.word	0x20173f03
  402f88:	400e0400 	.word	0x400e0400
  402f8c:	004030ed 	.word	0x004030ed
  402f90:	00403015 	.word	0x00403015
  402f94:	004032d9 	.word	0x004032d9
  402f98:	02dc6c00 	.word	0x02dc6c00

00402f9c <pdc_rx_init>:
  402f9c:	460b      	mov	r3, r1
  402f9e:	b119      	cbz	r1, 402fa8 <pdc_rx_init+0xc>
  402fa0:	6809      	ldr	r1, [r1, #0]
  402fa2:	6001      	str	r1, [r0, #0]
  402fa4:	685b      	ldr	r3, [r3, #4]
  402fa6:	6043      	str	r3, [r0, #4]
  402fa8:	b11a      	cbz	r2, 402fb2 <pdc_rx_init+0x16>
  402faa:	6813      	ldr	r3, [r2, #0]
  402fac:	6103      	str	r3, [r0, #16]
  402fae:	6853      	ldr	r3, [r2, #4]
  402fb0:	6143      	str	r3, [r0, #20]
  402fb2:	4770      	bx	lr

00402fb4 <pdc_enable_transfer>:
  402fb4:	f021 01fe 	bic.w	r1, r1, #254	; 0xfe
  402fb8:	05c9      	lsls	r1, r1, #23
  402fba:	0dc9      	lsrs	r1, r1, #23
  402fbc:	6201      	str	r1, [r0, #32]
  402fbe:	4770      	bx	lr

00402fc0 <pdc_disable_transfer>:
  402fc0:	f421 71fe 	bic.w	r1, r1, #508	; 0x1fc
  402fc4:	f021 0101 	bic.w	r1, r1, #1
  402fc8:	0589      	lsls	r1, r1, #22
  402fca:	0d89      	lsrs	r1, r1, #22
  402fcc:	6201      	str	r1, [r0, #32]
  402fce:	4770      	bx	lr

00402fd0 <pio_set>:
  402fd0:	6301      	str	r1, [r0, #48]	; 0x30
  402fd2:	4770      	bx	lr

00402fd4 <pio_clear>:
  402fd4:	6341      	str	r1, [r0, #52]	; 0x34
  402fd6:	4770      	bx	lr

00402fd8 <pio_set_output>:
  402fd8:	b410      	push	{r4}
  402fda:	9c01      	ldr	r4, [sp, #4]
  402fdc:	6441      	str	r1, [r0, #68]	; 0x44
  402fde:	b944      	cbnz	r4, 402ff2 <pio_set_output+0x1a>
  402fe0:	6601      	str	r1, [r0, #96]	; 0x60
  402fe2:	b143      	cbz	r3, 402ff6 <pio_set_output+0x1e>
  402fe4:	6501      	str	r1, [r0, #80]	; 0x50
  402fe6:	b942      	cbnz	r2, 402ffa <pio_set_output+0x22>
  402fe8:	6341      	str	r1, [r0, #52]	; 0x34
  402fea:	6101      	str	r1, [r0, #16]
  402fec:	6001      	str	r1, [r0, #0]
  402fee:	bc10      	pop	{r4}
  402ff0:	4770      	bx	lr
  402ff2:	6641      	str	r1, [r0, #100]	; 0x64
  402ff4:	e7f5      	b.n	402fe2 <pio_set_output+0xa>
  402ff6:	6541      	str	r1, [r0, #84]	; 0x54
  402ff8:	e7f5      	b.n	402fe6 <pio_set_output+0xe>
  402ffa:	6301      	str	r1, [r0, #48]	; 0x30
  402ffc:	e7f5      	b.n	402fea <pio_set_output+0x12>

00402ffe <pio_get_interrupt_status>:
  402ffe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
  403000:	4770      	bx	lr

00403002 <pio_get_interrupt_mask>:
  403002:	6c80      	ldr	r0, [r0, #72]	; 0x48
  403004:	4770      	bx	lr

00403006 <pio_toggle_pin_group>:
  403006:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403008:	420b      	tst	r3, r1
  40300a:	bf14      	ite	ne
  40300c:	6341      	strne	r1, [r0, #52]	; 0x34
  40300e:	6301      	streq	r1, [r0, #48]	; 0x30
  403010:	4770      	bx	lr
	...

00403014 <pmc_switch_mck_to_pllack>:
  403014:	4a17      	ldr	r2, [pc, #92]	; (403074 <pmc_switch_mck_to_pllack+0x60>)
  403016:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403018:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40301c:	4318      	orrs	r0, r3
  40301e:	6310      	str	r0, [r2, #48]	; 0x30
  403020:	6e93      	ldr	r3, [r2, #104]	; 0x68
  403022:	f013 0f08 	tst.w	r3, #8
  403026:	d10a      	bne.n	40303e <pmc_switch_mck_to_pllack+0x2a>
  403028:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40302c:	4911      	ldr	r1, [pc, #68]	; (403074 <pmc_switch_mck_to_pllack+0x60>)
  40302e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  403030:	f012 0f08 	tst.w	r2, #8
  403034:	d103      	bne.n	40303e <pmc_switch_mck_to_pllack+0x2a>
  403036:	3b01      	subs	r3, #1
  403038:	d1f9      	bne.n	40302e <pmc_switch_mck_to_pllack+0x1a>
  40303a:	2001      	movs	r0, #1
  40303c:	4770      	bx	lr
  40303e:	4a0d      	ldr	r2, [pc, #52]	; (403074 <pmc_switch_mck_to_pllack+0x60>)
  403040:	6b13      	ldr	r3, [r2, #48]	; 0x30
  403042:	f023 0303 	bic.w	r3, r3, #3
  403046:	f043 0302 	orr.w	r3, r3, #2
  40304a:	6313      	str	r3, [r2, #48]	; 0x30
  40304c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40304e:	f013 0f08 	tst.w	r3, #8
  403052:	d10a      	bne.n	40306a <pmc_switch_mck_to_pllack+0x56>
  403054:	f44f 6300 	mov.w	r3, #2048	; 0x800
  403058:	4906      	ldr	r1, [pc, #24]	; (403074 <pmc_switch_mck_to_pllack+0x60>)
  40305a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40305c:	f012 0f08 	tst.w	r2, #8
  403060:	d105      	bne.n	40306e <pmc_switch_mck_to_pllack+0x5a>
  403062:	3b01      	subs	r3, #1
  403064:	d1f9      	bne.n	40305a <pmc_switch_mck_to_pllack+0x46>
  403066:	2001      	movs	r0, #1
  403068:	4770      	bx	lr
  40306a:	2000      	movs	r0, #0
  40306c:	4770      	bx	lr
  40306e:	2000      	movs	r0, #0
  403070:	4770      	bx	lr
  403072:	bf00      	nop
  403074:	400e0400 	.word	0x400e0400

00403078 <pmc_switch_mainck_to_xtal>:
  403078:	b9c8      	cbnz	r0, 4030ae <pmc_switch_mainck_to_xtal+0x36>
  40307a:	4a11      	ldr	r2, [pc, #68]	; (4030c0 <pmc_switch_mainck_to_xtal+0x48>)
  40307c:	6a13      	ldr	r3, [r2, #32]
  40307e:	0209      	lsls	r1, r1, #8
  403080:	b289      	uxth	r1, r1
  403082:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  403086:	f023 0303 	bic.w	r3, r3, #3
  40308a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40308e:	f043 0301 	orr.w	r3, r3, #1
  403092:	430b      	orrs	r3, r1
  403094:	6213      	str	r3, [r2, #32]
  403096:	6e93      	ldr	r3, [r2, #104]	; 0x68
  403098:	f013 0f01 	tst.w	r3, #1
  40309c:	d0fb      	beq.n	403096 <pmc_switch_mainck_to_xtal+0x1e>
  40309e:	4a08      	ldr	r2, [pc, #32]	; (4030c0 <pmc_switch_mainck_to_xtal+0x48>)
  4030a0:	6a13      	ldr	r3, [r2, #32]
  4030a2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4030a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4030aa:	6213      	str	r3, [r2, #32]
  4030ac:	4770      	bx	lr
  4030ae:	4904      	ldr	r1, [pc, #16]	; (4030c0 <pmc_switch_mainck_to_xtal+0x48>)
  4030b0:	6a0b      	ldr	r3, [r1, #32]
  4030b2:	4a04      	ldr	r2, [pc, #16]	; (4030c4 <pmc_switch_mainck_to_xtal+0x4c>)
  4030b4:	401a      	ands	r2, r3
  4030b6:	4b04      	ldr	r3, [pc, #16]	; (4030c8 <pmc_switch_mainck_to_xtal+0x50>)
  4030b8:	4313      	orrs	r3, r2
  4030ba:	620b      	str	r3, [r1, #32]
  4030bc:	4770      	bx	lr
  4030be:	bf00      	nop
  4030c0:	400e0400 	.word	0x400e0400
  4030c4:	fec8fffc 	.word	0xfec8fffc
  4030c8:	01370002 	.word	0x01370002

004030cc <pmc_osc_is_ready_mainck>:
  4030cc:	4b02      	ldr	r3, [pc, #8]	; (4030d8 <pmc_osc_is_ready_mainck+0xc>)
  4030ce:	6e98      	ldr	r0, [r3, #104]	; 0x68
  4030d0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4030d4:	4770      	bx	lr
  4030d6:	bf00      	nop
  4030d8:	400e0400 	.word	0x400e0400

004030dc <pmc_disable_pllack>:
  4030dc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4030e0:	4b01      	ldr	r3, [pc, #4]	; (4030e8 <pmc_disable_pllack+0xc>)
  4030e2:	629a      	str	r2, [r3, #40]	; 0x28
  4030e4:	4770      	bx	lr
  4030e6:	bf00      	nop
  4030e8:	400e0400 	.word	0x400e0400

004030ec <pmc_is_locked_pllack>:
  4030ec:	4b02      	ldr	r3, [pc, #8]	; (4030f8 <pmc_is_locked_pllack+0xc>)
  4030ee:	6e98      	ldr	r0, [r3, #104]	; 0x68
  4030f0:	f000 0002 	and.w	r0, r0, #2
  4030f4:	4770      	bx	lr
  4030f6:	bf00      	nop
  4030f8:	400e0400 	.word	0x400e0400

004030fc <pmc_disable_pllbck>:
  4030fc:	2200      	movs	r2, #0
  4030fe:	4b01      	ldr	r3, [pc, #4]	; (403104 <pmc_disable_pllbck+0x8>)
  403100:	62da      	str	r2, [r3, #44]	; 0x2c
  403102:	4770      	bx	lr
  403104:	400e0400 	.word	0x400e0400

00403108 <pmc_is_locked_pllbck>:
  403108:	4b02      	ldr	r3, [pc, #8]	; (403114 <pmc_is_locked_pllbck+0xc>)
  40310a:	6e98      	ldr	r0, [r3, #104]	; 0x68
  40310c:	f000 0004 	and.w	r0, r0, #4
  403110:	4770      	bx	lr
  403112:	bf00      	nop
  403114:	400e0400 	.word	0x400e0400

00403118 <pmc_enable_periph_clk>:
  403118:	2822      	cmp	r0, #34	; 0x22
  40311a:	d81e      	bhi.n	40315a <pmc_enable_periph_clk+0x42>
  40311c:	281f      	cmp	r0, #31
  40311e:	d80c      	bhi.n	40313a <pmc_enable_periph_clk+0x22>
  403120:	4b11      	ldr	r3, [pc, #68]	; (403168 <pmc_enable_periph_clk+0x50>)
  403122:	699a      	ldr	r2, [r3, #24]
  403124:	2301      	movs	r3, #1
  403126:	4083      	lsls	r3, r0
  403128:	4393      	bics	r3, r2
  40312a:	d018      	beq.n	40315e <pmc_enable_periph_clk+0x46>
  40312c:	2301      	movs	r3, #1
  40312e:	fa03 f000 	lsl.w	r0, r3, r0
  403132:	4b0d      	ldr	r3, [pc, #52]	; (403168 <pmc_enable_periph_clk+0x50>)
  403134:	6118      	str	r0, [r3, #16]
  403136:	2000      	movs	r0, #0
  403138:	4770      	bx	lr
  40313a:	3820      	subs	r0, #32
  40313c:	4b0a      	ldr	r3, [pc, #40]	; (403168 <pmc_enable_periph_clk+0x50>)
  40313e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  403142:	2301      	movs	r3, #1
  403144:	4083      	lsls	r3, r0
  403146:	4393      	bics	r3, r2
  403148:	d00b      	beq.n	403162 <pmc_enable_periph_clk+0x4a>
  40314a:	2301      	movs	r3, #1
  40314c:	fa03 f000 	lsl.w	r0, r3, r0
  403150:	4b05      	ldr	r3, [pc, #20]	; (403168 <pmc_enable_periph_clk+0x50>)
  403152:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
  403156:	2000      	movs	r0, #0
  403158:	4770      	bx	lr
  40315a:	2001      	movs	r0, #1
  40315c:	4770      	bx	lr
  40315e:	2000      	movs	r0, #0
  403160:	4770      	bx	lr
  403162:	2000      	movs	r0, #0
  403164:	4770      	bx	lr
  403166:	bf00      	nop
  403168:	400e0400 	.word	0x400e0400

0040316c <pmc_disable_periph_clk>:
  40316c:	2822      	cmp	r0, #34	; 0x22
  40316e:	d822      	bhi.n	4031b6 <pmc_disable_periph_clk+0x4a>
  403170:	281f      	cmp	r0, #31
  403172:	d80e      	bhi.n	403192 <pmc_disable_periph_clk+0x26>
  403174:	4b11      	ldr	r3, [pc, #68]	; (4031bc <pmc_disable_periph_clk+0x50>)
  403176:	699a      	ldr	r2, [r3, #24]
  403178:	2301      	movs	r3, #1
  40317a:	4083      	lsls	r3, r0
  40317c:	4393      	bics	r3, r2
  40317e:	d001      	beq.n	403184 <pmc_disable_periph_clk+0x18>
  403180:	2000      	movs	r0, #0
  403182:	4770      	bx	lr
  403184:	2301      	movs	r3, #1
  403186:	fa03 f000 	lsl.w	r0, r3, r0
  40318a:	4b0c      	ldr	r3, [pc, #48]	; (4031bc <pmc_disable_periph_clk+0x50>)
  40318c:	6158      	str	r0, [r3, #20]
  40318e:	2000      	movs	r0, #0
  403190:	4770      	bx	lr
  403192:	3820      	subs	r0, #32
  403194:	4b09      	ldr	r3, [pc, #36]	; (4031bc <pmc_disable_periph_clk+0x50>)
  403196:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40319a:	2301      	movs	r3, #1
  40319c:	4083      	lsls	r3, r0
  40319e:	4393      	bics	r3, r2
  4031a0:	d001      	beq.n	4031a6 <pmc_disable_periph_clk+0x3a>
  4031a2:	2000      	movs	r0, #0
  4031a4:	4770      	bx	lr
  4031a6:	2301      	movs	r3, #1
  4031a8:	fa03 f000 	lsl.w	r0, r3, r0
  4031ac:	4b03      	ldr	r3, [pc, #12]	; (4031bc <pmc_disable_periph_clk+0x50>)
  4031ae:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
  4031b2:	2000      	movs	r0, #0
  4031b4:	4770      	bx	lr
  4031b6:	2001      	movs	r0, #1
  4031b8:	4770      	bx	lr
  4031ba:	bf00      	nop
  4031bc:	400e0400 	.word	0x400e0400

004031c0 <pmc_switch_udpck_to_pllbck>:
  4031c0:	0200      	lsls	r0, r0, #8
  4031c2:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
  4031c6:	f040 0001 	orr.w	r0, r0, #1
  4031ca:	4b01      	ldr	r3, [pc, #4]	; (4031d0 <pmc_switch_udpck_to_pllbck+0x10>)
  4031cc:	6398      	str	r0, [r3, #56]	; 0x38
  4031ce:	4770      	bx	lr
  4031d0:	400e0400 	.word	0x400e0400

004031d4 <pmc_enable_udpck>:
  4031d4:	2280      	movs	r2, #128	; 0x80
  4031d6:	4b01      	ldr	r3, [pc, #4]	; (4031dc <pmc_enable_udpck+0x8>)
  4031d8:	601a      	str	r2, [r3, #0]
  4031da:	4770      	bx	lr
  4031dc:	400e0400 	.word	0x400e0400

004031e0 <pmc_set_fast_startup_input>:
  4031e0:	4b03      	ldr	r3, [pc, #12]	; (4031f0 <pmc_set_fast_startup_input+0x10>)
  4031e2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4031e4:	f3c0 0012 	ubfx	r0, r0, #0, #19
  4031e8:	4310      	orrs	r0, r2
  4031ea:	6718      	str	r0, [r3, #112]	; 0x70
  4031ec:	4770      	bx	lr
  4031ee:	bf00      	nop
  4031f0:	400e0400 	.word	0x400e0400

004031f4 <tc_init>:
  4031f4:	b410      	push	{r4}
  4031f6:	0189      	lsls	r1, r1, #6
  4031f8:	1843      	adds	r3, r0, r1
  4031fa:	2402      	movs	r4, #2
  4031fc:	5044      	str	r4, [r0, r1]
  4031fe:	f04f 31ff 	mov.w	r1, #4294967295
  403202:	6299      	str	r1, [r3, #40]	; 0x28
  403204:	6a19      	ldr	r1, [r3, #32]
  403206:	605a      	str	r2, [r3, #4]
  403208:	bc10      	pop	{r4}
  40320a:	4770      	bx	lr

0040320c <tc_stop>:
  40320c:	0189      	lsls	r1, r1, #6
  40320e:	2302      	movs	r3, #2
  403210:	5043      	str	r3, [r0, r1]
  403212:	4770      	bx	lr

00403214 <tc_write_rc>:
  403214:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  403218:	61ca      	str	r2, [r1, #28]
  40321a:	4770      	bx	lr

0040321c <tc_enable_interrupt>:
  40321c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  403220:	624a      	str	r2, [r1, #36]	; 0x24
  403222:	4770      	bx	lr

00403224 <tc_get_status>:
  403224:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  403228:	6a08      	ldr	r0, [r1, #32]
  40322a:	4770      	bx	lr

0040322c <pmc_is_wakeup_clocks_restored>:
  40322c:	4b02      	ldr	r3, [pc, #8]	; (403238 <pmc_is_wakeup_clocks_restored+0xc>)
  40322e:	7818      	ldrb	r0, [r3, #0]
  403230:	f080 0001 	eor.w	r0, r0, #1
  403234:	4770      	bx	lr
  403236:	bf00      	nop
  403238:	20000e0c 	.word	0x20000e0c

0040323c <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  40323c:	4770      	bx	lr

0040323e <Dummy_Handler>:
  40323e:	e7fe      	b.n	40323e <Dummy_Handler>

00403240 <Reset_Handler>:
  403240:	b508      	push	{r3, lr}
  403242:	4b1c      	ldr	r3, [pc, #112]	; (4032b4 <Reset_Handler+0x74>)
  403244:	4a1c      	ldr	r2, [pc, #112]	; (4032b8 <Reset_Handler+0x78>)
  403246:	429a      	cmp	r2, r3
  403248:	d010      	beq.n	40326c <Reset_Handler+0x2c>
  40324a:	4b1c      	ldr	r3, [pc, #112]	; (4032bc <Reset_Handler+0x7c>)
  40324c:	4a19      	ldr	r2, [pc, #100]	; (4032b4 <Reset_Handler+0x74>)
  40324e:	429a      	cmp	r2, r3
  403250:	d20c      	bcs.n	40326c <Reset_Handler+0x2c>
  403252:	3b01      	subs	r3, #1
  403254:	1a9b      	subs	r3, r3, r2
  403256:	f023 0303 	bic.w	r3, r3, #3
  40325a:	3304      	adds	r3, #4
  40325c:	4413      	add	r3, r2
  40325e:	4916      	ldr	r1, [pc, #88]	; (4032b8 <Reset_Handler+0x78>)
  403260:	f851 0b04 	ldr.w	r0, [r1], #4
  403264:	f842 0b04 	str.w	r0, [r2], #4
  403268:	429a      	cmp	r2, r3
  40326a:	d1f9      	bne.n	403260 <Reset_Handler+0x20>
  40326c:	4b14      	ldr	r3, [pc, #80]	; (4032c0 <Reset_Handler+0x80>)
  40326e:	4a15      	ldr	r2, [pc, #84]	; (4032c4 <Reset_Handler+0x84>)
  403270:	429a      	cmp	r2, r3
  403272:	d20a      	bcs.n	40328a <Reset_Handler+0x4a>
  403274:	3b01      	subs	r3, #1
  403276:	1a9b      	subs	r3, r3, r2
  403278:	f023 0303 	bic.w	r3, r3, #3
  40327c:	3304      	adds	r3, #4
  40327e:	4413      	add	r3, r2
  403280:	2100      	movs	r1, #0
  403282:	f842 1b04 	str.w	r1, [r2], #4
  403286:	4293      	cmp	r3, r2
  403288:	d1fb      	bne.n	403282 <Reset_Handler+0x42>
  40328a:	4b0f      	ldr	r3, [pc, #60]	; (4032c8 <Reset_Handler+0x88>)
  40328c:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
  403290:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
  403294:	490d      	ldr	r1, [pc, #52]	; (4032cc <Reset_Handler+0x8c>)
  403296:	608a      	str	r2, [r1, #8]
  403298:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  40329c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
  4032a0:	d203      	bcs.n	4032aa <Reset_Handler+0x6a>
  4032a2:	688b      	ldr	r3, [r1, #8]
  4032a4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  4032a8:	608b      	str	r3, [r1, #8]
  4032aa:	4b09      	ldr	r3, [pc, #36]	; (4032d0 <Reset_Handler+0x90>)
  4032ac:	4798      	blx	r3
  4032ae:	4b09      	ldr	r3, [pc, #36]	; (4032d4 <Reset_Handler+0x94>)
  4032b0:	4798      	blx	r3
  4032b2:	e7fe      	b.n	4032b2 <Reset_Handler+0x72>
  4032b4:	20000000 	.word	0x20000000
  4032b8:	00408304 	.word	0x00408304
  4032bc:	20000bb8 	.word	0x20000bb8
  4032c0:	20000ed4 	.word	0x20000ed4
  4032c4:	20000bb8 	.word	0x20000bb8
  4032c8:	00400000 	.word	0x00400000
  4032cc:	e000ed00 	.word	0xe000ed00
  4032d0:	00403505 	.word	0x00403505
  4032d4:	00403421 	.word	0x00403421

004032d8 <SystemCoreClockUpdate>:
  4032d8:	4b3c      	ldr	r3, [pc, #240]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  4032da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4032dc:	f003 0303 	and.w	r3, r3, #3
  4032e0:	2b03      	cmp	r3, #3
  4032e2:	d80e      	bhi.n	403302 <SystemCoreClockUpdate+0x2a>
  4032e4:	e8df f003 	tbb	[pc, r3]
  4032e8:	38381c02 	.word	0x38381c02
  4032ec:	4b38      	ldr	r3, [pc, #224]	; (4033d0 <SystemCoreClockUpdate+0xf8>)
  4032ee:	695b      	ldr	r3, [r3, #20]
  4032f0:	f013 0f80 	tst.w	r3, #128	; 0x80
  4032f4:	bf14      	ite	ne
  4032f6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  4032fa:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4032fe:	4b35      	ldr	r3, [pc, #212]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403300:	601a      	str	r2, [r3, #0]
  403302:	4b32      	ldr	r3, [pc, #200]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  403304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  403306:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40330a:	2b70      	cmp	r3, #112	; 0x70
  40330c:	d055      	beq.n	4033ba <SystemCoreClockUpdate+0xe2>
  40330e:	4b2f      	ldr	r3, [pc, #188]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  403310:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  403312:	4930      	ldr	r1, [pc, #192]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403314:	f3c2 1202 	ubfx	r2, r2, #4, #3
  403318:	680b      	ldr	r3, [r1, #0]
  40331a:	40d3      	lsrs	r3, r2
  40331c:	600b      	str	r3, [r1, #0]
  40331e:	4770      	bx	lr
  403320:	4b2a      	ldr	r3, [pc, #168]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  403322:	6a1b      	ldr	r3, [r3, #32]
  403324:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  403328:	d003      	beq.n	403332 <SystemCoreClockUpdate+0x5a>
  40332a:	4a2b      	ldr	r2, [pc, #172]	; (4033d8 <SystemCoreClockUpdate+0x100>)
  40332c:	4b29      	ldr	r3, [pc, #164]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  40332e:	601a      	str	r2, [r3, #0]
  403330:	e7e7      	b.n	403302 <SystemCoreClockUpdate+0x2a>
  403332:	4a2a      	ldr	r2, [pc, #168]	; (4033dc <SystemCoreClockUpdate+0x104>)
  403334:	4b27      	ldr	r3, [pc, #156]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403336:	601a      	str	r2, [r3, #0]
  403338:	4b24      	ldr	r3, [pc, #144]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  40333a:	6a1b      	ldr	r3, [r3, #32]
  40333c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  403340:	2b10      	cmp	r3, #16
  403342:	d005      	beq.n	403350 <SystemCoreClockUpdate+0x78>
  403344:	2b20      	cmp	r3, #32
  403346:	d1dc      	bne.n	403302 <SystemCoreClockUpdate+0x2a>
  403348:	4a23      	ldr	r2, [pc, #140]	; (4033d8 <SystemCoreClockUpdate+0x100>)
  40334a:	4b22      	ldr	r3, [pc, #136]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  40334c:	601a      	str	r2, [r3, #0]
  40334e:	e7d8      	b.n	403302 <SystemCoreClockUpdate+0x2a>
  403350:	4a23      	ldr	r2, [pc, #140]	; (4033e0 <SystemCoreClockUpdate+0x108>)
  403352:	4b20      	ldr	r3, [pc, #128]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403354:	601a      	str	r2, [r3, #0]
  403356:	e7d4      	b.n	403302 <SystemCoreClockUpdate+0x2a>
  403358:	4b1c      	ldr	r3, [pc, #112]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  40335a:	6a1b      	ldr	r3, [r3, #32]
  40335c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  403360:	d018      	beq.n	403394 <SystemCoreClockUpdate+0xbc>
  403362:	4a1d      	ldr	r2, [pc, #116]	; (4033d8 <SystemCoreClockUpdate+0x100>)
  403364:	4b1b      	ldr	r3, [pc, #108]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403366:	601a      	str	r2, [r3, #0]
  403368:	4b18      	ldr	r3, [pc, #96]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  40336a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40336c:	f003 0303 	and.w	r3, r3, #3
  403370:	2b02      	cmp	r3, #2
  403372:	4a16      	ldr	r2, [pc, #88]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  403374:	bf07      	ittee	eq
  403376:	6a91      	ldreq	r1, [r2, #40]	; 0x28
  403378:	6a92      	ldreq	r2, [r2, #40]	; 0x28
  40337a:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
  40337c:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  40337e:	4815      	ldr	r0, [pc, #84]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403380:	f3c1 410a 	ubfx	r1, r1, #16, #11
  403384:	6803      	ldr	r3, [r0, #0]
  403386:	fb01 3303 	mla	r3, r1, r3, r3
  40338a:	b2d2      	uxtb	r2, r2
  40338c:	fbb3 f3f2 	udiv	r3, r3, r2
  403390:	6003      	str	r3, [r0, #0]
  403392:	e7b6      	b.n	403302 <SystemCoreClockUpdate+0x2a>
  403394:	4a11      	ldr	r2, [pc, #68]	; (4033dc <SystemCoreClockUpdate+0x104>)
  403396:	4b0f      	ldr	r3, [pc, #60]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  403398:	601a      	str	r2, [r3, #0]
  40339a:	4b0c      	ldr	r3, [pc, #48]	; (4033cc <SystemCoreClockUpdate+0xf4>)
  40339c:	6a1b      	ldr	r3, [r3, #32]
  40339e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4033a2:	2b10      	cmp	r3, #16
  4033a4:	d005      	beq.n	4033b2 <SystemCoreClockUpdate+0xda>
  4033a6:	2b20      	cmp	r3, #32
  4033a8:	d1de      	bne.n	403368 <SystemCoreClockUpdate+0x90>
  4033aa:	4a0b      	ldr	r2, [pc, #44]	; (4033d8 <SystemCoreClockUpdate+0x100>)
  4033ac:	4b09      	ldr	r3, [pc, #36]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  4033ae:	601a      	str	r2, [r3, #0]
  4033b0:	e7da      	b.n	403368 <SystemCoreClockUpdate+0x90>
  4033b2:	4a0b      	ldr	r2, [pc, #44]	; (4033e0 <SystemCoreClockUpdate+0x108>)
  4033b4:	4b07      	ldr	r3, [pc, #28]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  4033b6:	601a      	str	r2, [r3, #0]
  4033b8:	e7d6      	b.n	403368 <SystemCoreClockUpdate+0x90>
  4033ba:	4a06      	ldr	r2, [pc, #24]	; (4033d4 <SystemCoreClockUpdate+0xfc>)
  4033bc:	6813      	ldr	r3, [r2, #0]
  4033be:	4909      	ldr	r1, [pc, #36]	; (4033e4 <SystemCoreClockUpdate+0x10c>)
  4033c0:	fba1 1303 	umull	r1, r3, r1, r3
  4033c4:	085b      	lsrs	r3, r3, #1
  4033c6:	6013      	str	r3, [r2, #0]
  4033c8:	4770      	bx	lr
  4033ca:	bf00      	nop
  4033cc:	400e0400 	.word	0x400e0400
  4033d0:	400e1410 	.word	0x400e1410
  4033d4:	20000204 	.word	0x20000204
  4033d8:	00b71b00 	.word	0x00b71b00
  4033dc:	003d0900 	.word	0x003d0900
  4033e0:	007a1200 	.word	0x007a1200
  4033e4:	aaaaaaab 	.word	0xaaaaaaab

004033e8 <_sbrk>:
  4033e8:	4b0a      	ldr	r3, [pc, #40]	; (403414 <_sbrk+0x2c>)
  4033ea:	681b      	ldr	r3, [r3, #0]
  4033ec:	b153      	cbz	r3, 403404 <_sbrk+0x1c>
  4033ee:	4b09      	ldr	r3, [pc, #36]	; (403414 <_sbrk+0x2c>)
  4033f0:	681b      	ldr	r3, [r3, #0]
  4033f2:	181a      	adds	r2, r3, r0
  4033f4:	4908      	ldr	r1, [pc, #32]	; (403418 <_sbrk+0x30>)
  4033f6:	4291      	cmp	r1, r2
  4033f8:	db08      	blt.n	40340c <_sbrk+0x24>
  4033fa:	4610      	mov	r0, r2
  4033fc:	4a05      	ldr	r2, [pc, #20]	; (403414 <_sbrk+0x2c>)
  4033fe:	6010      	str	r0, [r2, #0]
  403400:	4618      	mov	r0, r3
  403402:	4770      	bx	lr
  403404:	4a05      	ldr	r2, [pc, #20]	; (40341c <_sbrk+0x34>)
  403406:	4b03      	ldr	r3, [pc, #12]	; (403414 <_sbrk+0x2c>)
  403408:	601a      	str	r2, [r3, #0]
  40340a:	e7f0      	b.n	4033ee <_sbrk+0x6>
  40340c:	f04f 30ff 	mov.w	r0, #4294967295
  403410:	4770      	bx	lr
  403412:	bf00      	nop
  403414:	20000e10 	.word	0x20000e10
  403418:	2000bffc 	.word	0x2000bffc
  40341c:	20002ed8 	.word	0x20002ed8

00403420 <main>:
#include "core.h"
#include "parser.h"


int main (void)
{
  403420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403424:	b08f      	sub	sp, #60	; 0x3c
	/* Insert system clock initialization code here (sysclk_init()). */
	wdt_disable(WDT);
  403426:	482c      	ldr	r0, [pc, #176]	; (4034d8 <main+0xb8>)
  403428:	4b2c      	ldr	r3, [pc, #176]	; (4034dc <main+0xbc>)
  40342a:	4798      	blx	r3
	sysclk_init(); // clock init, ASF
  40342c:	4b2c      	ldr	r3, [pc, #176]	; (4034e0 <main+0xc0>)
  40342e:	4798      	blx	r3
	board_init();  // ASF function, empty function??
  403430:	4b2c      	ldr	r3, [pc, #176]	; (4034e4 <main+0xc4>)
  403432:	4798      	blx	r3
	core_init(); //core.c init
  403434:	4b2c      	ldr	r3, [pc, #176]	; (4034e8 <main+0xc8>)
  403436:	4798      	blx	r3
  
  /* Initialize pointer to communicate interface */
  COM_t *USB = getComInterface();
  403438:	4b2c      	ldr	r3, [pc, #176]	; (4034ec <main+0xcc>)
  40343a:	4798      	blx	r3
  40343c:	4604      	mov	r4, r0
  /* Initialize communicate interface */
  USB->init(NULL);
  40343e:	6803      	ldr	r3, [r0, #0]
  403440:	2000      	movs	r0, #0
  403442:	4798      	blx	r3
  
  /* Structure with all the settings */
  daq_settings_t master_settings;
  
  /* Fill with some presets. */
  master_settings.acquisitionNbr = 4;
  403444:	2304      	movs	r3, #4
  403446:	f8ad 301e 	strh.w	r3, [sp, #30]
  master_settings.acqusitionTime = 10000;
  40344a:	f242 7310 	movw	r3, #10000	; 0x2710
  40344e:	f8ad 301c 	strh.w	r3, [sp, #28]
  master_settings.averaging = 6;
  403452:	2306      	movs	r3, #6
  403454:	f8ad 3020 	strh.w	r3, [sp, #32]
  master_settings.channels = (DAQ_CHANNEL_1);
  403458:	2301      	movs	r3, #1
  40345a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
  master_settings.com = USB;
  40345e:	940d      	str	r4, [sp, #52]	; 0x34
  while(1)
  {
    CMD_t incomingCMD;
    if(USB->available())
    {
      if (parseCommand(USB->read(), &incomingCMD, USB))
  403460:	4f23      	ldr	r7, [pc, #140]	; (4034f0 <main+0xd0>)
          USB->len = sprintf((char*)USB->buf, "ERROR setting command\n\r");
        }
      } 
      else
      {
        USB->len = sprintf((char*)USB->buf, "Command syntax ERROR\n\r");
  403462:	f8df 8090 	ldr.w	r8, [pc, #144]	; 4034f4 <main+0xd4>
          USB->len = sprintf((char*)USB->buf, "ERROR setting command\n\r");
  403466:	f8df 9090 	ldr.w	r9, [pc, #144]	; 4034f8 <main+0xd8>
  40346a:	e015      	b.n	403498 <main+0x78>
        USB->len = sprintf((char*)USB->buf, "Command syntax ERROR\n\r");
  40346c:	4645      	mov	r5, r8
  40346e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  403470:	6160      	str	r0, [r4, #20]
  403472:	61a1      	str	r1, [r4, #24]
  403474:	61e2      	str	r2, [r4, #28]
  403476:	6223      	str	r3, [r4, #32]
  403478:	6828      	ldr	r0, [r5, #0]
  40347a:	6260      	str	r0, [r4, #36]	; 0x24
  40347c:	88aa      	ldrh	r2, [r5, #4]
  40347e:	79ab      	ldrb	r3, [r5, #6]
  403480:	8522      	strh	r2, [r4, #40]	; 0x28
  403482:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
  403486:	2316      	movs	r3, #22
  403488:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
      }
      USB->printBuf(USB->buf, USB->len);
  40348c:	6923      	ldr	r3, [r4, #16]
  40348e:	f894 1078 	ldrb.w	r1, [r4, #120]	; 0x78
  403492:	f104 0014 	add.w	r0, r4, #20
  403496:	4798      	blx	r3
    if(USB->available())
  403498:	6863      	ldr	r3, [r4, #4]
  40349a:	4798      	blx	r3
  40349c:	2800      	cmp	r0, #0
  40349e:	d0fb      	beq.n	403498 <main+0x78>
      if (parseCommand(USB->read(), &incomingCMD, USB))
  4034a0:	68a3      	ldr	r3, [r4, #8]
  4034a2:	4798      	blx	r3
  4034a4:	4622      	mov	r2, r4
  4034a6:	a901      	add	r1, sp, #4
  4034a8:	47b8      	blx	r7
  4034aa:	2800      	cmp	r0, #0
  4034ac:	d0de      	beq.n	40346c <main+0x4c>
        if(!incomingCMD.funcPtr(incomingCMD.par, &master_settings, USB))
  4034ae:	4622      	mov	r2, r4
  4034b0:	a907      	add	r1, sp, #28
  4034b2:	a803      	add	r0, sp, #12
  4034b4:	9b02      	ldr	r3, [sp, #8]
  4034b6:	4798      	blx	r3
  4034b8:	2800      	cmp	r0, #0
  4034ba:	d1e7      	bne.n	40348c <main+0x6c>
          USB->len = sprintf((char*)USB->buf, "ERROR setting command\n\r");
  4034bc:	464d      	mov	r5, r9
  4034be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4034c0:	6160      	str	r0, [r4, #20]
  4034c2:	61a1      	str	r1, [r4, #24]
  4034c4:	61e2      	str	r2, [r4, #28]
  4034c6:	6223      	str	r3, [r4, #32]
  4034c8:	cd03      	ldmia	r5!, {r0, r1}
  4034ca:	6260      	str	r0, [r4, #36]	; 0x24
  4034cc:	62a1      	str	r1, [r4, #40]	; 0x28
  4034ce:	2317      	movs	r3, #23
  4034d0:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
  4034d4:	e7da      	b.n	40348c <main+0x6c>
  4034d6:	bf00      	nop
  4034d8:	400e1450 	.word	0x400e1450
  4034dc:	00402641 	.word	0x00402641
  4034e0:	00402f35 	.word	0x00402f35
  4034e4:	0040323d 	.word	0x0040323d
  4034e8:	004026ed 	.word	0x004026ed
  4034ec:	004026a9 	.word	0x004026a9
  4034f0:	00402dbd 	.word	0x00402dbd
  4034f4:	00408034 	.word	0x00408034
  4034f8:	0040801c 	.word	0x0040801c

004034fc <atoi>:
  4034fc:	220a      	movs	r2, #10
  4034fe:	2100      	movs	r1, #0
  403500:	f000 b9d4 	b.w	4038ac <strtol>

00403504 <__libc_init_array>:
  403504:	b570      	push	{r4, r5, r6, lr}
  403506:	4e0f      	ldr	r6, [pc, #60]	; (403544 <__libc_init_array+0x40>)
  403508:	4d0f      	ldr	r5, [pc, #60]	; (403548 <__libc_init_array+0x44>)
  40350a:	1b76      	subs	r6, r6, r5
  40350c:	10b6      	asrs	r6, r6, #2
  40350e:	bf18      	it	ne
  403510:	2400      	movne	r4, #0
  403512:	d005      	beq.n	403520 <__libc_init_array+0x1c>
  403514:	3401      	adds	r4, #1
  403516:	f855 3b04 	ldr.w	r3, [r5], #4
  40351a:	4798      	blx	r3
  40351c:	42a6      	cmp	r6, r4
  40351e:	d1f9      	bne.n	403514 <__libc_init_array+0x10>
  403520:	4e0a      	ldr	r6, [pc, #40]	; (40354c <__libc_init_array+0x48>)
  403522:	4d0b      	ldr	r5, [pc, #44]	; (403550 <__libc_init_array+0x4c>)
  403524:	f004 fed8 	bl	4082d8 <_init>
  403528:	1b76      	subs	r6, r6, r5
  40352a:	10b6      	asrs	r6, r6, #2
  40352c:	bf18      	it	ne
  40352e:	2400      	movne	r4, #0
  403530:	d006      	beq.n	403540 <__libc_init_array+0x3c>
  403532:	3401      	adds	r4, #1
  403534:	f855 3b04 	ldr.w	r3, [r5], #4
  403538:	4798      	blx	r3
  40353a:	42a6      	cmp	r6, r4
  40353c:	d1f9      	bne.n	403532 <__libc_init_array+0x2e>
  40353e:	bd70      	pop	{r4, r5, r6, pc}
  403540:	bd70      	pop	{r4, r5, r6, pc}
  403542:	bf00      	nop
  403544:	004082e4 	.word	0x004082e4
  403548:	004082e4 	.word	0x004082e4
  40354c:	004082ec 	.word	0x004082ec
  403550:	004082e4 	.word	0x004082e4

00403554 <memcpy>:
  403554:	4684      	mov	ip, r0
  403556:	ea41 0300 	orr.w	r3, r1, r0
  40355a:	f013 0303 	ands.w	r3, r3, #3
  40355e:	d149      	bne.n	4035f4 <memcpy+0xa0>
  403560:	3a40      	subs	r2, #64	; 0x40
  403562:	d323      	bcc.n	4035ac <memcpy+0x58>
  403564:	680b      	ldr	r3, [r1, #0]
  403566:	6003      	str	r3, [r0, #0]
  403568:	684b      	ldr	r3, [r1, #4]
  40356a:	6043      	str	r3, [r0, #4]
  40356c:	688b      	ldr	r3, [r1, #8]
  40356e:	6083      	str	r3, [r0, #8]
  403570:	68cb      	ldr	r3, [r1, #12]
  403572:	60c3      	str	r3, [r0, #12]
  403574:	690b      	ldr	r3, [r1, #16]
  403576:	6103      	str	r3, [r0, #16]
  403578:	694b      	ldr	r3, [r1, #20]
  40357a:	6143      	str	r3, [r0, #20]
  40357c:	698b      	ldr	r3, [r1, #24]
  40357e:	6183      	str	r3, [r0, #24]
  403580:	69cb      	ldr	r3, [r1, #28]
  403582:	61c3      	str	r3, [r0, #28]
  403584:	6a0b      	ldr	r3, [r1, #32]
  403586:	6203      	str	r3, [r0, #32]
  403588:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  40358a:	6243      	str	r3, [r0, #36]	; 0x24
  40358c:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  40358e:	6283      	str	r3, [r0, #40]	; 0x28
  403590:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  403592:	62c3      	str	r3, [r0, #44]	; 0x2c
  403594:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  403596:	6303      	str	r3, [r0, #48]	; 0x30
  403598:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  40359a:	6343      	str	r3, [r0, #52]	; 0x34
  40359c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
  40359e:	6383      	str	r3, [r0, #56]	; 0x38
  4035a0:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  4035a2:	63c3      	str	r3, [r0, #60]	; 0x3c
  4035a4:	3040      	adds	r0, #64	; 0x40
  4035a6:	3140      	adds	r1, #64	; 0x40
  4035a8:	3a40      	subs	r2, #64	; 0x40
  4035aa:	d2db      	bcs.n	403564 <memcpy+0x10>
  4035ac:	3230      	adds	r2, #48	; 0x30
  4035ae:	d30b      	bcc.n	4035c8 <memcpy+0x74>
  4035b0:	680b      	ldr	r3, [r1, #0]
  4035b2:	6003      	str	r3, [r0, #0]
  4035b4:	684b      	ldr	r3, [r1, #4]
  4035b6:	6043      	str	r3, [r0, #4]
  4035b8:	688b      	ldr	r3, [r1, #8]
  4035ba:	6083      	str	r3, [r0, #8]
  4035bc:	68cb      	ldr	r3, [r1, #12]
  4035be:	60c3      	str	r3, [r0, #12]
  4035c0:	3010      	adds	r0, #16
  4035c2:	3110      	adds	r1, #16
  4035c4:	3a10      	subs	r2, #16
  4035c6:	d2f3      	bcs.n	4035b0 <memcpy+0x5c>
  4035c8:	320c      	adds	r2, #12
  4035ca:	d305      	bcc.n	4035d8 <memcpy+0x84>
  4035cc:	f851 3b04 	ldr.w	r3, [r1], #4
  4035d0:	f840 3b04 	str.w	r3, [r0], #4
  4035d4:	3a04      	subs	r2, #4
  4035d6:	d2f9      	bcs.n	4035cc <memcpy+0x78>
  4035d8:	3204      	adds	r2, #4
  4035da:	d008      	beq.n	4035ee <memcpy+0x9a>
  4035dc:	07d2      	lsls	r2, r2, #31
  4035de:	bf1c      	itt	ne
  4035e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4035e4:	f800 3b01 	strbne.w	r3, [r0], #1
  4035e8:	d301      	bcc.n	4035ee <memcpy+0x9a>
  4035ea:	880b      	ldrh	r3, [r1, #0]
  4035ec:	8003      	strh	r3, [r0, #0]
  4035ee:	4660      	mov	r0, ip
  4035f0:	4770      	bx	lr
  4035f2:	bf00      	nop
  4035f4:	2a08      	cmp	r2, #8
  4035f6:	d313      	bcc.n	403620 <memcpy+0xcc>
  4035f8:	078b      	lsls	r3, r1, #30
  4035fa:	d0b1      	beq.n	403560 <memcpy+0xc>
  4035fc:	f010 0303 	ands.w	r3, r0, #3
  403600:	d0ae      	beq.n	403560 <memcpy+0xc>
  403602:	f1c3 0304 	rsb	r3, r3, #4
  403606:	1ad2      	subs	r2, r2, r3
  403608:	07db      	lsls	r3, r3, #31
  40360a:	bf1c      	itt	ne
  40360c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403610:	f800 3b01 	strbne.w	r3, [r0], #1
  403614:	d3a4      	bcc.n	403560 <memcpy+0xc>
  403616:	f831 3b02 	ldrh.w	r3, [r1], #2
  40361a:	f820 3b02 	strh.w	r3, [r0], #2
  40361e:	e79f      	b.n	403560 <memcpy+0xc>
  403620:	3a04      	subs	r2, #4
  403622:	d3d9      	bcc.n	4035d8 <memcpy+0x84>
  403624:	3a01      	subs	r2, #1
  403626:	f811 3b01 	ldrb.w	r3, [r1], #1
  40362a:	f800 3b01 	strb.w	r3, [r0], #1
  40362e:	d2f9      	bcs.n	403624 <memcpy+0xd0>
  403630:	780b      	ldrb	r3, [r1, #0]
  403632:	7003      	strb	r3, [r0, #0]
  403634:	784b      	ldrb	r3, [r1, #1]
  403636:	7043      	strb	r3, [r0, #1]
  403638:	788b      	ldrb	r3, [r1, #2]
  40363a:	7083      	strb	r3, [r0, #2]
  40363c:	4660      	mov	r0, ip
  40363e:	4770      	bx	lr

00403640 <memset>:
  403640:	b470      	push	{r4, r5, r6}
  403642:	0786      	lsls	r6, r0, #30
  403644:	d046      	beq.n	4036d4 <memset+0x94>
  403646:	1e54      	subs	r4, r2, #1
  403648:	2a00      	cmp	r2, #0
  40364a:	d041      	beq.n	4036d0 <memset+0x90>
  40364c:	b2ca      	uxtb	r2, r1
  40364e:	4603      	mov	r3, r0
  403650:	e002      	b.n	403658 <memset+0x18>
  403652:	f114 34ff 	adds.w	r4, r4, #4294967295
  403656:	d33b      	bcc.n	4036d0 <memset+0x90>
  403658:	f803 2b01 	strb.w	r2, [r3], #1
  40365c:	079d      	lsls	r5, r3, #30
  40365e:	d1f8      	bne.n	403652 <memset+0x12>
  403660:	2c03      	cmp	r4, #3
  403662:	d92e      	bls.n	4036c2 <memset+0x82>
  403664:	b2cd      	uxtb	r5, r1
  403666:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40366a:	2c0f      	cmp	r4, #15
  40366c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  403670:	d919      	bls.n	4036a6 <memset+0x66>
  403672:	4626      	mov	r6, r4
  403674:	f103 0210 	add.w	r2, r3, #16
  403678:	3e10      	subs	r6, #16
  40367a:	2e0f      	cmp	r6, #15
  40367c:	f842 5c10 	str.w	r5, [r2, #-16]
  403680:	f842 5c0c 	str.w	r5, [r2, #-12]
  403684:	f842 5c08 	str.w	r5, [r2, #-8]
  403688:	f842 5c04 	str.w	r5, [r2, #-4]
  40368c:	f102 0210 	add.w	r2, r2, #16
  403690:	d8f2      	bhi.n	403678 <memset+0x38>
  403692:	f1a4 0210 	sub.w	r2, r4, #16
  403696:	f022 020f 	bic.w	r2, r2, #15
  40369a:	f004 040f 	and.w	r4, r4, #15
  40369e:	3210      	adds	r2, #16
  4036a0:	2c03      	cmp	r4, #3
  4036a2:	4413      	add	r3, r2
  4036a4:	d90d      	bls.n	4036c2 <memset+0x82>
  4036a6:	461e      	mov	r6, r3
  4036a8:	4622      	mov	r2, r4
  4036aa:	3a04      	subs	r2, #4
  4036ac:	2a03      	cmp	r2, #3
  4036ae:	f846 5b04 	str.w	r5, [r6], #4
  4036b2:	d8fa      	bhi.n	4036aa <memset+0x6a>
  4036b4:	1f22      	subs	r2, r4, #4
  4036b6:	f022 0203 	bic.w	r2, r2, #3
  4036ba:	3204      	adds	r2, #4
  4036bc:	4413      	add	r3, r2
  4036be:	f004 0403 	and.w	r4, r4, #3
  4036c2:	b12c      	cbz	r4, 4036d0 <memset+0x90>
  4036c4:	b2c9      	uxtb	r1, r1
  4036c6:	441c      	add	r4, r3
  4036c8:	f803 1b01 	strb.w	r1, [r3], #1
  4036cc:	429c      	cmp	r4, r3
  4036ce:	d1fb      	bne.n	4036c8 <memset+0x88>
  4036d0:	bc70      	pop	{r4, r5, r6}
  4036d2:	4770      	bx	lr
  4036d4:	4614      	mov	r4, r2
  4036d6:	4603      	mov	r3, r0
  4036d8:	e7c2      	b.n	403660 <memset+0x20>
  4036da:	bf00      	nop

004036dc <sprintf>:
  4036dc:	b40e      	push	{r1, r2, r3}
  4036de:	4601      	mov	r1, r0
  4036e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4036e2:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
  4036e6:	f44f 7702 	mov.w	r7, #520	; 0x208
  4036ea:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4036ee:	b09c      	sub	sp, #112	; 0x70
  4036f0:	ac21      	add	r4, sp, #132	; 0x84
  4036f2:	f854 2b04 	ldr.w	r2, [r4], #4
  4036f6:	4b0b      	ldr	r3, [pc, #44]	; (403724 <sprintf+0x48>)
  4036f8:	9102      	str	r1, [sp, #8]
  4036fa:	9106      	str	r1, [sp, #24]
  4036fc:	6818      	ldr	r0, [r3, #0]
  4036fe:	a902      	add	r1, sp, #8
  403700:	4623      	mov	r3, r4
  403702:	9401      	str	r4, [sp, #4]
  403704:	f8ad 7014 	strh.w	r7, [sp, #20]
  403708:	9504      	str	r5, [sp, #16]
  40370a:	9507      	str	r5, [sp, #28]
  40370c:	f8ad 6016 	strh.w	r6, [sp, #22]
  403710:	f000 f8e2 	bl	4038d8 <_svfprintf_r>
  403714:	2200      	movs	r2, #0
  403716:	9b02      	ldr	r3, [sp, #8]
  403718:	701a      	strb	r2, [r3, #0]
  40371a:	b01c      	add	sp, #112	; 0x70
  40371c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  403720:	b003      	add	sp, #12
  403722:	4770      	bx	lr
  403724:	20000208 	.word	0x20000208

00403728 <strlen>:
  403728:	f020 0103 	bic.w	r1, r0, #3
  40372c:	f010 0003 	ands.w	r0, r0, #3
  403730:	f1c0 0000 	rsb	r0, r0, #0
  403734:	f851 3b04 	ldr.w	r3, [r1], #4
  403738:	f100 0c04 	add.w	ip, r0, #4
  40373c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  403740:	f06f 0200 	mvn.w	r2, #0
  403744:	bf1c      	itt	ne
  403746:	fa22 f20c 	lsrne.w	r2, r2, ip
  40374a:	4313      	orrne	r3, r2
  40374c:	f04f 0c01 	mov.w	ip, #1
  403750:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  403754:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  403758:	eba3 020c 	sub.w	r2, r3, ip
  40375c:	ea22 0203 	bic.w	r2, r2, r3
  403760:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  403764:	bf04      	itt	eq
  403766:	f851 3b04 	ldreq.w	r3, [r1], #4
  40376a:	3004      	addeq	r0, #4
  40376c:	d0f4      	beq.n	403758 <strlen+0x30>
  40376e:	f1c2 0100 	rsb	r1, r2, #0
  403772:	ea02 0201 	and.w	r2, r2, r1
  403776:	fab2 f282 	clz	r2, r2
  40377a:	f1c2 021f 	rsb	r2, r2, #31
  40377e:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  403782:	4770      	bx	lr

00403784 <_strtol_l.isra.0>:
  403784:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403788:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  40378c:	460f      	mov	r7, r1
  40378e:	4680      	mov	r8, r0
  403790:	4616      	mov	r6, r2
  403792:	461d      	mov	r5, r3
  403794:	468a      	mov	sl, r1
  403796:	e000      	b.n	40379a <_strtol_l.isra.0+0x16>
  403798:	46a2      	mov	sl, r4
  40379a:	4654      	mov	r4, sl
  40379c:	4648      	mov	r0, r9
  40379e:	f814 bb01 	ldrb.w	fp, [r4], #1
  4037a2:	f002 fc2f 	bl	406004 <__locale_ctype_ptr_l>
  4037a6:	4458      	add	r0, fp
  4037a8:	7842      	ldrb	r2, [r0, #1]
  4037aa:	f012 0208 	ands.w	r2, r2, #8
  4037ae:	d1f3      	bne.n	403798 <_strtol_l.isra.0+0x14>
  4037b0:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
  4037b4:	d04f      	beq.n	403856 <_strtol_l.isra.0+0xd2>
  4037b6:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
  4037ba:	bf04      	itt	eq
  4037bc:	f894 b000 	ldrbeq.w	fp, [r4]
  4037c0:	f10a 0402 	addeq.w	r4, sl, #2
  4037c4:	b11d      	cbz	r5, 4037ce <_strtol_l.isra.0+0x4a>
  4037c6:	2d10      	cmp	r5, #16
  4037c8:	d056      	beq.n	403878 <_strtol_l.isra.0+0xf4>
  4037ca:	46ac      	mov	ip, r5
  4037cc:	e004      	b.n	4037d8 <_strtol_l.isra.0+0x54>
  4037ce:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  4037d2:	d060      	beq.n	403896 <_strtol_l.isra.0+0x112>
  4037d4:	250a      	movs	r5, #10
  4037d6:	46ac      	mov	ip, r5
  4037d8:	2a00      	cmp	r2, #0
  4037da:	bf0c      	ite	eq
  4037dc:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
  4037e0:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
  4037e4:	2100      	movs	r1, #0
  4037e6:	fbb9 fefc 	udiv	lr, r9, ip
  4037ea:	4608      	mov	r0, r1
  4037ec:	fb0c 9a1e 	mls	sl, ip, lr, r9
  4037f0:	e005      	b.n	4037fe <_strtol_l.isra.0+0x7a>
  4037f2:	d029      	beq.n	403848 <_strtol_l.isra.0+0xc4>
  4037f4:	2101      	movs	r1, #1
  4037f6:	fb0c 3000 	mla	r0, ip, r0, r3
  4037fa:	f814 bb01 	ldrb.w	fp, [r4], #1
  4037fe:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
  403802:	2b09      	cmp	r3, #9
  403804:	d905      	bls.n	403812 <_strtol_l.isra.0+0x8e>
  403806:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
  40380a:	2b19      	cmp	r3, #25
  40380c:	d80b      	bhi.n	403826 <_strtol_l.isra.0+0xa2>
  40380e:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
  403812:	429d      	cmp	r5, r3
  403814:	dd0f      	ble.n	403836 <_strtol_l.isra.0+0xb2>
  403816:	f1b1 3fff 	cmp.w	r1, #4294967295
  40381a:	d0ee      	beq.n	4037fa <_strtol_l.isra.0+0x76>
  40381c:	4586      	cmp	lr, r0
  40381e:	d2e8      	bcs.n	4037f2 <_strtol_l.isra.0+0x6e>
  403820:	f04f 31ff 	mov.w	r1, #4294967295
  403824:	e7e9      	b.n	4037fa <_strtol_l.isra.0+0x76>
  403826:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
  40382a:	2b19      	cmp	r3, #25
  40382c:	d803      	bhi.n	403836 <_strtol_l.isra.0+0xb2>
  40382e:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
  403832:	429d      	cmp	r5, r3
  403834:	dcef      	bgt.n	403816 <_strtol_l.isra.0+0x92>
  403836:	1c4b      	adds	r3, r1, #1
  403838:	d013      	beq.n	403862 <_strtol_l.isra.0+0xde>
  40383a:	b102      	cbz	r2, 40383e <_strtol_l.isra.0+0xba>
  40383c:	4240      	negs	r0, r0
  40383e:	b146      	cbz	r6, 403852 <_strtol_l.isra.0+0xce>
  403840:	b9c1      	cbnz	r1, 403874 <_strtol_l.isra.0+0xf0>
  403842:	6037      	str	r7, [r6, #0]
  403844:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403848:	459a      	cmp	sl, r3
  40384a:	dad3      	bge.n	4037f4 <_strtol_l.isra.0+0x70>
  40384c:	f04f 31ff 	mov.w	r1, #4294967295
  403850:	e7d3      	b.n	4037fa <_strtol_l.isra.0+0x76>
  403852:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403856:	f894 b000 	ldrb.w	fp, [r4]
  40385a:	2201      	movs	r2, #1
  40385c:	f10a 0402 	add.w	r4, sl, #2
  403860:	e7b0      	b.n	4037c4 <_strtol_l.isra.0+0x40>
  403862:	2322      	movs	r3, #34	; 0x22
  403864:	f8c8 3000 	str.w	r3, [r8]
  403868:	b1ee      	cbz	r6, 4038a6 <_strtol_l.isra.0+0x122>
  40386a:	1e67      	subs	r7, r4, #1
  40386c:	4648      	mov	r0, r9
  40386e:	6037      	str	r7, [r6, #0]
  403870:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403874:	4681      	mov	r9, r0
  403876:	e7f8      	b.n	40386a <_strtol_l.isra.0+0xe6>
  403878:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  40387c:	d1a5      	bne.n	4037ca <_strtol_l.isra.0+0x46>
  40387e:	7823      	ldrb	r3, [r4, #0]
  403880:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403884:	2b58      	cmp	r3, #88	; 0x58
  403886:	d1a0      	bne.n	4037ca <_strtol_l.isra.0+0x46>
  403888:	f04f 0c10 	mov.w	ip, #16
  40388c:	f894 b001 	ldrb.w	fp, [r4, #1]
  403890:	4665      	mov	r5, ip
  403892:	3402      	adds	r4, #2
  403894:	e7a0      	b.n	4037d8 <_strtol_l.isra.0+0x54>
  403896:	7823      	ldrb	r3, [r4, #0]
  403898:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  40389c:	2b58      	cmp	r3, #88	; 0x58
  40389e:	d0f3      	beq.n	403888 <_strtol_l.isra.0+0x104>
  4038a0:	2508      	movs	r5, #8
  4038a2:	46ac      	mov	ip, r5
  4038a4:	e798      	b.n	4037d8 <_strtol_l.isra.0+0x54>
  4038a6:	4648      	mov	r0, r9
  4038a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

004038ac <strtol>:
  4038ac:	4b08      	ldr	r3, [pc, #32]	; (4038d0 <strtol+0x24>)
  4038ae:	b570      	push	{r4, r5, r6, lr}
  4038b0:	681d      	ldr	r5, [r3, #0]
  4038b2:	4e08      	ldr	r6, [pc, #32]	; (4038d4 <strtol+0x28>)
  4038b4:	6b6c      	ldr	r4, [r5, #52]	; 0x34
  4038b6:	b082      	sub	sp, #8
  4038b8:	2c00      	cmp	r4, #0
  4038ba:	bf08      	it	eq
  4038bc:	4634      	moveq	r4, r6
  4038be:	4613      	mov	r3, r2
  4038c0:	9400      	str	r4, [sp, #0]
  4038c2:	460a      	mov	r2, r1
  4038c4:	4601      	mov	r1, r0
  4038c6:	4628      	mov	r0, r5
  4038c8:	f7ff ff5c 	bl	403784 <_strtol_l.isra.0>
  4038cc:	b002      	add	sp, #8
  4038ce:	bd70      	pop	{r4, r5, r6, pc}
  4038d0:	20000208 	.word	0x20000208
  4038d4:	2000063c 	.word	0x2000063c

004038d8 <_svfprintf_r>:
  4038d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4038dc:	b0c3      	sub	sp, #268	; 0x10c
  4038de:	460c      	mov	r4, r1
  4038e0:	910b      	str	r1, [sp, #44]	; 0x2c
  4038e2:	4692      	mov	sl, r2
  4038e4:	930f      	str	r3, [sp, #60]	; 0x3c
  4038e6:	900c      	str	r0, [sp, #48]	; 0x30
  4038e8:	f002 fb90 	bl	40600c <_localeconv_r>
  4038ec:	6803      	ldr	r3, [r0, #0]
  4038ee:	4618      	mov	r0, r3
  4038f0:	931a      	str	r3, [sp, #104]	; 0x68
  4038f2:	f7ff ff19 	bl	403728 <strlen>
  4038f6:	89a3      	ldrh	r3, [r4, #12]
  4038f8:	9019      	str	r0, [sp, #100]	; 0x64
  4038fa:	0619      	lsls	r1, r3, #24
  4038fc:	d503      	bpl.n	403906 <_svfprintf_r+0x2e>
  4038fe:	6923      	ldr	r3, [r4, #16]
  403900:	2b00      	cmp	r3, #0
  403902:	f001 8035 	beq.w	404970 <_svfprintf_r+0x1098>
  403906:	2300      	movs	r3, #0
  403908:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  40390c:	46c8      	mov	r8, r9
  40390e:	9315      	str	r3, [sp, #84]	; 0x54
  403910:	9313      	str	r3, [sp, #76]	; 0x4c
  403912:	9314      	str	r3, [sp, #80]	; 0x50
  403914:	9318      	str	r3, [sp, #96]	; 0x60
  403916:	931b      	str	r3, [sp, #108]	; 0x6c
  403918:	9309      	str	r3, [sp, #36]	; 0x24
  40391a:	9316      	str	r3, [sp, #88]	; 0x58
  40391c:	9317      	str	r3, [sp, #92]	; 0x5c
  40391e:	9327      	str	r3, [sp, #156]	; 0x9c
  403920:	9326      	str	r3, [sp, #152]	; 0x98
  403922:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  403926:	f89a 3000 	ldrb.w	r3, [sl]
  40392a:	4654      	mov	r4, sl
  40392c:	b1eb      	cbz	r3, 40396a <_svfprintf_r+0x92>
  40392e:	2b25      	cmp	r3, #37	; 0x25
  403930:	d102      	bne.n	403938 <_svfprintf_r+0x60>
  403932:	e01a      	b.n	40396a <_svfprintf_r+0x92>
  403934:	2b25      	cmp	r3, #37	; 0x25
  403936:	d003      	beq.n	403940 <_svfprintf_r+0x68>
  403938:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40393c:	2b00      	cmp	r3, #0
  40393e:	d1f9      	bne.n	403934 <_svfprintf_r+0x5c>
  403940:	eba4 050a 	sub.w	r5, r4, sl
  403944:	b18d      	cbz	r5, 40396a <_svfprintf_r+0x92>
  403946:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403948:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40394a:	3301      	adds	r3, #1
  40394c:	442a      	add	r2, r5
  40394e:	2b07      	cmp	r3, #7
  403950:	f8c8 a000 	str.w	sl, [r8]
  403954:	f8c8 5004 	str.w	r5, [r8, #4]
  403958:	9227      	str	r2, [sp, #156]	; 0x9c
  40395a:	9326      	str	r3, [sp, #152]	; 0x98
  40395c:	f300 808a 	bgt.w	403a74 <_svfprintf_r+0x19c>
  403960:	f108 0808 	add.w	r8, r8, #8
  403964:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403966:	442b      	add	r3, r5
  403968:	9309      	str	r3, [sp, #36]	; 0x24
  40396a:	7823      	ldrb	r3, [r4, #0]
  40396c:	2b00      	cmp	r3, #0
  40396e:	f000 8089 	beq.w	403a84 <_svfprintf_r+0x1ac>
  403972:	2300      	movs	r3, #0
  403974:	f04f 30ff 	mov.w	r0, #4294967295
  403978:	461a      	mov	r2, r3
  40397a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40397e:	4619      	mov	r1, r3
  403980:	930d      	str	r3, [sp, #52]	; 0x34
  403982:	469b      	mov	fp, r3
  403984:	7863      	ldrb	r3, [r4, #1]
  403986:	f104 0a01 	add.w	sl, r4, #1
  40398a:	900a      	str	r0, [sp, #40]	; 0x28
  40398c:	f10a 0a01 	add.w	sl, sl, #1
  403990:	f1a3 0020 	sub.w	r0, r3, #32
  403994:	2858      	cmp	r0, #88	; 0x58
  403996:	f200 83b7 	bhi.w	404108 <_svfprintf_r+0x830>
  40399a:	e8df f010 	tbh	[pc, r0, lsl #1]
  40399e:	034c      	.short	0x034c
  4039a0:	03b503b5 	.word	0x03b503b5
  4039a4:	03b50354 	.word	0x03b50354
  4039a8:	03b503b5 	.word	0x03b503b5
  4039ac:	03b503b5 	.word	0x03b503b5
  4039b0:	005903b5 	.word	0x005903b5
  4039b4:	03b50359 	.word	0x03b50359
  4039b8:	02140066 	.word	0x02140066
  4039bc:	022f03b5 	.word	0x022f03b5
  4039c0:	03a503a5 	.word	0x03a503a5
  4039c4:	03a503a5 	.word	0x03a503a5
  4039c8:	03a503a5 	.word	0x03a503a5
  4039cc:	03a503a5 	.word	0x03a503a5
  4039d0:	03b503a5 	.word	0x03b503a5
  4039d4:	03b503b5 	.word	0x03b503b5
  4039d8:	03b503b5 	.word	0x03b503b5
  4039dc:	03b503b5 	.word	0x03b503b5
  4039e0:	03b503b5 	.word	0x03b503b5
  4039e4:	028b03b5 	.word	0x028b03b5
  4039e8:	03b502d3 	.word	0x03b502d3
  4039ec:	03b502d3 	.word	0x03b502d3
  4039f0:	03b503b5 	.word	0x03b503b5
  4039f4:	031b03b5 	.word	0x031b03b5
  4039f8:	03b503b5 	.word	0x03b503b5
  4039fc:	03b50320 	.word	0x03b50320
  403a00:	03b503b5 	.word	0x03b503b5
  403a04:	03b503b5 	.word	0x03b503b5
  403a08:	03b50234 	.word	0x03b50234
  403a0c:	024b03b5 	.word	0x024b03b5
  403a10:	03b503b5 	.word	0x03b503b5
  403a14:	03b503b5 	.word	0x03b503b5
  403a18:	03b503b5 	.word	0x03b503b5
  403a1c:	03b503b5 	.word	0x03b503b5
  403a20:	03b503b5 	.word	0x03b503b5
  403a24:	039e0276 	.word	0x039e0276
  403a28:	02d302d3 	.word	0x02d302d3
  403a2c:	036302d3 	.word	0x036302d3
  403a30:	03b5039e 	.word	0x03b5039e
  403a34:	036803b5 	.word	0x036803b5
  403a38:	037503b5 	.word	0x037503b5
  403a3c:	038c01dd 	.word	0x038c01dd
  403a40:	03b5035e 	.word	0x03b5035e
  403a44:	03b501f2 	.word	0x03b501f2
  403a48:	03b50087 	.word	0x03b50087
  403a4c:	033203b5 	.word	0x033203b5
  403a50:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403a52:	6823      	ldr	r3, [r4, #0]
  403a54:	4618      	mov	r0, r3
  403a56:	930d      	str	r3, [sp, #52]	; 0x34
  403a58:	4623      	mov	r3, r4
  403a5a:	2800      	cmp	r0, #0
  403a5c:	f103 0304 	add.w	r3, r3, #4
  403a60:	930f      	str	r3, [sp, #60]	; 0x3c
  403a62:	da04      	bge.n	403a6e <_svfprintf_r+0x196>
  403a64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a66:	425b      	negs	r3, r3
  403a68:	930d      	str	r3, [sp, #52]	; 0x34
  403a6a:	f04b 0b04 	orr.w	fp, fp, #4
  403a6e:	f89a 3000 	ldrb.w	r3, [sl]
  403a72:	e78b      	b.n	40398c <_svfprintf_r+0xb4>
  403a74:	aa25      	add	r2, sp, #148	; 0x94
  403a76:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a78:	980c      	ldr	r0, [sp, #48]	; 0x30
  403a7a:	f003 fb0b 	bl	407094 <__ssprint_r>
  403a7e:	b940      	cbnz	r0, 403a92 <_svfprintf_r+0x1ba>
  403a80:	46c8      	mov	r8, r9
  403a82:	e76f      	b.n	403964 <_svfprintf_r+0x8c>
  403a84:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  403a86:	b123      	cbz	r3, 403a92 <_svfprintf_r+0x1ba>
  403a88:	980c      	ldr	r0, [sp, #48]	; 0x30
  403a8a:	aa25      	add	r2, sp, #148	; 0x94
  403a8c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a8e:	f003 fb01 	bl	407094 <__ssprint_r>
  403a92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403a94:	899b      	ldrh	r3, [r3, #12]
  403a96:	f013 0f40 	tst.w	r3, #64	; 0x40
  403a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403a9c:	bf18      	it	ne
  403a9e:	f04f 33ff 	movne.w	r3, #4294967295
  403aa2:	9309      	str	r3, [sp, #36]	; 0x24
  403aa4:	9809      	ldr	r0, [sp, #36]	; 0x24
  403aa6:	b043      	add	sp, #268	; 0x10c
  403aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403aac:	f01b 0f20 	tst.w	fp, #32
  403ab0:	9311      	str	r3, [sp, #68]	; 0x44
  403ab2:	f040 81af 	bne.w	403e14 <_svfprintf_r+0x53c>
  403ab6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403ab8:	f01b 0f10 	tst.w	fp, #16
  403abc:	4613      	mov	r3, r2
  403abe:	f040 859a 	bne.w	4045f6 <_svfprintf_r+0xd1e>
  403ac2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403ac6:	f000 8596 	beq.w	4045f6 <_svfprintf_r+0xd1e>
  403aca:	2500      	movs	r5, #0
  403acc:	2301      	movs	r3, #1
  403ace:	8814      	ldrh	r4, [r2, #0]
  403ad0:	3204      	adds	r2, #4
  403ad2:	920f      	str	r2, [sp, #60]	; 0x3c
  403ad4:	2200      	movs	r2, #0
  403ad6:	4617      	mov	r7, r2
  403ad8:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
  403adc:	990a      	ldr	r1, [sp, #40]	; 0x28
  403ade:	1c4a      	adds	r2, r1, #1
  403ae0:	f000 8210 	beq.w	403f04 <_svfprintf_r+0x62c>
  403ae4:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  403ae8:	9207      	str	r2, [sp, #28]
  403aea:	ea54 0205 	orrs.w	r2, r4, r5
  403aee:	f040 820f 	bne.w	403f10 <_svfprintf_r+0x638>
  403af2:	2900      	cmp	r1, #0
  403af4:	f040 8431 	bne.w	40435a <_svfprintf_r+0xa82>
  403af8:	2b00      	cmp	r3, #0
  403afa:	f040 8539 	bne.w	404570 <_svfprintf_r+0xc98>
  403afe:	f01b 0301 	ands.w	r3, fp, #1
  403b02:	930e      	str	r3, [sp, #56]	; 0x38
  403b04:	f000 8662 	beq.w	4047cc <_svfprintf_r+0xef4>
  403b08:	2330      	movs	r3, #48	; 0x30
  403b0a:	ae42      	add	r6, sp, #264	; 0x108
  403b0c:	f806 3d41 	strb.w	r3, [r6, #-65]!
  403b10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403b14:	4293      	cmp	r3, r2
  403b16:	bfb8      	it	lt
  403b18:	4613      	movlt	r3, r2
  403b1a:	9308      	str	r3, [sp, #32]
  403b1c:	2300      	movs	r3, #0
  403b1e:	9312      	str	r3, [sp, #72]	; 0x48
  403b20:	b117      	cbz	r7, 403b28 <_svfprintf_r+0x250>
  403b22:	9b08      	ldr	r3, [sp, #32]
  403b24:	3301      	adds	r3, #1
  403b26:	9308      	str	r3, [sp, #32]
  403b28:	9b07      	ldr	r3, [sp, #28]
  403b2a:	f013 0302 	ands.w	r3, r3, #2
  403b2e:	9310      	str	r3, [sp, #64]	; 0x40
  403b30:	d002      	beq.n	403b38 <_svfprintf_r+0x260>
  403b32:	9b08      	ldr	r3, [sp, #32]
  403b34:	3302      	adds	r3, #2
  403b36:	9308      	str	r3, [sp, #32]
  403b38:	9b07      	ldr	r3, [sp, #28]
  403b3a:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  403b3e:	f040 8310 	bne.w	404162 <_svfprintf_r+0x88a>
  403b42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403b44:	9a08      	ldr	r2, [sp, #32]
  403b46:	eba3 0b02 	sub.w	fp, r3, r2
  403b4a:	f1bb 0f00 	cmp.w	fp, #0
  403b4e:	f340 8308 	ble.w	404162 <_svfprintf_r+0x88a>
  403b52:	f1bb 0f10 	cmp.w	fp, #16
  403b56:	f340 87b2 	ble.w	404abe <_svfprintf_r+0x11e6>
  403b5a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b5c:	4643      	mov	r3, r8
  403b5e:	4621      	mov	r1, r4
  403b60:	46a8      	mov	r8, r5
  403b62:	2710      	movs	r7, #16
  403b64:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403b66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403b68:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403b6a:	e006      	b.n	403b7a <_svfprintf_r+0x2a2>
  403b6c:	f1ab 0b10 	sub.w	fp, fp, #16
  403b70:	f1bb 0f10 	cmp.w	fp, #16
  403b74:	f103 0308 	add.w	r3, r3, #8
  403b78:	dd18      	ble.n	403bac <_svfprintf_r+0x2d4>
  403b7a:	3201      	adds	r2, #1
  403b7c:	48ab      	ldr	r0, [pc, #684]	; (403e2c <_svfprintf_r+0x554>)
  403b7e:	3110      	adds	r1, #16
  403b80:	2a07      	cmp	r2, #7
  403b82:	9127      	str	r1, [sp, #156]	; 0x9c
  403b84:	9226      	str	r2, [sp, #152]	; 0x98
  403b86:	e883 0081 	stmia.w	r3, {r0, r7}
  403b8a:	ddef      	ble.n	403b6c <_svfprintf_r+0x294>
  403b8c:	aa25      	add	r2, sp, #148	; 0x94
  403b8e:	4629      	mov	r1, r5
  403b90:	4620      	mov	r0, r4
  403b92:	f003 fa7f 	bl	407094 <__ssprint_r>
  403b96:	2800      	cmp	r0, #0
  403b98:	f47f af7b 	bne.w	403a92 <_svfprintf_r+0x1ba>
  403b9c:	f1ab 0b10 	sub.w	fp, fp, #16
  403ba0:	f1bb 0f10 	cmp.w	fp, #16
  403ba4:	464b      	mov	r3, r9
  403ba6:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403ba8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403baa:	dce6      	bgt.n	403b7a <_svfprintf_r+0x2a2>
  403bac:	4645      	mov	r5, r8
  403bae:	460c      	mov	r4, r1
  403bb0:	4698      	mov	r8, r3
  403bb2:	3201      	adds	r2, #1
  403bb4:	4b9d      	ldr	r3, [pc, #628]	; (403e2c <_svfprintf_r+0x554>)
  403bb6:	445c      	add	r4, fp
  403bb8:	2a07      	cmp	r2, #7
  403bba:	9427      	str	r4, [sp, #156]	; 0x9c
  403bbc:	9226      	str	r2, [sp, #152]	; 0x98
  403bbe:	e888 0808 	stmia.w	r8, {r3, fp}
  403bc2:	f300 82c3 	bgt.w	40414c <_svfprintf_r+0x874>
  403bc6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403bca:	f108 0808 	add.w	r8, r8, #8
  403bce:	b187      	cbz	r7, 403bf2 <_svfprintf_r+0x31a>
  403bd0:	2101      	movs	r1, #1
  403bd2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403bd4:	440c      	add	r4, r1
  403bd6:	440b      	add	r3, r1
  403bd8:	f10d 0277 	add.w	r2, sp, #119	; 0x77
  403bdc:	2b07      	cmp	r3, #7
  403bde:	9427      	str	r4, [sp, #156]	; 0x9c
  403be0:	9326      	str	r3, [sp, #152]	; 0x98
  403be2:	f8c8 1004 	str.w	r1, [r8, #4]
  403be6:	f8c8 2000 	str.w	r2, [r8]
  403bea:	f300 83cd 	bgt.w	404388 <_svfprintf_r+0xab0>
  403bee:	f108 0808 	add.w	r8, r8, #8
  403bf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403bf4:	b17b      	cbz	r3, 403c16 <_svfprintf_r+0x33e>
  403bf6:	2102      	movs	r1, #2
  403bf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403bfa:	440c      	add	r4, r1
  403bfc:	3301      	adds	r3, #1
  403bfe:	aa1e      	add	r2, sp, #120	; 0x78
  403c00:	2b07      	cmp	r3, #7
  403c02:	9427      	str	r4, [sp, #156]	; 0x9c
  403c04:	9326      	str	r3, [sp, #152]	; 0x98
  403c06:	f8c8 1004 	str.w	r1, [r8, #4]
  403c0a:	f8c8 2000 	str.w	r2, [r8]
  403c0e:	f300 8411 	bgt.w	404434 <_svfprintf_r+0xb5c>
  403c12:	f108 0808 	add.w	r8, r8, #8
  403c16:	2d80      	cmp	r5, #128	; 0x80
  403c18:	f000 8304 	beq.w	404224 <_svfprintf_r+0x94c>
  403c1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403c20:	1a9f      	subs	r7, r3, r2
  403c22:	2f00      	cmp	r7, #0
  403c24:	dd37      	ble.n	403c96 <_svfprintf_r+0x3be>
  403c26:	2f10      	cmp	r7, #16
  403c28:	f340 8679 	ble.w	40491e <_svfprintf_r+0x1046>
  403c2c:	4d80      	ldr	r5, [pc, #512]	; (403e30 <_svfprintf_r+0x558>)
  403c2e:	4642      	mov	r2, r8
  403c30:	4621      	mov	r1, r4
  403c32:	46b0      	mov	r8, r6
  403c34:	f04f 0b10 	mov.w	fp, #16
  403c38:	462e      	mov	r6, r5
  403c3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c3c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403c3e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403c40:	e004      	b.n	403c4c <_svfprintf_r+0x374>
  403c42:	3f10      	subs	r7, #16
  403c44:	2f10      	cmp	r7, #16
  403c46:	f102 0208 	add.w	r2, r2, #8
  403c4a:	dd15      	ble.n	403c78 <_svfprintf_r+0x3a0>
  403c4c:	3301      	adds	r3, #1
  403c4e:	3110      	adds	r1, #16
  403c50:	2b07      	cmp	r3, #7
  403c52:	9127      	str	r1, [sp, #156]	; 0x9c
  403c54:	9326      	str	r3, [sp, #152]	; 0x98
  403c56:	e882 0840 	stmia.w	r2, {r6, fp}
  403c5a:	ddf2      	ble.n	403c42 <_svfprintf_r+0x36a>
  403c5c:	aa25      	add	r2, sp, #148	; 0x94
  403c5e:	4629      	mov	r1, r5
  403c60:	4620      	mov	r0, r4
  403c62:	f003 fa17 	bl	407094 <__ssprint_r>
  403c66:	2800      	cmp	r0, #0
  403c68:	f47f af13 	bne.w	403a92 <_svfprintf_r+0x1ba>
  403c6c:	3f10      	subs	r7, #16
  403c6e:	2f10      	cmp	r7, #16
  403c70:	464a      	mov	r2, r9
  403c72:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403c74:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c76:	dce9      	bgt.n	403c4c <_svfprintf_r+0x374>
  403c78:	4635      	mov	r5, r6
  403c7a:	460c      	mov	r4, r1
  403c7c:	4646      	mov	r6, r8
  403c7e:	4690      	mov	r8, r2
  403c80:	3301      	adds	r3, #1
  403c82:	443c      	add	r4, r7
  403c84:	2b07      	cmp	r3, #7
  403c86:	9427      	str	r4, [sp, #156]	; 0x9c
  403c88:	9326      	str	r3, [sp, #152]	; 0x98
  403c8a:	e888 00a0 	stmia.w	r8, {r5, r7}
  403c8e:	f300 8370 	bgt.w	404372 <_svfprintf_r+0xa9a>
  403c92:	f108 0808 	add.w	r8, r8, #8
  403c96:	9b07      	ldr	r3, [sp, #28]
  403c98:	05df      	lsls	r7, r3, #23
  403c9a:	f100 8264 	bmi.w	404166 <_svfprintf_r+0x88e>
  403c9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403ca0:	990e      	ldr	r1, [sp, #56]	; 0x38
  403ca2:	3301      	adds	r3, #1
  403ca4:	440c      	add	r4, r1
  403ca6:	2b07      	cmp	r3, #7
  403ca8:	9427      	str	r4, [sp, #156]	; 0x9c
  403caa:	f8c8 6000 	str.w	r6, [r8]
  403cae:	f8c8 1004 	str.w	r1, [r8, #4]
  403cb2:	9326      	str	r3, [sp, #152]	; 0x98
  403cb4:	f300 83b3 	bgt.w	40441e <_svfprintf_r+0xb46>
  403cb8:	f108 0808 	add.w	r8, r8, #8
  403cbc:	9b07      	ldr	r3, [sp, #28]
  403cbe:	075b      	lsls	r3, r3, #29
  403cc0:	d53b      	bpl.n	403d3a <_svfprintf_r+0x462>
  403cc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403cc4:	9a08      	ldr	r2, [sp, #32]
  403cc6:	1a9d      	subs	r5, r3, r2
  403cc8:	2d00      	cmp	r5, #0
  403cca:	dd36      	ble.n	403d3a <_svfprintf_r+0x462>
  403ccc:	2d10      	cmp	r5, #16
  403cce:	f340 8721 	ble.w	404b14 <_svfprintf_r+0x123c>
  403cd2:	2610      	movs	r6, #16
  403cd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403cd6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403cd8:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  403cdc:	e004      	b.n	403ce8 <_svfprintf_r+0x410>
  403cde:	3d10      	subs	r5, #16
  403ce0:	2d10      	cmp	r5, #16
  403ce2:	f108 0808 	add.w	r8, r8, #8
  403ce6:	dd16      	ble.n	403d16 <_svfprintf_r+0x43e>
  403ce8:	3301      	adds	r3, #1
  403cea:	4a50      	ldr	r2, [pc, #320]	; (403e2c <_svfprintf_r+0x554>)
  403cec:	3410      	adds	r4, #16
  403cee:	2b07      	cmp	r3, #7
  403cf0:	9427      	str	r4, [sp, #156]	; 0x9c
  403cf2:	9326      	str	r3, [sp, #152]	; 0x98
  403cf4:	e888 0044 	stmia.w	r8, {r2, r6}
  403cf8:	ddf1      	ble.n	403cde <_svfprintf_r+0x406>
  403cfa:	aa25      	add	r2, sp, #148	; 0x94
  403cfc:	4659      	mov	r1, fp
  403cfe:	4638      	mov	r0, r7
  403d00:	f003 f9c8 	bl	407094 <__ssprint_r>
  403d04:	2800      	cmp	r0, #0
  403d06:	f47f aec4 	bne.w	403a92 <_svfprintf_r+0x1ba>
  403d0a:	3d10      	subs	r5, #16
  403d0c:	2d10      	cmp	r5, #16
  403d0e:	46c8      	mov	r8, r9
  403d10:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403d12:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403d14:	dce8      	bgt.n	403ce8 <_svfprintf_r+0x410>
  403d16:	3301      	adds	r3, #1
  403d18:	4a44      	ldr	r2, [pc, #272]	; (403e2c <_svfprintf_r+0x554>)
  403d1a:	442c      	add	r4, r5
  403d1c:	2b07      	cmp	r3, #7
  403d1e:	9427      	str	r4, [sp, #156]	; 0x9c
  403d20:	9326      	str	r3, [sp, #152]	; 0x98
  403d22:	e888 0024 	stmia.w	r8, {r2, r5}
  403d26:	dd08      	ble.n	403d3a <_svfprintf_r+0x462>
  403d28:	aa25      	add	r2, sp, #148	; 0x94
  403d2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d2c:	980c      	ldr	r0, [sp, #48]	; 0x30
  403d2e:	f003 f9b1 	bl	407094 <__ssprint_r>
  403d32:	2800      	cmp	r0, #0
  403d34:	f47f aead 	bne.w	403a92 <_svfprintf_r+0x1ba>
  403d38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403d3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403d3c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403d3e:	9908      	ldr	r1, [sp, #32]
  403d40:	428a      	cmp	r2, r1
  403d42:	bfac      	ite	ge
  403d44:	189b      	addge	r3, r3, r2
  403d46:	185b      	addlt	r3, r3, r1
  403d48:	9309      	str	r3, [sp, #36]	; 0x24
  403d4a:	2c00      	cmp	r4, #0
  403d4c:	f040 82fb 	bne.w	404346 <_svfprintf_r+0xa6e>
  403d50:	2300      	movs	r3, #0
  403d52:	46c8      	mov	r8, r9
  403d54:	9326      	str	r3, [sp, #152]	; 0x98
  403d56:	e5e6      	b.n	403926 <_svfprintf_r+0x4e>
  403d58:	9311      	str	r3, [sp, #68]	; 0x44
  403d5a:	f01b 0320 	ands.w	r3, fp, #32
  403d5e:	f040 8145 	bne.w	403fec <_svfprintf_r+0x714>
  403d62:	f01b 0210 	ands.w	r2, fp, #16
  403d66:	f040 8466 	bne.w	404636 <_svfprintf_r+0xd5e>
  403d6a:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  403d6e:	f000 8462 	beq.w	404636 <_svfprintf_r+0xd5e>
  403d72:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403d74:	4613      	mov	r3, r2
  403d76:	460a      	mov	r2, r1
  403d78:	3204      	adds	r2, #4
  403d7a:	880c      	ldrh	r4, [r1, #0]
  403d7c:	2500      	movs	r5, #0
  403d7e:	920f      	str	r2, [sp, #60]	; 0x3c
  403d80:	e6a8      	b.n	403ad4 <_svfprintf_r+0x1fc>
  403d82:	2500      	movs	r5, #0
  403d84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403d86:	9311      	str	r3, [sp, #68]	; 0x44
  403d88:	6816      	ldr	r6, [r2, #0]
  403d8a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
  403d8e:	1d14      	adds	r4, r2, #4
  403d90:	2e00      	cmp	r6, #0
  403d92:	f000 86cd 	beq.w	404b30 <_svfprintf_r+0x1258>
  403d96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403d98:	1c53      	adds	r3, r2, #1
  403d9a:	f000 861b 	beq.w	4049d4 <_svfprintf_r+0x10fc>
  403d9e:	4629      	mov	r1, r5
  403da0:	4630      	mov	r0, r6
  403da2:	f002 fbfd 	bl	4065a0 <memchr>
  403da6:	2800      	cmp	r0, #0
  403da8:	f000 870d 	beq.w	404bc6 <_svfprintf_r+0x12ee>
  403dac:	1b83      	subs	r3, r0, r6
  403dae:	950a      	str	r5, [sp, #40]	; 0x28
  403db0:	930e      	str	r3, [sp, #56]	; 0x38
  403db2:	940f      	str	r4, [sp, #60]	; 0x3c
  403db4:	f8cd b01c 	str.w	fp, [sp, #28]
  403db8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403dbc:	9308      	str	r3, [sp, #32]
  403dbe:	9512      	str	r5, [sp, #72]	; 0x48
  403dc0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403dc4:	e6ac      	b.n	403b20 <_svfprintf_r+0x248>
  403dc6:	f89a 3000 	ldrb.w	r3, [sl]
  403dca:	f10a 0401 	add.w	r4, sl, #1
  403dce:	2b2a      	cmp	r3, #42	; 0x2a
  403dd0:	f000 87c2 	beq.w	404d58 <_svfprintf_r+0x1480>
  403dd4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403dd8:	2809      	cmp	r0, #9
  403dda:	46a2      	mov	sl, r4
  403ddc:	f200 8718 	bhi.w	404c10 <_svfprintf_r+0x1338>
  403de0:	2300      	movs	r3, #0
  403de2:	461c      	mov	r4, r3
  403de4:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403de8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403dec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  403df0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403df4:	2809      	cmp	r0, #9
  403df6:	d9f5      	bls.n	403de4 <_svfprintf_r+0x50c>
  403df8:	940a      	str	r4, [sp, #40]	; 0x28
  403dfa:	e5c9      	b.n	403990 <_svfprintf_r+0xb8>
  403dfc:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  403e00:	f89a 3000 	ldrb.w	r3, [sl]
  403e04:	e5c2      	b.n	40398c <_svfprintf_r+0xb4>
  403e06:	f04b 0b10 	orr.w	fp, fp, #16
  403e0a:	f01b 0f20 	tst.w	fp, #32
  403e0e:	9311      	str	r3, [sp, #68]	; 0x44
  403e10:	f43f ae51 	beq.w	403ab6 <_svfprintf_r+0x1de>
  403e14:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403e16:	3407      	adds	r4, #7
  403e18:	f024 0307 	bic.w	r3, r4, #7
  403e1c:	f103 0208 	add.w	r2, r3, #8
  403e20:	e9d3 4500 	ldrd	r4, r5, [r3]
  403e24:	920f      	str	r2, [sp, #60]	; 0x3c
  403e26:	2301      	movs	r3, #1
  403e28:	e654      	b.n	403ad4 <_svfprintf_r+0x1fc>
  403e2a:	bf00      	nop
  403e2c:	00408094 	.word	0x00408094
  403e30:	004080a4 	.word	0x004080a4
  403e34:	9311      	str	r3, [sp, #68]	; 0x44
  403e36:	2a00      	cmp	r2, #0
  403e38:	f040 87ad 	bne.w	404d96 <_svfprintf_r+0x14be>
  403e3c:	4bbe      	ldr	r3, [pc, #760]	; (404138 <_svfprintf_r+0x860>)
  403e3e:	f01b 0f20 	tst.w	fp, #32
  403e42:	9318      	str	r3, [sp, #96]	; 0x60
  403e44:	f040 80e7 	bne.w	404016 <_svfprintf_r+0x73e>
  403e48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403e4a:	f01b 0f10 	tst.w	fp, #16
  403e4e:	4613      	mov	r3, r2
  403e50:	f040 83d8 	bne.w	404604 <_svfprintf_r+0xd2c>
  403e54:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403e58:	f000 83d4 	beq.w	404604 <_svfprintf_r+0xd2c>
  403e5c:	2500      	movs	r5, #0
  403e5e:	3304      	adds	r3, #4
  403e60:	8814      	ldrh	r4, [r2, #0]
  403e62:	930f      	str	r3, [sp, #60]	; 0x3c
  403e64:	f01b 0f01 	tst.w	fp, #1
  403e68:	f000 80e3 	beq.w	404032 <_svfprintf_r+0x75a>
  403e6c:	ea54 0305 	orrs.w	r3, r4, r5
  403e70:	f000 80df 	beq.w	404032 <_svfprintf_r+0x75a>
  403e74:	2330      	movs	r3, #48	; 0x30
  403e76:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  403e7a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  403e7e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  403e82:	f04b 0b02 	orr.w	fp, fp, #2
  403e86:	2302      	movs	r3, #2
  403e88:	e624      	b.n	403ad4 <_svfprintf_r+0x1fc>
  403e8a:	2201      	movs	r2, #1
  403e8c:	9311      	str	r3, [sp, #68]	; 0x44
  403e8e:	2300      	movs	r3, #0
  403e90:	4611      	mov	r1, r2
  403e92:	980f      	ldr	r0, [sp, #60]	; 0x3c
  403e94:	9208      	str	r2, [sp, #32]
  403e96:	6802      	ldr	r2, [r0, #0]
  403e98:	461f      	mov	r7, r3
  403e9a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  403e9e:	930a      	str	r3, [sp, #40]	; 0x28
  403ea0:	9312      	str	r3, [sp, #72]	; 0x48
  403ea2:	1d03      	adds	r3, r0, #4
  403ea4:	f8cd b01c 	str.w	fp, [sp, #28]
  403ea8:	910e      	str	r1, [sp, #56]	; 0x38
  403eaa:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  403eae:	930f      	str	r3, [sp, #60]	; 0x3c
  403eb0:	ae28      	add	r6, sp, #160	; 0xa0
  403eb2:	e639      	b.n	403b28 <_svfprintf_r+0x250>
  403eb4:	9311      	str	r3, [sp, #68]	; 0x44
  403eb6:	2a00      	cmp	r2, #0
  403eb8:	f040 8784 	bne.w	404dc4 <_svfprintf_r+0x14ec>
  403ebc:	f04b 0b10 	orr.w	fp, fp, #16
  403ec0:	f01b 0f20 	tst.w	fp, #32
  403ec4:	f040 8475 	bne.w	4047b2 <_svfprintf_r+0xeda>
  403ec8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403eca:	f01b 0f10 	tst.w	fp, #16
  403ece:	4613      	mov	r3, r2
  403ed0:	f040 839d 	bne.w	40460e <_svfprintf_r+0xd36>
  403ed4:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403ed8:	f000 8399 	beq.w	40460e <_svfprintf_r+0xd36>
  403edc:	f9b2 4000 	ldrsh.w	r4, [r2]
  403ee0:	3304      	adds	r3, #4
  403ee2:	17e5      	asrs	r5, r4, #31
  403ee4:	930f      	str	r3, [sp, #60]	; 0x3c
  403ee6:	4622      	mov	r2, r4
  403ee8:	462b      	mov	r3, r5
  403eea:	2a00      	cmp	r2, #0
  403eec:	f173 0300 	sbcs.w	r3, r3, #0
  403ef0:	f2c0 8398 	blt.w	404624 <_svfprintf_r+0xd4c>
  403ef4:	990a      	ldr	r1, [sp, #40]	; 0x28
  403ef6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403efa:	1c4a      	adds	r2, r1, #1
  403efc:	f04f 0301 	mov.w	r3, #1
  403f00:	f47f adf0 	bne.w	403ae4 <_svfprintf_r+0x20c>
  403f04:	ea54 0205 	orrs.w	r2, r4, r5
  403f08:	f000 8229 	beq.w	40435e <_svfprintf_r+0xa86>
  403f0c:	f8cd b01c 	str.w	fp, [sp, #28]
  403f10:	2b01      	cmp	r3, #1
  403f12:	f000 830e 	beq.w	404532 <_svfprintf_r+0xc5a>
  403f16:	2b02      	cmp	r3, #2
  403f18:	f040 829c 	bne.w	404454 <_svfprintf_r+0xb7c>
  403f1c:	464e      	mov	r6, r9
  403f1e:	9818      	ldr	r0, [sp, #96]	; 0x60
  403f20:	0923      	lsrs	r3, r4, #4
  403f22:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  403f26:	0929      	lsrs	r1, r5, #4
  403f28:	f004 020f 	and.w	r2, r4, #15
  403f2c:	460d      	mov	r5, r1
  403f2e:	461c      	mov	r4, r3
  403f30:	5c83      	ldrb	r3, [r0, r2]
  403f32:	f806 3d01 	strb.w	r3, [r6, #-1]!
  403f36:	ea54 0305 	orrs.w	r3, r4, r5
  403f3a:	d1f1      	bne.n	403f20 <_svfprintf_r+0x648>
  403f3c:	eba9 0306 	sub.w	r3, r9, r6
  403f40:	930e      	str	r3, [sp, #56]	; 0x38
  403f42:	e5e5      	b.n	403b10 <_svfprintf_r+0x238>
  403f44:	9311      	str	r3, [sp, #68]	; 0x44
  403f46:	2a00      	cmp	r2, #0
  403f48:	f040 8738 	bne.w	404dbc <_svfprintf_r+0x14e4>
  403f4c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403f4e:	f01b 0f08 	tst.w	fp, #8
  403f52:	f104 0407 	add.w	r4, r4, #7
  403f56:	f000 84cf 	beq.w	4048f8 <_svfprintf_r+0x1020>
  403f5a:	f024 0307 	bic.w	r3, r4, #7
  403f5e:	f103 0208 	add.w	r2, r3, #8
  403f62:	920f      	str	r2, [sp, #60]	; 0x3c
  403f64:	681a      	ldr	r2, [r3, #0]
  403f66:	685b      	ldr	r3, [r3, #4]
  403f68:	9215      	str	r2, [sp, #84]	; 0x54
  403f6a:	9314      	str	r3, [sp, #80]	; 0x50
  403f6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403f6e:	9d15      	ldr	r5, [sp, #84]	; 0x54
  403f70:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  403f74:	4628      	mov	r0, r5
  403f76:	4621      	mov	r1, r4
  403f78:	f04f 32ff 	mov.w	r2, #4294967295
  403f7c:	4b6f      	ldr	r3, [pc, #444]	; (40413c <_svfprintf_r+0x864>)
  403f7e:	f003 fdf7 	bl	407b70 <__aeabi_dcmpun>
  403f82:	2800      	cmp	r0, #0
  403f84:	f040 8434 	bne.w	4047f0 <_svfprintf_r+0xf18>
  403f88:	4628      	mov	r0, r5
  403f8a:	4621      	mov	r1, r4
  403f8c:	f04f 32ff 	mov.w	r2, #4294967295
  403f90:	4b6a      	ldr	r3, [pc, #424]	; (40413c <_svfprintf_r+0x864>)
  403f92:	f003 fdcf 	bl	407b34 <__aeabi_dcmple>
  403f96:	2800      	cmp	r0, #0
  403f98:	f040 842a 	bne.w	4047f0 <_svfprintf_r+0xf18>
  403f9c:	a815      	add	r0, sp, #84	; 0x54
  403f9e:	c80d      	ldmia	r0, {r0, r2, r3}
  403fa0:	9914      	ldr	r1, [sp, #80]	; 0x50
  403fa2:	f003 fdbd 	bl	407b20 <__aeabi_dcmplt>
  403fa6:	2800      	cmp	r0, #0
  403fa8:	f040 85d4 	bne.w	404b54 <_svfprintf_r+0x127c>
  403fac:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403fb0:	2303      	movs	r3, #3
  403fb2:	461a      	mov	r2, r3
  403fb4:	9308      	str	r3, [sp, #32]
  403fb6:	2300      	movs	r3, #0
  403fb8:	4e61      	ldr	r6, [pc, #388]	; (404140 <_svfprintf_r+0x868>)
  403fba:	4619      	mov	r1, r3
  403fbc:	930a      	str	r3, [sp, #40]	; 0x28
  403fbe:	4b61      	ldr	r3, [pc, #388]	; (404144 <_svfprintf_r+0x86c>)
  403fc0:	920e      	str	r2, [sp, #56]	; 0x38
  403fc2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403fc4:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  403fc8:	9007      	str	r0, [sp, #28]
  403fca:	9112      	str	r1, [sp, #72]	; 0x48
  403fcc:	2a47      	cmp	r2, #71	; 0x47
  403fce:	bfd8      	it	le
  403fd0:	461e      	movle	r6, r3
  403fd2:	e5a5      	b.n	403b20 <_svfprintf_r+0x248>
  403fd4:	f04b 0b08 	orr.w	fp, fp, #8
  403fd8:	f89a 3000 	ldrb.w	r3, [sl]
  403fdc:	e4d6      	b.n	40398c <_svfprintf_r+0xb4>
  403fde:	f04b 0b10 	orr.w	fp, fp, #16
  403fe2:	9311      	str	r3, [sp, #68]	; 0x44
  403fe4:	f01b 0320 	ands.w	r3, fp, #32
  403fe8:	f43f aebb 	beq.w	403d62 <_svfprintf_r+0x48a>
  403fec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403fee:	3407      	adds	r4, #7
  403ff0:	f024 0307 	bic.w	r3, r4, #7
  403ff4:	f103 0208 	add.w	r2, r3, #8
  403ff8:	e9d3 4500 	ldrd	r4, r5, [r3]
  403ffc:	920f      	str	r2, [sp, #60]	; 0x3c
  403ffe:	2300      	movs	r3, #0
  404000:	e568      	b.n	403ad4 <_svfprintf_r+0x1fc>
  404002:	9311      	str	r3, [sp, #68]	; 0x44
  404004:	2a00      	cmp	r2, #0
  404006:	f040 86c2 	bne.w	404d8e <_svfprintf_r+0x14b6>
  40400a:	4b4f      	ldr	r3, [pc, #316]	; (404148 <_svfprintf_r+0x870>)
  40400c:	f01b 0f20 	tst.w	fp, #32
  404010:	9318      	str	r3, [sp, #96]	; 0x60
  404012:	f43f af19 	beq.w	403e48 <_svfprintf_r+0x570>
  404016:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  404018:	f01b 0f01 	tst.w	fp, #1
  40401c:	f104 0407 	add.w	r4, r4, #7
  404020:	f024 0307 	bic.w	r3, r4, #7
  404024:	f103 0208 	add.w	r2, r3, #8
  404028:	920f      	str	r2, [sp, #60]	; 0x3c
  40402a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40402e:	f47f af1d 	bne.w	403e6c <_svfprintf_r+0x594>
  404032:	2302      	movs	r3, #2
  404034:	e54e      	b.n	403ad4 <_svfprintf_r+0x1fc>
  404036:	f89a 3000 	ldrb.w	r3, [sl]
  40403a:	2900      	cmp	r1, #0
  40403c:	f47f aca6 	bne.w	40398c <_svfprintf_r+0xb4>
  404040:	2201      	movs	r2, #1
  404042:	2120      	movs	r1, #32
  404044:	e4a2      	b.n	40398c <_svfprintf_r+0xb4>
  404046:	f04b 0b01 	orr.w	fp, fp, #1
  40404a:	f89a 3000 	ldrb.w	r3, [sl]
  40404e:	e49d      	b.n	40398c <_svfprintf_r+0xb4>
  404050:	f89a 3000 	ldrb.w	r3, [sl]
  404054:	2201      	movs	r2, #1
  404056:	212b      	movs	r1, #43	; 0x2b
  404058:	e498      	b.n	40398c <_svfprintf_r+0xb4>
  40405a:	f04b 0b20 	orr.w	fp, fp, #32
  40405e:	f89a 3000 	ldrb.w	r3, [sl]
  404062:	e493      	b.n	40398c <_svfprintf_r+0xb4>
  404064:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  404068:	f89a 3000 	ldrb.w	r3, [sl]
  40406c:	e48e      	b.n	40398c <_svfprintf_r+0xb4>
  40406e:	f89a 3000 	ldrb.w	r3, [sl]
  404072:	2b6c      	cmp	r3, #108	; 0x6c
  404074:	bf03      	ittte	eq
  404076:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40407a:	f04b 0b20 	orreq.w	fp, fp, #32
  40407e:	f10a 0a01 	addeq.w	sl, sl, #1
  404082:	f04b 0b10 	orrne.w	fp, fp, #16
  404086:	e481      	b.n	40398c <_svfprintf_r+0xb4>
  404088:	2a00      	cmp	r2, #0
  40408a:	f040 867c 	bne.w	404d86 <_svfprintf_r+0x14ae>
  40408e:	f01b 0f20 	tst.w	fp, #32
  404092:	f040 8452 	bne.w	40493a <_svfprintf_r+0x1062>
  404096:	f01b 0f10 	tst.w	fp, #16
  40409a:	f040 8438 	bne.w	40490e <_svfprintf_r+0x1036>
  40409e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4040a2:	f000 8434 	beq.w	40490e <_svfprintf_r+0x1036>
  4040a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4040a8:	6813      	ldr	r3, [r2, #0]
  4040aa:	3204      	adds	r2, #4
  4040ac:	920f      	str	r2, [sp, #60]	; 0x3c
  4040ae:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4040b2:	801a      	strh	r2, [r3, #0]
  4040b4:	e437      	b.n	403926 <_svfprintf_r+0x4e>
  4040b6:	2378      	movs	r3, #120	; 0x78
  4040b8:	2230      	movs	r2, #48	; 0x30
  4040ba:	980f      	ldr	r0, [sp, #60]	; 0x3c
  4040bc:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4040c0:	9311      	str	r3, [sp, #68]	; 0x44
  4040c2:	1d03      	adds	r3, r0, #4
  4040c4:	930f      	str	r3, [sp, #60]	; 0x3c
  4040c6:	4b20      	ldr	r3, [pc, #128]	; (404148 <_svfprintf_r+0x870>)
  4040c8:	6804      	ldr	r4, [r0, #0]
  4040ca:	9318      	str	r3, [sp, #96]	; 0x60
  4040cc:	f04b 0b02 	orr.w	fp, fp, #2
  4040d0:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4040d4:	2500      	movs	r5, #0
  4040d6:	2302      	movs	r3, #2
  4040d8:	e4fc      	b.n	403ad4 <_svfprintf_r+0x1fc>
  4040da:	9311      	str	r3, [sp, #68]	; 0x44
  4040dc:	2a00      	cmp	r2, #0
  4040de:	f43f aeef 	beq.w	403ec0 <_svfprintf_r+0x5e8>
  4040e2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4040e6:	e6eb      	b.n	403ec0 <_svfprintf_r+0x5e8>
  4040e8:	2000      	movs	r0, #0
  4040ea:	4604      	mov	r4, r0
  4040ec:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4040f0:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4040f4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4040f8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4040fc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404100:	2809      	cmp	r0, #9
  404102:	d9f5      	bls.n	4040f0 <_svfprintf_r+0x818>
  404104:	940d      	str	r4, [sp, #52]	; 0x34
  404106:	e443      	b.n	403990 <_svfprintf_r+0xb8>
  404108:	9311      	str	r3, [sp, #68]	; 0x44
  40410a:	2a00      	cmp	r2, #0
  40410c:	f040 864a 	bne.w	404da4 <_svfprintf_r+0x14cc>
  404110:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404112:	2a00      	cmp	r2, #0
  404114:	f43f acb6 	beq.w	403a84 <_svfprintf_r+0x1ac>
  404118:	2300      	movs	r3, #0
  40411a:	2101      	movs	r1, #1
  40411c:	461f      	mov	r7, r3
  40411e:	9108      	str	r1, [sp, #32]
  404120:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  404124:	f8cd b01c 	str.w	fp, [sp, #28]
  404128:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40412c:	930a      	str	r3, [sp, #40]	; 0x28
  40412e:	9312      	str	r3, [sp, #72]	; 0x48
  404130:	910e      	str	r1, [sp, #56]	; 0x38
  404132:	ae28      	add	r6, sp, #160	; 0xa0
  404134:	e4f8      	b.n	403b28 <_svfprintf_r+0x250>
  404136:	bf00      	nop
  404138:	00408060 	.word	0x00408060
  40413c:	7fefffff 	.word	0x7fefffff
  404140:	00408054 	.word	0x00408054
  404144:	00408050 	.word	0x00408050
  404148:	00408074 	.word	0x00408074
  40414c:	aa25      	add	r2, sp, #148	; 0x94
  40414e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404150:	980c      	ldr	r0, [sp, #48]	; 0x30
  404152:	f002 ff9f 	bl	407094 <__ssprint_r>
  404156:	2800      	cmp	r0, #0
  404158:	f47f ac9b 	bne.w	403a92 <_svfprintf_r+0x1ba>
  40415c:	46c8      	mov	r8, r9
  40415e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404162:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404164:	e533      	b.n	403bce <_svfprintf_r+0x2f6>
  404166:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404168:	2b65      	cmp	r3, #101	; 0x65
  40416a:	f340 809a 	ble.w	4042a2 <_svfprintf_r+0x9ca>
  40416e:	a815      	add	r0, sp, #84	; 0x54
  404170:	c80d      	ldmia	r0, {r0, r2, r3}
  404172:	9914      	ldr	r1, [sp, #80]	; 0x50
  404174:	f003 fcca 	bl	407b0c <__aeabi_dcmpeq>
  404178:	2800      	cmp	r0, #0
  40417a:	f000 8193 	beq.w	4044a4 <_svfprintf_r+0xbcc>
  40417e:	2101      	movs	r1, #1
  404180:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404182:	4ab5      	ldr	r2, [pc, #724]	; (404458 <_svfprintf_r+0xb80>)
  404184:	440b      	add	r3, r1
  404186:	440c      	add	r4, r1
  404188:	2b07      	cmp	r3, #7
  40418a:	9427      	str	r4, [sp, #156]	; 0x9c
  40418c:	9326      	str	r3, [sp, #152]	; 0x98
  40418e:	f8c8 1004 	str.w	r1, [r8, #4]
  404192:	f8c8 2000 	str.w	r2, [r8]
  404196:	f300 83c6 	bgt.w	404926 <_svfprintf_r+0x104e>
  40419a:	f108 0808 	add.w	r8, r8, #8
  40419e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4041a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4041a2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4041a4:	4293      	cmp	r3, r2
  4041a6:	db03      	blt.n	4041b0 <_svfprintf_r+0x8d8>
  4041a8:	9b07      	ldr	r3, [sp, #28]
  4041aa:	07dd      	lsls	r5, r3, #31
  4041ac:	f57f ad86 	bpl.w	403cbc <_svfprintf_r+0x3e4>
  4041b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4041b2:	9919      	ldr	r1, [sp, #100]	; 0x64
  4041b4:	3301      	adds	r3, #1
  4041b6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4041b8:	440c      	add	r4, r1
  4041ba:	2b07      	cmp	r3, #7
  4041bc:	f8c8 2000 	str.w	r2, [r8]
  4041c0:	f8c8 1004 	str.w	r1, [r8, #4]
  4041c4:	9427      	str	r4, [sp, #156]	; 0x9c
  4041c6:	9326      	str	r3, [sp, #152]	; 0x98
  4041c8:	f300 83c4 	bgt.w	404954 <_svfprintf_r+0x107c>
  4041cc:	f108 0808 	add.w	r8, r8, #8
  4041d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4041d2:	1e5e      	subs	r6, r3, #1
  4041d4:	2e00      	cmp	r6, #0
  4041d6:	f77f ad71 	ble.w	403cbc <_svfprintf_r+0x3e4>
  4041da:	2e10      	cmp	r6, #16
  4041dc:	f340 8575 	ble.w	404cca <_svfprintf_r+0x13f2>
  4041e0:	4622      	mov	r2, r4
  4041e2:	2710      	movs	r7, #16
  4041e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4041e6:	4d9d      	ldr	r5, [pc, #628]	; (40445c <_svfprintf_r+0xb84>)
  4041e8:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4041ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4041ee:	e005      	b.n	4041fc <_svfprintf_r+0x924>
  4041f0:	f108 0808 	add.w	r8, r8, #8
  4041f4:	3e10      	subs	r6, #16
  4041f6:	2e10      	cmp	r6, #16
  4041f8:	f340 8225 	ble.w	404646 <_svfprintf_r+0xd6e>
  4041fc:	3301      	adds	r3, #1
  4041fe:	3210      	adds	r2, #16
  404200:	2b07      	cmp	r3, #7
  404202:	9227      	str	r2, [sp, #156]	; 0x9c
  404204:	9326      	str	r3, [sp, #152]	; 0x98
  404206:	e888 00a0 	stmia.w	r8, {r5, r7}
  40420a:	ddf1      	ble.n	4041f0 <_svfprintf_r+0x918>
  40420c:	aa25      	add	r2, sp, #148	; 0x94
  40420e:	4621      	mov	r1, r4
  404210:	4658      	mov	r0, fp
  404212:	f002 ff3f 	bl	407094 <__ssprint_r>
  404216:	2800      	cmp	r0, #0
  404218:	f47f ac3b 	bne.w	403a92 <_svfprintf_r+0x1ba>
  40421c:	46c8      	mov	r8, r9
  40421e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404220:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404222:	e7e7      	b.n	4041f4 <_svfprintf_r+0x91c>
  404224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404226:	9a08      	ldr	r2, [sp, #32]
  404228:	1a9f      	subs	r7, r3, r2
  40422a:	2f00      	cmp	r7, #0
  40422c:	f77f acf6 	ble.w	403c1c <_svfprintf_r+0x344>
  404230:	2f10      	cmp	r7, #16
  404232:	f340 84a8 	ble.w	404b86 <_svfprintf_r+0x12ae>
  404236:	4d89      	ldr	r5, [pc, #548]	; (40445c <_svfprintf_r+0xb84>)
  404238:	4642      	mov	r2, r8
  40423a:	4621      	mov	r1, r4
  40423c:	46b0      	mov	r8, r6
  40423e:	f04f 0b10 	mov.w	fp, #16
  404242:	462e      	mov	r6, r5
  404244:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404246:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404248:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40424a:	e004      	b.n	404256 <_svfprintf_r+0x97e>
  40424c:	3f10      	subs	r7, #16
  40424e:	2f10      	cmp	r7, #16
  404250:	f102 0208 	add.w	r2, r2, #8
  404254:	dd15      	ble.n	404282 <_svfprintf_r+0x9aa>
  404256:	3301      	adds	r3, #1
  404258:	3110      	adds	r1, #16
  40425a:	2b07      	cmp	r3, #7
  40425c:	9127      	str	r1, [sp, #156]	; 0x9c
  40425e:	9326      	str	r3, [sp, #152]	; 0x98
  404260:	e882 0840 	stmia.w	r2, {r6, fp}
  404264:	ddf2      	ble.n	40424c <_svfprintf_r+0x974>
  404266:	aa25      	add	r2, sp, #148	; 0x94
  404268:	4629      	mov	r1, r5
  40426a:	4620      	mov	r0, r4
  40426c:	f002 ff12 	bl	407094 <__ssprint_r>
  404270:	2800      	cmp	r0, #0
  404272:	f47f ac0e 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404276:	3f10      	subs	r7, #16
  404278:	2f10      	cmp	r7, #16
  40427a:	464a      	mov	r2, r9
  40427c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40427e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404280:	dce9      	bgt.n	404256 <_svfprintf_r+0x97e>
  404282:	4635      	mov	r5, r6
  404284:	460c      	mov	r4, r1
  404286:	4646      	mov	r6, r8
  404288:	4690      	mov	r8, r2
  40428a:	3301      	adds	r3, #1
  40428c:	443c      	add	r4, r7
  40428e:	2b07      	cmp	r3, #7
  404290:	9427      	str	r4, [sp, #156]	; 0x9c
  404292:	9326      	str	r3, [sp, #152]	; 0x98
  404294:	e888 00a0 	stmia.w	r8, {r5, r7}
  404298:	f300 829e 	bgt.w	4047d8 <_svfprintf_r+0xf00>
  40429c:	f108 0808 	add.w	r8, r8, #8
  4042a0:	e4bc      	b.n	403c1c <_svfprintf_r+0x344>
  4042a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4042a4:	2b01      	cmp	r3, #1
  4042a6:	f340 824f 	ble.w	404748 <_svfprintf_r+0xe70>
  4042aa:	2301      	movs	r3, #1
  4042ac:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4042ae:	441c      	add	r4, r3
  4042b0:	441f      	add	r7, r3
  4042b2:	2f07      	cmp	r7, #7
  4042b4:	9427      	str	r4, [sp, #156]	; 0x9c
  4042b6:	f8c8 6000 	str.w	r6, [r8]
  4042ba:	9726      	str	r7, [sp, #152]	; 0x98
  4042bc:	f8c8 3004 	str.w	r3, [r8, #4]
  4042c0:	f300 825f 	bgt.w	404782 <_svfprintf_r+0xeaa>
  4042c4:	f108 0808 	add.w	r8, r8, #8
  4042c8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4042ca:	3701      	adds	r7, #1
  4042cc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4042ce:	4414      	add	r4, r2
  4042d0:	2f07      	cmp	r7, #7
  4042d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4042d4:	9726      	str	r7, [sp, #152]	; 0x98
  4042d6:	f8c8 3000 	str.w	r3, [r8]
  4042da:	f8c8 2004 	str.w	r2, [r8, #4]
  4042de:	f300 825c 	bgt.w	40479a <_svfprintf_r+0xec2>
  4042e2:	f108 0808 	add.w	r8, r8, #8
  4042e6:	a815      	add	r0, sp, #84	; 0x54
  4042e8:	c80d      	ldmia	r0, {r0, r2, r3}
  4042ea:	9914      	ldr	r1, [sp, #80]	; 0x50
  4042ec:	f003 fc0e 	bl	407b0c <__aeabi_dcmpeq>
  4042f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4042f2:	2800      	cmp	r0, #0
  4042f4:	f040 8141 	bne.w	40457a <_svfprintf_r+0xca2>
  4042f8:	3b01      	subs	r3, #1
  4042fa:	3701      	adds	r7, #1
  4042fc:	3601      	adds	r6, #1
  4042fe:	441c      	add	r4, r3
  404300:	2f07      	cmp	r7, #7
  404302:	f8c8 6000 	str.w	r6, [r8]
  404306:	9726      	str	r7, [sp, #152]	; 0x98
  404308:	9427      	str	r4, [sp, #156]	; 0x9c
  40430a:	f8c8 3004 	str.w	r3, [r8, #4]
  40430e:	f300 8166 	bgt.w	4045de <_svfprintf_r+0xd06>
  404312:	f108 0808 	add.w	r8, r8, #8
  404316:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  404318:	3701      	adds	r7, #1
  40431a:	4414      	add	r4, r2
  40431c:	ab21      	add	r3, sp, #132	; 0x84
  40431e:	2f07      	cmp	r7, #7
  404320:	9427      	str	r4, [sp, #156]	; 0x9c
  404322:	9726      	str	r7, [sp, #152]	; 0x98
  404324:	f8c8 2004 	str.w	r2, [r8, #4]
  404328:	f8c8 3000 	str.w	r3, [r8]
  40432c:	f77f acc4 	ble.w	403cb8 <_svfprintf_r+0x3e0>
  404330:	aa25      	add	r2, sp, #148	; 0x94
  404332:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404334:	980c      	ldr	r0, [sp, #48]	; 0x30
  404336:	f002 fead 	bl	407094 <__ssprint_r>
  40433a:	2800      	cmp	r0, #0
  40433c:	f47f aba9 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404340:	46c8      	mov	r8, r9
  404342:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404344:	e4ba      	b.n	403cbc <_svfprintf_r+0x3e4>
  404346:	aa25      	add	r2, sp, #148	; 0x94
  404348:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40434a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40434c:	f002 fea2 	bl	407094 <__ssprint_r>
  404350:	2800      	cmp	r0, #0
  404352:	f43f acfd 	beq.w	403d50 <_svfprintf_r+0x478>
  404356:	f7ff bb9c 	b.w	403a92 <_svfprintf_r+0x1ba>
  40435a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40435e:	2b01      	cmp	r3, #1
  404360:	f000 817e 	beq.w	404660 <_svfprintf_r+0xd88>
  404364:	2b02      	cmp	r3, #2
  404366:	d171      	bne.n	40444c <_svfprintf_r+0xb74>
  404368:	f8cd b01c 	str.w	fp, [sp, #28]
  40436c:	2400      	movs	r4, #0
  40436e:	2500      	movs	r5, #0
  404370:	e5d4      	b.n	403f1c <_svfprintf_r+0x644>
  404372:	aa25      	add	r2, sp, #148	; 0x94
  404374:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404376:	980c      	ldr	r0, [sp, #48]	; 0x30
  404378:	f002 fe8c 	bl	407094 <__ssprint_r>
  40437c:	2800      	cmp	r0, #0
  40437e:	f47f ab88 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404382:	46c8      	mov	r8, r9
  404384:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404386:	e486      	b.n	403c96 <_svfprintf_r+0x3be>
  404388:	aa25      	add	r2, sp, #148	; 0x94
  40438a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40438c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40438e:	f002 fe81 	bl	407094 <__ssprint_r>
  404392:	2800      	cmp	r0, #0
  404394:	f47f ab7d 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404398:	46c8      	mov	r8, r9
  40439a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40439c:	e429      	b.n	403bf2 <_svfprintf_r+0x31a>
  40439e:	2001      	movs	r0, #1
  4043a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4043a2:	4a2d      	ldr	r2, [pc, #180]	; (404458 <_svfprintf_r+0xb80>)
  4043a4:	4403      	add	r3, r0
  4043a6:	4404      	add	r4, r0
  4043a8:	2b07      	cmp	r3, #7
  4043aa:	9427      	str	r4, [sp, #156]	; 0x9c
  4043ac:	9326      	str	r3, [sp, #152]	; 0x98
  4043ae:	f8c8 0004 	str.w	r0, [r8, #4]
  4043b2:	f8c8 2000 	str.w	r2, [r8]
  4043b6:	f340 82d8 	ble.w	40496a <_svfprintf_r+0x1092>
  4043ba:	aa25      	add	r2, sp, #148	; 0x94
  4043bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4043be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4043c0:	f002 fe68 	bl	407094 <__ssprint_r>
  4043c4:	2800      	cmp	r0, #0
  4043c6:	f47f ab64 	bne.w	403a92 <_svfprintf_r+0x1ba>
  4043ca:	46c8      	mov	r8, r9
  4043cc:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4043ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4043d0:	b929      	cbnz	r1, 4043de <_svfprintf_r+0xb06>
  4043d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4043d4:	b91b      	cbnz	r3, 4043de <_svfprintf_r+0xb06>
  4043d6:	9b07      	ldr	r3, [sp, #28]
  4043d8:	07d8      	lsls	r0, r3, #31
  4043da:	f57f ac6f 	bpl.w	403cbc <_svfprintf_r+0x3e4>
  4043de:	9819      	ldr	r0, [sp, #100]	; 0x64
  4043e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4043e2:	4602      	mov	r2, r0
  4043e4:	3301      	adds	r3, #1
  4043e6:	4422      	add	r2, r4
  4043e8:	9c1a      	ldr	r4, [sp, #104]	; 0x68
  4043ea:	2b07      	cmp	r3, #7
  4043ec:	9227      	str	r2, [sp, #156]	; 0x9c
  4043ee:	f8c8 4000 	str.w	r4, [r8]
  4043f2:	f8c8 0004 	str.w	r0, [r8, #4]
  4043f6:	9326      	str	r3, [sp, #152]	; 0x98
  4043f8:	f300 8431 	bgt.w	404c5e <_svfprintf_r+0x1386>
  4043fc:	f108 0808 	add.w	r8, r8, #8
  404400:	2900      	cmp	r1, #0
  404402:	f2c0 8409 	blt.w	404c18 <_svfprintf_r+0x1340>
  404406:	9913      	ldr	r1, [sp, #76]	; 0x4c
  404408:	3301      	adds	r3, #1
  40440a:	188c      	adds	r4, r1, r2
  40440c:	2b07      	cmp	r3, #7
  40440e:	9427      	str	r4, [sp, #156]	; 0x9c
  404410:	9326      	str	r3, [sp, #152]	; 0x98
  404412:	f8c8 6000 	str.w	r6, [r8]
  404416:	f8c8 1004 	str.w	r1, [r8, #4]
  40441a:	f77f ac4d 	ble.w	403cb8 <_svfprintf_r+0x3e0>
  40441e:	aa25      	add	r2, sp, #148	; 0x94
  404420:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404422:	980c      	ldr	r0, [sp, #48]	; 0x30
  404424:	f002 fe36 	bl	407094 <__ssprint_r>
  404428:	2800      	cmp	r0, #0
  40442a:	f47f ab32 	bne.w	403a92 <_svfprintf_r+0x1ba>
  40442e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404430:	46c8      	mov	r8, r9
  404432:	e443      	b.n	403cbc <_svfprintf_r+0x3e4>
  404434:	aa25      	add	r2, sp, #148	; 0x94
  404436:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404438:	980c      	ldr	r0, [sp, #48]	; 0x30
  40443a:	f002 fe2b 	bl	407094 <__ssprint_r>
  40443e:	2800      	cmp	r0, #0
  404440:	f47f ab27 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404444:	46c8      	mov	r8, r9
  404446:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404448:	f7ff bbe5 	b.w	403c16 <_svfprintf_r+0x33e>
  40444c:	2400      	movs	r4, #0
  40444e:	2500      	movs	r5, #0
  404450:	f8cd b01c 	str.w	fp, [sp, #28]
  404454:	4649      	mov	r1, r9
  404456:	e004      	b.n	404462 <_svfprintf_r+0xb8a>
  404458:	00408090 	.word	0x00408090
  40445c:	004080a4 	.word	0x004080a4
  404460:	4631      	mov	r1, r6
  404462:	08e2      	lsrs	r2, r4, #3
  404464:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  404468:	08e8      	lsrs	r0, r5, #3
  40446a:	f004 0307 	and.w	r3, r4, #7
  40446e:	4605      	mov	r5, r0
  404470:	4614      	mov	r4, r2
  404472:	3330      	adds	r3, #48	; 0x30
  404474:	ea54 0205 	orrs.w	r2, r4, r5
  404478:	f801 3c01 	strb.w	r3, [r1, #-1]
  40447c:	f101 36ff 	add.w	r6, r1, #4294967295
  404480:	d1ee      	bne.n	404460 <_svfprintf_r+0xb88>
  404482:	9a07      	ldr	r2, [sp, #28]
  404484:	07d2      	lsls	r2, r2, #31
  404486:	f57f ad59 	bpl.w	403f3c <_svfprintf_r+0x664>
  40448a:	2b30      	cmp	r3, #48	; 0x30
  40448c:	f43f ad56 	beq.w	403f3c <_svfprintf_r+0x664>
  404490:	2330      	movs	r3, #48	; 0x30
  404492:	3902      	subs	r1, #2
  404494:	f806 3c01 	strb.w	r3, [r6, #-1]
  404498:	eba9 0301 	sub.w	r3, r9, r1
  40449c:	930e      	str	r3, [sp, #56]	; 0x38
  40449e:	460e      	mov	r6, r1
  4044a0:	f7ff bb36 	b.w	403b10 <_svfprintf_r+0x238>
  4044a4:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4044a6:	2900      	cmp	r1, #0
  4044a8:	f77f af79 	ble.w	40439e <_svfprintf_r+0xac6>
  4044ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4044ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4044b0:	4293      	cmp	r3, r2
  4044b2:	bfa8      	it	ge
  4044b4:	4613      	movge	r3, r2
  4044b6:	2b00      	cmp	r3, #0
  4044b8:	461f      	mov	r7, r3
  4044ba:	dd0b      	ble.n	4044d4 <_svfprintf_r+0xbfc>
  4044bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4044be:	443c      	add	r4, r7
  4044c0:	3301      	adds	r3, #1
  4044c2:	2b07      	cmp	r3, #7
  4044c4:	9427      	str	r4, [sp, #156]	; 0x9c
  4044c6:	e888 00c0 	stmia.w	r8, {r6, r7}
  4044ca:	9326      	str	r3, [sp, #152]	; 0x98
  4044cc:	f300 82fb 	bgt.w	404ac6 <_svfprintf_r+0x11ee>
  4044d0:	f108 0808 	add.w	r8, r8, #8
  4044d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4044d6:	2f00      	cmp	r7, #0
  4044d8:	bfa8      	it	ge
  4044da:	1bdb      	subge	r3, r3, r7
  4044dc:	2b00      	cmp	r3, #0
  4044de:	461f      	mov	r7, r3
  4044e0:	f340 80d7 	ble.w	404692 <_svfprintf_r+0xdba>
  4044e4:	2b10      	cmp	r3, #16
  4044e6:	f340 8434 	ble.w	404d52 <_svfprintf_r+0x147a>
  4044ea:	4dba      	ldr	r5, [pc, #744]	; (4047d4 <_svfprintf_r+0xefc>)
  4044ec:	4642      	mov	r2, r8
  4044ee:	4621      	mov	r1, r4
  4044f0:	46b0      	mov	r8, r6
  4044f2:	f04f 0b10 	mov.w	fp, #16
  4044f6:	462e      	mov	r6, r5
  4044f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4044fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4044fc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4044fe:	e004      	b.n	40450a <_svfprintf_r+0xc32>
  404500:	3208      	adds	r2, #8
  404502:	3f10      	subs	r7, #16
  404504:	2f10      	cmp	r7, #16
  404506:	f340 80b5 	ble.w	404674 <_svfprintf_r+0xd9c>
  40450a:	3301      	adds	r3, #1
  40450c:	3110      	adds	r1, #16
  40450e:	2b07      	cmp	r3, #7
  404510:	9127      	str	r1, [sp, #156]	; 0x9c
  404512:	9326      	str	r3, [sp, #152]	; 0x98
  404514:	e882 0840 	stmia.w	r2, {r6, fp}
  404518:	ddf2      	ble.n	404500 <_svfprintf_r+0xc28>
  40451a:	aa25      	add	r2, sp, #148	; 0x94
  40451c:	4629      	mov	r1, r5
  40451e:	4620      	mov	r0, r4
  404520:	f002 fdb8 	bl	407094 <__ssprint_r>
  404524:	2800      	cmp	r0, #0
  404526:	f47f aab4 	bne.w	403a92 <_svfprintf_r+0x1ba>
  40452a:	464a      	mov	r2, r9
  40452c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40452e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404530:	e7e7      	b.n	404502 <_svfprintf_r+0xc2a>
  404532:	2d00      	cmp	r5, #0
  404534:	bf08      	it	eq
  404536:	2c0a      	cmpeq	r4, #10
  404538:	f0c0 8090 	bcc.w	40465c <_svfprintf_r+0xd84>
  40453c:	464e      	mov	r6, r9
  40453e:	4620      	mov	r0, r4
  404540:	4629      	mov	r1, r5
  404542:	220a      	movs	r2, #10
  404544:	2300      	movs	r3, #0
  404546:	f003 fb51 	bl	407bec <__aeabi_uldivmod>
  40454a:	3230      	adds	r2, #48	; 0x30
  40454c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  404550:	4620      	mov	r0, r4
  404552:	4629      	mov	r1, r5
  404554:	2300      	movs	r3, #0
  404556:	220a      	movs	r2, #10
  404558:	f003 fb48 	bl	407bec <__aeabi_uldivmod>
  40455c:	4604      	mov	r4, r0
  40455e:	460d      	mov	r5, r1
  404560:	ea54 0305 	orrs.w	r3, r4, r5
  404564:	d1eb      	bne.n	40453e <_svfprintf_r+0xc66>
  404566:	eba9 0306 	sub.w	r3, r9, r6
  40456a:	930e      	str	r3, [sp, #56]	; 0x38
  40456c:	f7ff bad0 	b.w	403b10 <_svfprintf_r+0x238>
  404570:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404572:	464e      	mov	r6, r9
  404574:	930e      	str	r3, [sp, #56]	; 0x38
  404576:	f7ff bacb 	b.w	403b10 <_svfprintf_r+0x238>
  40457a:	1e5e      	subs	r6, r3, #1
  40457c:	2e00      	cmp	r6, #0
  40457e:	f77f aeca 	ble.w	404316 <_svfprintf_r+0xa3e>
  404582:	2e10      	cmp	r6, #16
  404584:	f340 83e3 	ble.w	404d4e <_svfprintf_r+0x1476>
  404588:	4622      	mov	r2, r4
  40458a:	f04f 0b10 	mov.w	fp, #16
  40458e:	4d91      	ldr	r5, [pc, #580]	; (4047d4 <_svfprintf_r+0xefc>)
  404590:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404592:	e004      	b.n	40459e <_svfprintf_r+0xcc6>
  404594:	3e10      	subs	r6, #16
  404596:	2e10      	cmp	r6, #16
  404598:	f108 0808 	add.w	r8, r8, #8
  40459c:	dd15      	ble.n	4045ca <_svfprintf_r+0xcf2>
  40459e:	3701      	adds	r7, #1
  4045a0:	3210      	adds	r2, #16
  4045a2:	2f07      	cmp	r7, #7
  4045a4:	9227      	str	r2, [sp, #156]	; 0x9c
  4045a6:	9726      	str	r7, [sp, #152]	; 0x98
  4045a8:	e888 0820 	stmia.w	r8, {r5, fp}
  4045ac:	ddf2      	ble.n	404594 <_svfprintf_r+0xcbc>
  4045ae:	aa25      	add	r2, sp, #148	; 0x94
  4045b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4045b2:	4620      	mov	r0, r4
  4045b4:	f002 fd6e 	bl	407094 <__ssprint_r>
  4045b8:	2800      	cmp	r0, #0
  4045ba:	f47f aa6a 	bne.w	403a92 <_svfprintf_r+0x1ba>
  4045be:	3e10      	subs	r6, #16
  4045c0:	2e10      	cmp	r6, #16
  4045c2:	46c8      	mov	r8, r9
  4045c4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4045c6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4045c8:	dce9      	bgt.n	40459e <_svfprintf_r+0xcc6>
  4045ca:	4614      	mov	r4, r2
  4045cc:	3701      	adds	r7, #1
  4045ce:	4434      	add	r4, r6
  4045d0:	2f07      	cmp	r7, #7
  4045d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4045d4:	9726      	str	r7, [sp, #152]	; 0x98
  4045d6:	e888 0060 	stmia.w	r8, {r5, r6}
  4045da:	f77f ae9a 	ble.w	404312 <_svfprintf_r+0xa3a>
  4045de:	aa25      	add	r2, sp, #148	; 0x94
  4045e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4045e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4045e4:	f002 fd56 	bl	407094 <__ssprint_r>
  4045e8:	2800      	cmp	r0, #0
  4045ea:	f47f aa52 	bne.w	403a92 <_svfprintf_r+0x1ba>
  4045ee:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4045f0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4045f2:	46c8      	mov	r8, r9
  4045f4:	e68f      	b.n	404316 <_svfprintf_r+0xa3e>
  4045f6:	3204      	adds	r2, #4
  4045f8:	681c      	ldr	r4, [r3, #0]
  4045fa:	2500      	movs	r5, #0
  4045fc:	2301      	movs	r3, #1
  4045fe:	920f      	str	r2, [sp, #60]	; 0x3c
  404600:	f7ff ba68 	b.w	403ad4 <_svfprintf_r+0x1fc>
  404604:	681c      	ldr	r4, [r3, #0]
  404606:	3304      	adds	r3, #4
  404608:	930f      	str	r3, [sp, #60]	; 0x3c
  40460a:	2500      	movs	r5, #0
  40460c:	e42a      	b.n	403e64 <_svfprintf_r+0x58c>
  40460e:	681c      	ldr	r4, [r3, #0]
  404610:	3304      	adds	r3, #4
  404612:	17e5      	asrs	r5, r4, #31
  404614:	4622      	mov	r2, r4
  404616:	930f      	str	r3, [sp, #60]	; 0x3c
  404618:	462b      	mov	r3, r5
  40461a:	2a00      	cmp	r2, #0
  40461c:	f173 0300 	sbcs.w	r3, r3, #0
  404620:	f6bf ac68 	bge.w	403ef4 <_svfprintf_r+0x61c>
  404624:	272d      	movs	r7, #45	; 0x2d
  404626:	4264      	negs	r4, r4
  404628:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40462c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404630:	2301      	movs	r3, #1
  404632:	f7ff ba53 	b.w	403adc <_svfprintf_r+0x204>
  404636:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404638:	2500      	movs	r5, #0
  40463a:	460a      	mov	r2, r1
  40463c:	3204      	adds	r2, #4
  40463e:	680c      	ldr	r4, [r1, #0]
  404640:	920f      	str	r2, [sp, #60]	; 0x3c
  404642:	f7ff ba47 	b.w	403ad4 <_svfprintf_r+0x1fc>
  404646:	4614      	mov	r4, r2
  404648:	3301      	adds	r3, #1
  40464a:	4434      	add	r4, r6
  40464c:	2b07      	cmp	r3, #7
  40464e:	9427      	str	r4, [sp, #156]	; 0x9c
  404650:	9326      	str	r3, [sp, #152]	; 0x98
  404652:	e888 0060 	stmia.w	r8, {r5, r6}
  404656:	f77f ab2f 	ble.w	403cb8 <_svfprintf_r+0x3e0>
  40465a:	e6e0      	b.n	40441e <_svfprintf_r+0xb46>
  40465c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  404660:	2301      	movs	r3, #1
  404662:	ae42      	add	r6, sp, #264	; 0x108
  404664:	3430      	adds	r4, #48	; 0x30
  404666:	f8cd b01c 	str.w	fp, [sp, #28]
  40466a:	f806 4d41 	strb.w	r4, [r6, #-65]!
  40466e:	930e      	str	r3, [sp, #56]	; 0x38
  404670:	f7ff ba4e 	b.w	403b10 <_svfprintf_r+0x238>
  404674:	4635      	mov	r5, r6
  404676:	460c      	mov	r4, r1
  404678:	4646      	mov	r6, r8
  40467a:	4690      	mov	r8, r2
  40467c:	3301      	adds	r3, #1
  40467e:	443c      	add	r4, r7
  404680:	2b07      	cmp	r3, #7
  404682:	9427      	str	r4, [sp, #156]	; 0x9c
  404684:	9326      	str	r3, [sp, #152]	; 0x98
  404686:	e888 00a0 	stmia.w	r8, {r5, r7}
  40468a:	f300 8246 	bgt.w	404b1a <_svfprintf_r+0x1242>
  40468e:	f108 0808 	add.w	r8, r8, #8
  404692:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404694:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404696:	429a      	cmp	r2, r3
  404698:	db45      	blt.n	404726 <_svfprintf_r+0xe4e>
  40469a:	9b07      	ldr	r3, [sp, #28]
  40469c:	07d9      	lsls	r1, r3, #31
  40469e:	d442      	bmi.n	404726 <_svfprintf_r+0xe4e>
  4046a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4046a2:	9812      	ldr	r0, [sp, #72]	; 0x48
  4046a4:	1a9a      	subs	r2, r3, r2
  4046a6:	1a1d      	subs	r5, r3, r0
  4046a8:	4295      	cmp	r5, r2
  4046aa:	bfa8      	it	ge
  4046ac:	4615      	movge	r5, r2
  4046ae:	2d00      	cmp	r5, #0
  4046b0:	dd0e      	ble.n	4046d0 <_svfprintf_r+0xdf8>
  4046b2:	9926      	ldr	r1, [sp, #152]	; 0x98
  4046b4:	4406      	add	r6, r0
  4046b6:	3101      	adds	r1, #1
  4046b8:	442c      	add	r4, r5
  4046ba:	2907      	cmp	r1, #7
  4046bc:	f8c8 6000 	str.w	r6, [r8]
  4046c0:	9427      	str	r4, [sp, #156]	; 0x9c
  4046c2:	f8c8 5004 	str.w	r5, [r8, #4]
  4046c6:	9126      	str	r1, [sp, #152]	; 0x98
  4046c8:	f300 8216 	bgt.w	404af8 <_svfprintf_r+0x1220>
  4046cc:	f108 0808 	add.w	r8, r8, #8
  4046d0:	2d00      	cmp	r5, #0
  4046d2:	bfb4      	ite	lt
  4046d4:	4616      	movlt	r6, r2
  4046d6:	1b56      	subge	r6, r2, r5
  4046d8:	2e00      	cmp	r6, #0
  4046da:	f77f aaef 	ble.w	403cbc <_svfprintf_r+0x3e4>
  4046de:	2e10      	cmp	r6, #16
  4046e0:	f340 82f3 	ble.w	404cca <_svfprintf_r+0x13f2>
  4046e4:	4622      	mov	r2, r4
  4046e6:	2710      	movs	r7, #16
  4046e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4046ea:	4d3a      	ldr	r5, [pc, #232]	; (4047d4 <_svfprintf_r+0xefc>)
  4046ec:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4046f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4046f2:	e004      	b.n	4046fe <_svfprintf_r+0xe26>
  4046f4:	f108 0808 	add.w	r8, r8, #8
  4046f8:	3e10      	subs	r6, #16
  4046fa:	2e10      	cmp	r6, #16
  4046fc:	dda3      	ble.n	404646 <_svfprintf_r+0xd6e>
  4046fe:	3301      	adds	r3, #1
  404700:	3210      	adds	r2, #16
  404702:	2b07      	cmp	r3, #7
  404704:	9227      	str	r2, [sp, #156]	; 0x9c
  404706:	9326      	str	r3, [sp, #152]	; 0x98
  404708:	e888 00a0 	stmia.w	r8, {r5, r7}
  40470c:	ddf2      	ble.n	4046f4 <_svfprintf_r+0xe1c>
  40470e:	aa25      	add	r2, sp, #148	; 0x94
  404710:	4621      	mov	r1, r4
  404712:	4658      	mov	r0, fp
  404714:	f002 fcbe 	bl	407094 <__ssprint_r>
  404718:	2800      	cmp	r0, #0
  40471a:	f47f a9ba 	bne.w	403a92 <_svfprintf_r+0x1ba>
  40471e:	46c8      	mov	r8, r9
  404720:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404722:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404724:	e7e8      	b.n	4046f8 <_svfprintf_r+0xe20>
  404726:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404728:	9819      	ldr	r0, [sp, #100]	; 0x64
  40472a:	3301      	adds	r3, #1
  40472c:	991a      	ldr	r1, [sp, #104]	; 0x68
  40472e:	4404      	add	r4, r0
  404730:	2b07      	cmp	r3, #7
  404732:	9427      	str	r4, [sp, #156]	; 0x9c
  404734:	f8c8 1000 	str.w	r1, [r8]
  404738:	f8c8 0004 	str.w	r0, [r8, #4]
  40473c:	9326      	str	r3, [sp, #152]	; 0x98
  40473e:	f300 81cf 	bgt.w	404ae0 <_svfprintf_r+0x1208>
  404742:	f108 0808 	add.w	r8, r8, #8
  404746:	e7ab      	b.n	4046a0 <_svfprintf_r+0xdc8>
  404748:	9b07      	ldr	r3, [sp, #28]
  40474a:	07da      	lsls	r2, r3, #31
  40474c:	f53f adad 	bmi.w	4042aa <_svfprintf_r+0x9d2>
  404750:	2301      	movs	r3, #1
  404752:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404754:	441c      	add	r4, r3
  404756:	441f      	add	r7, r3
  404758:	2f07      	cmp	r7, #7
  40475a:	9427      	str	r4, [sp, #156]	; 0x9c
  40475c:	f8c8 6000 	str.w	r6, [r8]
  404760:	9726      	str	r7, [sp, #152]	; 0x98
  404762:	f8c8 3004 	str.w	r3, [r8, #4]
  404766:	f77f add4 	ble.w	404312 <_svfprintf_r+0xa3a>
  40476a:	aa25      	add	r2, sp, #148	; 0x94
  40476c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40476e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404770:	f002 fc90 	bl	407094 <__ssprint_r>
  404774:	2800      	cmp	r0, #0
  404776:	f47f a98c 	bne.w	403a92 <_svfprintf_r+0x1ba>
  40477a:	46c8      	mov	r8, r9
  40477c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40477e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404780:	e5c9      	b.n	404316 <_svfprintf_r+0xa3e>
  404782:	aa25      	add	r2, sp, #148	; 0x94
  404784:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404786:	980c      	ldr	r0, [sp, #48]	; 0x30
  404788:	f002 fc84 	bl	407094 <__ssprint_r>
  40478c:	2800      	cmp	r0, #0
  40478e:	f47f a980 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404792:	46c8      	mov	r8, r9
  404794:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404796:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404798:	e596      	b.n	4042c8 <_svfprintf_r+0x9f0>
  40479a:	aa25      	add	r2, sp, #148	; 0x94
  40479c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40479e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4047a0:	f002 fc78 	bl	407094 <__ssprint_r>
  4047a4:	2800      	cmp	r0, #0
  4047a6:	f47f a974 	bne.w	403a92 <_svfprintf_r+0x1ba>
  4047aa:	46c8      	mov	r8, r9
  4047ac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4047ae:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4047b0:	e599      	b.n	4042e6 <_svfprintf_r+0xa0e>
  4047b2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4047b4:	3407      	adds	r4, #7
  4047b6:	f024 0407 	bic.w	r4, r4, #7
  4047ba:	f104 0108 	add.w	r1, r4, #8
  4047be:	e9d4 2300 	ldrd	r2, r3, [r4]
  4047c2:	910f      	str	r1, [sp, #60]	; 0x3c
  4047c4:	4614      	mov	r4, r2
  4047c6:	461d      	mov	r5, r3
  4047c8:	f7ff bb8f 	b.w	403eea <_svfprintf_r+0x612>
  4047cc:	464e      	mov	r6, r9
  4047ce:	f7ff b99f 	b.w	403b10 <_svfprintf_r+0x238>
  4047d2:	bf00      	nop
  4047d4:	004080a4 	.word	0x004080a4
  4047d8:	aa25      	add	r2, sp, #148	; 0x94
  4047da:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4047dc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4047de:	f002 fc59 	bl	407094 <__ssprint_r>
  4047e2:	2800      	cmp	r0, #0
  4047e4:	f47f a955 	bne.w	403a92 <_svfprintf_r+0x1ba>
  4047e8:	46c8      	mov	r8, r9
  4047ea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4047ec:	f7ff ba16 	b.w	403c1c <_svfprintf_r+0x344>
  4047f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4047f2:	4622      	mov	r2, r4
  4047f4:	4620      	mov	r0, r4
  4047f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4047f8:	4623      	mov	r3, r4
  4047fa:	4621      	mov	r1, r4
  4047fc:	f003 f9b8 	bl	407b70 <__aeabi_dcmpun>
  404800:	2800      	cmp	r0, #0
  404802:	f040 8273 	bne.w	404cec <_svfprintf_r+0x1414>
  404806:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404808:	3301      	adds	r3, #1
  40480a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40480c:	f023 0320 	bic.w	r3, r3, #32
  404810:	930e      	str	r3, [sp, #56]	; 0x38
  404812:	f000 819c 	beq.w	404b4e <_svfprintf_r+0x1276>
  404816:	2b47      	cmp	r3, #71	; 0x47
  404818:	f000 80d6 	beq.w	4049c8 <_svfprintf_r+0x10f0>
  40481c:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  404820:	9307      	str	r3, [sp, #28]
  404822:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404824:	1e1f      	subs	r7, r3, #0
  404826:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404828:	9308      	str	r3, [sp, #32]
  40482a:	bfb7      	itett	lt
  40482c:	463b      	movlt	r3, r7
  40482e:	2300      	movge	r3, #0
  404830:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  404834:	232d      	movlt	r3, #45	; 0x2d
  404836:	9310      	str	r3, [sp, #64]	; 0x40
  404838:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40483a:	2b66      	cmp	r3, #102	; 0x66
  40483c:	f000 8190 	beq.w	404b60 <_svfprintf_r+0x1288>
  404840:	2b46      	cmp	r3, #70	; 0x46
  404842:	f000 80a4 	beq.w	40498e <_svfprintf_r+0x10b6>
  404846:	2002      	movs	r0, #2
  404848:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40484a:	a923      	add	r1, sp, #140	; 0x8c
  40484c:	2b45      	cmp	r3, #69	; 0x45
  40484e:	bf0a      	itet	eq
  404850:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  404852:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  404854:	1c5d      	addeq	r5, r3, #1
  404856:	e88d 0021 	stmia.w	sp, {r0, r5}
  40485a:	9104      	str	r1, [sp, #16]
  40485c:	a820      	add	r0, sp, #128	; 0x80
  40485e:	a91f      	add	r1, sp, #124	; 0x7c
  404860:	463b      	mov	r3, r7
  404862:	9003      	str	r0, [sp, #12]
  404864:	9a08      	ldr	r2, [sp, #32]
  404866:	9102      	str	r1, [sp, #8]
  404868:	980c      	ldr	r0, [sp, #48]	; 0x30
  40486a:	f000 fb59 	bl	404f20 <_dtoa_r>
  40486e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404870:	4606      	mov	r6, r0
  404872:	2b67      	cmp	r3, #103	; 0x67
  404874:	f040 81ba 	bne.w	404bec <_svfprintf_r+0x1314>
  404878:	f01b 0f01 	tst.w	fp, #1
  40487c:	f000 8223 	beq.w	404cc6 <_svfprintf_r+0x13ee>
  404880:	1974      	adds	r4, r6, r5
  404882:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404884:	9808      	ldr	r0, [sp, #32]
  404886:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404888:	4639      	mov	r1, r7
  40488a:	f003 f93f 	bl	407b0c <__aeabi_dcmpeq>
  40488e:	2800      	cmp	r0, #0
  404890:	f040 8124 	bne.w	404adc <_svfprintf_r+0x1204>
  404894:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404896:	42a3      	cmp	r3, r4
  404898:	d206      	bcs.n	4048a8 <_svfprintf_r+0xfd0>
  40489a:	2130      	movs	r1, #48	; 0x30
  40489c:	1c5a      	adds	r2, r3, #1
  40489e:	9223      	str	r2, [sp, #140]	; 0x8c
  4048a0:	7019      	strb	r1, [r3, #0]
  4048a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4048a4:	429c      	cmp	r4, r3
  4048a6:	d8f9      	bhi.n	40489c <_svfprintf_r+0xfc4>
  4048a8:	1b9b      	subs	r3, r3, r6
  4048aa:	9313      	str	r3, [sp, #76]	; 0x4c
  4048ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4048ae:	2b47      	cmp	r3, #71	; 0x47
  4048b0:	f000 80a2 	beq.w	4049f8 <_svfprintf_r+0x1120>
  4048b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4048b6:	2b65      	cmp	r3, #101	; 0x65
  4048b8:	f340 81a7 	ble.w	404c0a <_svfprintf_r+0x1332>
  4048bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4048be:	2b66      	cmp	r3, #102	; 0x66
  4048c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4048c2:	9312      	str	r3, [sp, #72]	; 0x48
  4048c4:	f000 8171 	beq.w	404baa <_svfprintf_r+0x12d2>
  4048c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4048ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4048cc:	4619      	mov	r1, r3
  4048ce:	4291      	cmp	r1, r2
  4048d0:	f300 815d 	bgt.w	404b8e <_svfprintf_r+0x12b6>
  4048d4:	f01b 0f01 	tst.w	fp, #1
  4048d8:	f040 81f0 	bne.w	404cbc <_svfprintf_r+0x13e4>
  4048dc:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4048e0:	9308      	str	r3, [sp, #32]
  4048e2:	2367      	movs	r3, #103	; 0x67
  4048e4:	920e      	str	r2, [sp, #56]	; 0x38
  4048e6:	9311      	str	r3, [sp, #68]	; 0x44
  4048e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4048ea:	2b00      	cmp	r3, #0
  4048ec:	d17d      	bne.n	4049ea <_svfprintf_r+0x1112>
  4048ee:	930a      	str	r3, [sp, #40]	; 0x28
  4048f0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4048f4:	f7ff b914 	b.w	403b20 <_svfprintf_r+0x248>
  4048f8:	f024 0407 	bic.w	r4, r4, #7
  4048fc:	6823      	ldr	r3, [r4, #0]
  4048fe:	9315      	str	r3, [sp, #84]	; 0x54
  404900:	6863      	ldr	r3, [r4, #4]
  404902:	9314      	str	r3, [sp, #80]	; 0x50
  404904:	f104 0308 	add.w	r3, r4, #8
  404908:	930f      	str	r3, [sp, #60]	; 0x3c
  40490a:	f7ff bb2f 	b.w	403f6c <_svfprintf_r+0x694>
  40490e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404910:	6813      	ldr	r3, [r2, #0]
  404912:	3204      	adds	r2, #4
  404914:	920f      	str	r2, [sp, #60]	; 0x3c
  404916:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404918:	601a      	str	r2, [r3, #0]
  40491a:	f7ff b804 	b.w	403926 <_svfprintf_r+0x4e>
  40491e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404920:	4daf      	ldr	r5, [pc, #700]	; (404be0 <_svfprintf_r+0x1308>)
  404922:	f7ff b9ad 	b.w	403c80 <_svfprintf_r+0x3a8>
  404926:	aa25      	add	r2, sp, #148	; 0x94
  404928:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40492a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40492c:	f002 fbb2 	bl	407094 <__ssprint_r>
  404930:	2800      	cmp	r0, #0
  404932:	f47f a8ae 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404936:	46c8      	mov	r8, r9
  404938:	e431      	b.n	40419e <_svfprintf_r+0x8c6>
  40493a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40493c:	4613      	mov	r3, r2
  40493e:	3304      	adds	r3, #4
  404940:	930f      	str	r3, [sp, #60]	; 0x3c
  404942:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404944:	6811      	ldr	r1, [r2, #0]
  404946:	17dd      	asrs	r5, r3, #31
  404948:	461a      	mov	r2, r3
  40494a:	462b      	mov	r3, r5
  40494c:	e9c1 2300 	strd	r2, r3, [r1]
  404950:	f7fe bfe9 	b.w	403926 <_svfprintf_r+0x4e>
  404954:	aa25      	add	r2, sp, #148	; 0x94
  404956:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404958:	980c      	ldr	r0, [sp, #48]	; 0x30
  40495a:	f002 fb9b 	bl	407094 <__ssprint_r>
  40495e:	2800      	cmp	r0, #0
  404960:	f47f a897 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404964:	46c8      	mov	r8, r9
  404966:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404968:	e432      	b.n	4041d0 <_svfprintf_r+0x8f8>
  40496a:	f108 0808 	add.w	r8, r8, #8
  40496e:	e52f      	b.n	4043d0 <_svfprintf_r+0xaf8>
  404970:	2140      	movs	r1, #64	; 0x40
  404972:	980c      	ldr	r0, [sp, #48]	; 0x30
  404974:	f001 fb5c 	bl	406030 <_malloc_r>
  404978:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40497a:	6010      	str	r0, [r2, #0]
  40497c:	6110      	str	r0, [r2, #16]
  40497e:	2800      	cmp	r0, #0
  404980:	f000 8214 	beq.w	404dac <_svfprintf_r+0x14d4>
  404984:	2340      	movs	r3, #64	; 0x40
  404986:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404988:	6153      	str	r3, [r2, #20]
  40498a:	f7fe bfbc 	b.w	403906 <_svfprintf_r+0x2e>
  40498e:	2003      	movs	r0, #3
  404990:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  404992:	a923      	add	r1, sp, #140	; 0x8c
  404994:	e88d 0011 	stmia.w	sp, {r0, r4}
  404998:	9104      	str	r1, [sp, #16]
  40499a:	a820      	add	r0, sp, #128	; 0x80
  40499c:	a91f      	add	r1, sp, #124	; 0x7c
  40499e:	9003      	str	r0, [sp, #12]
  4049a0:	9a08      	ldr	r2, [sp, #32]
  4049a2:	463b      	mov	r3, r7
  4049a4:	9102      	str	r1, [sp, #8]
  4049a6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049a8:	f000 faba 	bl	404f20 <_dtoa_r>
  4049ac:	4625      	mov	r5, r4
  4049ae:	4606      	mov	r6, r0
  4049b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4049b2:	1974      	adds	r4, r6, r5
  4049b4:	2b46      	cmp	r3, #70	; 0x46
  4049b6:	f47f af64 	bne.w	404882 <_svfprintf_r+0xfaa>
  4049ba:	7833      	ldrb	r3, [r6, #0]
  4049bc:	2b30      	cmp	r3, #48	; 0x30
  4049be:	f000 8187 	beq.w	404cd0 <_svfprintf_r+0x13f8>
  4049c2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  4049c4:	442c      	add	r4, r5
  4049c6:	e75c      	b.n	404882 <_svfprintf_r+0xfaa>
  4049c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4049ca:	2b00      	cmp	r3, #0
  4049cc:	bf08      	it	eq
  4049ce:	2301      	moveq	r3, #1
  4049d0:	930a      	str	r3, [sp, #40]	; 0x28
  4049d2:	e723      	b.n	40481c <_svfprintf_r+0xf44>
  4049d4:	4630      	mov	r0, r6
  4049d6:	950a      	str	r5, [sp, #40]	; 0x28
  4049d8:	f7fe fea6 	bl	403728 <strlen>
  4049dc:	940f      	str	r4, [sp, #60]	; 0x3c
  4049de:	900e      	str	r0, [sp, #56]	; 0x38
  4049e0:	f8cd b01c 	str.w	fp, [sp, #28]
  4049e4:	4603      	mov	r3, r0
  4049e6:	f7ff b9e7 	b.w	403db8 <_svfprintf_r+0x4e0>
  4049ea:	272d      	movs	r7, #45	; 0x2d
  4049ec:	2300      	movs	r3, #0
  4049ee:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4049f2:	930a      	str	r3, [sp, #40]	; 0x28
  4049f4:	f7ff b895 	b.w	403b22 <_svfprintf_r+0x24a>
  4049f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4049fa:	461a      	mov	r2, r3
  4049fc:	9312      	str	r3, [sp, #72]	; 0x48
  4049fe:	3303      	adds	r3, #3
  404a00:	db04      	blt.n	404a0c <_svfprintf_r+0x1134>
  404a02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404a04:	4619      	mov	r1, r3
  404a06:	4291      	cmp	r1, r2
  404a08:	f6bf af5e 	bge.w	4048c8 <_svfprintf_r+0xff0>
  404a0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404a0e:	3b02      	subs	r3, #2
  404a10:	9311      	str	r3, [sp, #68]	; 0x44
  404a12:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404a14:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  404a18:	3b01      	subs	r3, #1
  404a1a:	2b00      	cmp	r3, #0
  404a1c:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
  404a20:	bfb4      	ite	lt
  404a22:	222d      	movlt	r2, #45	; 0x2d
  404a24:	222b      	movge	r2, #43	; 0x2b
  404a26:	931f      	str	r3, [sp, #124]	; 0x7c
  404a28:	bfb8      	it	lt
  404a2a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  404a2c:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  404a30:	bfb8      	it	lt
  404a32:	f1c3 0301 	rsblt	r3, r3, #1
  404a36:	2b09      	cmp	r3, #9
  404a38:	f340 811f 	ble.w	404c7a <_svfprintf_r+0x13a2>
  404a3c:	f10d 0093 	add.w	r0, sp, #147	; 0x93
  404a40:	4601      	mov	r1, r0
  404a42:	4c68      	ldr	r4, [pc, #416]	; (404be4 <_svfprintf_r+0x130c>)
  404a44:	e000      	b.n	404a48 <_svfprintf_r+0x1170>
  404a46:	4611      	mov	r1, r2
  404a48:	fb84 5203 	smull	r5, r2, r4, r3
  404a4c:	17dd      	asrs	r5, r3, #31
  404a4e:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
  404a52:	eb05 0285 	add.w	r2, r5, r5, lsl #2
  404a56:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  404a5a:	3230      	adds	r2, #48	; 0x30
  404a5c:	2d09      	cmp	r5, #9
  404a5e:	f801 2c01 	strb.w	r2, [r1, #-1]
  404a62:	462b      	mov	r3, r5
  404a64:	f101 32ff 	add.w	r2, r1, #4294967295
  404a68:	dced      	bgt.n	404a46 <_svfprintf_r+0x116e>
  404a6a:	3330      	adds	r3, #48	; 0x30
  404a6c:	3902      	subs	r1, #2
  404a6e:	b2dc      	uxtb	r4, r3
  404a70:	4288      	cmp	r0, r1
  404a72:	f802 4c01 	strb.w	r4, [r2, #-1]
  404a76:	f240 8192 	bls.w	404d9e <_svfprintf_r+0x14c6>
  404a7a:	f10d 0186 	add.w	r1, sp, #134	; 0x86
  404a7e:	4613      	mov	r3, r2
  404a80:	e001      	b.n	404a86 <_svfprintf_r+0x11ae>
  404a82:	f813 4b01 	ldrb.w	r4, [r3], #1
  404a86:	4283      	cmp	r3, r0
  404a88:	f801 4b01 	strb.w	r4, [r1], #1
  404a8c:	d1f9      	bne.n	404a82 <_svfprintf_r+0x11aa>
  404a8e:	3301      	adds	r3, #1
  404a90:	1a9b      	subs	r3, r3, r2
  404a92:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  404a96:	4413      	add	r3, r2
  404a98:	aa21      	add	r2, sp, #132	; 0x84
  404a9a:	1a9b      	subs	r3, r3, r2
  404a9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  404a9e:	931b      	str	r3, [sp, #108]	; 0x6c
  404aa0:	2a01      	cmp	r2, #1
  404aa2:	4413      	add	r3, r2
  404aa4:	930e      	str	r3, [sp, #56]	; 0x38
  404aa6:	f340 8148 	ble.w	404d3a <_svfprintf_r+0x1462>
  404aaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404aac:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404aae:	4413      	add	r3, r2
  404ab0:	930e      	str	r3, [sp, #56]	; 0x38
  404ab2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404ab6:	9308      	str	r3, [sp, #32]
  404ab8:	2300      	movs	r3, #0
  404aba:	9312      	str	r3, [sp, #72]	; 0x48
  404abc:	e714      	b.n	4048e8 <_svfprintf_r+0x1010>
  404abe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404ac0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404ac2:	f7ff b876 	b.w	403bb2 <_svfprintf_r+0x2da>
  404ac6:	aa25      	add	r2, sp, #148	; 0x94
  404ac8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404aca:	980c      	ldr	r0, [sp, #48]	; 0x30
  404acc:	f002 fae2 	bl	407094 <__ssprint_r>
  404ad0:	2800      	cmp	r0, #0
  404ad2:	f47e afde 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404ad6:	46c8      	mov	r8, r9
  404ad8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404ada:	e4fb      	b.n	4044d4 <_svfprintf_r+0xbfc>
  404adc:	4623      	mov	r3, r4
  404ade:	e6e3      	b.n	4048a8 <_svfprintf_r+0xfd0>
  404ae0:	aa25      	add	r2, sp, #148	; 0x94
  404ae2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404ae4:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ae6:	f002 fad5 	bl	407094 <__ssprint_r>
  404aea:	2800      	cmp	r0, #0
  404aec:	f47e afd1 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404af0:	46c8      	mov	r8, r9
  404af2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404af4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404af6:	e5d3      	b.n	4046a0 <_svfprintf_r+0xdc8>
  404af8:	aa25      	add	r2, sp, #148	; 0x94
  404afa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404afc:	980c      	ldr	r0, [sp, #48]	; 0x30
  404afe:	f002 fac9 	bl	407094 <__ssprint_r>
  404b02:	2800      	cmp	r0, #0
  404b04:	f47e afc5 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404b08:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404b0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404b0c:	46c8      	mov	r8, r9
  404b0e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b10:	1a9a      	subs	r2, r3, r2
  404b12:	e5dd      	b.n	4046d0 <_svfprintf_r+0xdf8>
  404b14:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404b16:	f7ff b8fe 	b.w	403d16 <_svfprintf_r+0x43e>
  404b1a:	aa25      	add	r2, sp, #148	; 0x94
  404b1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b1e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b20:	f002 fab8 	bl	407094 <__ssprint_r>
  404b24:	2800      	cmp	r0, #0
  404b26:	f47e afb4 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404b2a:	46c8      	mov	r8, r9
  404b2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b2e:	e5b0      	b.n	404692 <_svfprintf_r+0xdba>
  404b30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404b32:	4637      	mov	r7, r6
  404b34:	2b06      	cmp	r3, #6
  404b36:	bf28      	it	cs
  404b38:	2306      	movcs	r3, #6
  404b3a:	960a      	str	r6, [sp, #40]	; 0x28
  404b3c:	9612      	str	r6, [sp, #72]	; 0x48
  404b3e:	9308      	str	r3, [sp, #32]
  404b40:	940f      	str	r4, [sp, #60]	; 0x3c
  404b42:	f8cd b01c 	str.w	fp, [sp, #28]
  404b46:	930e      	str	r3, [sp, #56]	; 0x38
  404b48:	4e27      	ldr	r6, [pc, #156]	; (404be8 <_svfprintf_r+0x1310>)
  404b4a:	f7fe bfe9 	b.w	403b20 <_svfprintf_r+0x248>
  404b4e:	2306      	movs	r3, #6
  404b50:	930a      	str	r3, [sp, #40]	; 0x28
  404b52:	e663      	b.n	40481c <_svfprintf_r+0xf44>
  404b54:	232d      	movs	r3, #45	; 0x2d
  404b56:	461f      	mov	r7, r3
  404b58:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  404b5c:	f7ff ba28 	b.w	403fb0 <_svfprintf_r+0x6d8>
  404b60:	2003      	movs	r0, #3
  404b62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  404b64:	a923      	add	r1, sp, #140	; 0x8c
  404b66:	e88d 0011 	stmia.w	sp, {r0, r4}
  404b6a:	9104      	str	r1, [sp, #16]
  404b6c:	a820      	add	r0, sp, #128	; 0x80
  404b6e:	a91f      	add	r1, sp, #124	; 0x7c
  404b70:	9003      	str	r0, [sp, #12]
  404b72:	9a08      	ldr	r2, [sp, #32]
  404b74:	463b      	mov	r3, r7
  404b76:	9102      	str	r1, [sp, #8]
  404b78:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b7a:	f000 f9d1 	bl	404f20 <_dtoa_r>
  404b7e:	4625      	mov	r5, r4
  404b80:	4606      	mov	r6, r0
  404b82:	1904      	adds	r4, r0, r4
  404b84:	e719      	b.n	4049ba <_svfprintf_r+0x10e2>
  404b86:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404b88:	4d15      	ldr	r5, [pc, #84]	; (404be0 <_svfprintf_r+0x1308>)
  404b8a:	f7ff bb7e 	b.w	40428a <_svfprintf_r+0x9b2>
  404b8e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404b90:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404b92:	4413      	add	r3, r2
  404b94:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404b96:	930e      	str	r3, [sp, #56]	; 0x38
  404b98:	2a00      	cmp	r2, #0
  404b9a:	f340 80c7 	ble.w	404d2c <_svfprintf_r+0x1454>
  404b9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404ba2:	9308      	str	r3, [sp, #32]
  404ba4:	2367      	movs	r3, #103	; 0x67
  404ba6:	9311      	str	r3, [sp, #68]	; 0x44
  404ba8:	e69e      	b.n	4048e8 <_svfprintf_r+0x1010>
  404baa:	2b00      	cmp	r3, #0
  404bac:	f340 80e1 	ble.w	404d72 <_svfprintf_r+0x149a>
  404bb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404bb2:	2a00      	cmp	r2, #0
  404bb4:	f040 80b0 	bne.w	404d18 <_svfprintf_r+0x1440>
  404bb8:	f01b 0f01 	tst.w	fp, #1
  404bbc:	f040 80ac 	bne.w	404d18 <_svfprintf_r+0x1440>
  404bc0:	9308      	str	r3, [sp, #32]
  404bc2:	930e      	str	r3, [sp, #56]	; 0x38
  404bc4:	e690      	b.n	4048e8 <_svfprintf_r+0x1010>
  404bc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404bc8:	940f      	str	r4, [sp, #60]	; 0x3c
  404bca:	9308      	str	r3, [sp, #32]
  404bcc:	930e      	str	r3, [sp, #56]	; 0x38
  404bce:	900a      	str	r0, [sp, #40]	; 0x28
  404bd0:	f8cd b01c 	str.w	fp, [sp, #28]
  404bd4:	9012      	str	r0, [sp, #72]	; 0x48
  404bd6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404bda:	f7fe bfa1 	b.w	403b20 <_svfprintf_r+0x248>
  404bde:	bf00      	nop
  404be0:	004080a4 	.word	0x004080a4
  404be4:	66666667 	.word	0x66666667
  404be8:	00408088 	.word	0x00408088
  404bec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404bee:	2b47      	cmp	r3, #71	; 0x47
  404bf0:	f47f ae46 	bne.w	404880 <_svfprintf_r+0xfa8>
  404bf4:	f01b 0f01 	tst.w	fp, #1
  404bf8:	f47f aeda 	bne.w	4049b0 <_svfprintf_r+0x10d8>
  404bfc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404bfe:	1b9b      	subs	r3, r3, r6
  404c00:	9313      	str	r3, [sp, #76]	; 0x4c
  404c02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404c04:	2b47      	cmp	r3, #71	; 0x47
  404c06:	f43f aef7 	beq.w	4049f8 <_svfprintf_r+0x1120>
  404c0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404c0c:	9312      	str	r3, [sp, #72]	; 0x48
  404c0e:	e700      	b.n	404a12 <_svfprintf_r+0x113a>
  404c10:	2000      	movs	r0, #0
  404c12:	900a      	str	r0, [sp, #40]	; 0x28
  404c14:	f7fe bebc 	b.w	403990 <_svfprintf_r+0xb8>
  404c18:	424f      	negs	r7, r1
  404c1a:	3110      	adds	r1, #16
  404c1c:	da35      	bge.n	404c8a <_svfprintf_r+0x13b2>
  404c1e:	2410      	movs	r4, #16
  404c20:	4d6a      	ldr	r5, [pc, #424]	; (404dcc <_svfprintf_r+0x14f4>)
  404c22:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404c26:	e004      	b.n	404c32 <_svfprintf_r+0x135a>
  404c28:	f108 0808 	add.w	r8, r8, #8
  404c2c:	3f10      	subs	r7, #16
  404c2e:	2f10      	cmp	r7, #16
  404c30:	dd2c      	ble.n	404c8c <_svfprintf_r+0x13b4>
  404c32:	3301      	adds	r3, #1
  404c34:	3210      	adds	r2, #16
  404c36:	2b07      	cmp	r3, #7
  404c38:	9227      	str	r2, [sp, #156]	; 0x9c
  404c3a:	9326      	str	r3, [sp, #152]	; 0x98
  404c3c:	f8c8 5000 	str.w	r5, [r8]
  404c40:	f8c8 4004 	str.w	r4, [r8, #4]
  404c44:	ddf0      	ble.n	404c28 <_svfprintf_r+0x1350>
  404c46:	aa25      	add	r2, sp, #148	; 0x94
  404c48:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404c4a:	4658      	mov	r0, fp
  404c4c:	f002 fa22 	bl	407094 <__ssprint_r>
  404c50:	2800      	cmp	r0, #0
  404c52:	f47e af1e 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404c56:	46c8      	mov	r8, r9
  404c58:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404c5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404c5c:	e7e6      	b.n	404c2c <_svfprintf_r+0x1354>
  404c5e:	aa25      	add	r2, sp, #148	; 0x94
  404c60:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404c62:	980c      	ldr	r0, [sp, #48]	; 0x30
  404c64:	f002 fa16 	bl	407094 <__ssprint_r>
  404c68:	2800      	cmp	r0, #0
  404c6a:	f47e af12 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404c6e:	46c8      	mov	r8, r9
  404c70:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404c72:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404c74:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404c76:	f7ff bbc3 	b.w	404400 <_svfprintf_r+0xb28>
  404c7a:	2230      	movs	r2, #48	; 0x30
  404c7c:	4413      	add	r3, r2
  404c7e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  404c82:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  404c86:	ab22      	add	r3, sp, #136	; 0x88
  404c88:	e706      	b.n	404a98 <_svfprintf_r+0x11c0>
  404c8a:	4d50      	ldr	r5, [pc, #320]	; (404dcc <_svfprintf_r+0x14f4>)
  404c8c:	3301      	adds	r3, #1
  404c8e:	443a      	add	r2, r7
  404c90:	2b07      	cmp	r3, #7
  404c92:	e888 00a0 	stmia.w	r8, {r5, r7}
  404c96:	9227      	str	r2, [sp, #156]	; 0x9c
  404c98:	9326      	str	r3, [sp, #152]	; 0x98
  404c9a:	f108 0808 	add.w	r8, r8, #8
  404c9e:	f77f abb2 	ble.w	404406 <_svfprintf_r+0xb2e>
  404ca2:	aa25      	add	r2, sp, #148	; 0x94
  404ca4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404ca6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ca8:	f002 f9f4 	bl	407094 <__ssprint_r>
  404cac:	2800      	cmp	r0, #0
  404cae:	f47e aef0 	bne.w	403a92 <_svfprintf_r+0x1ba>
  404cb2:	46c8      	mov	r8, r9
  404cb4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404cb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cb8:	f7ff bba5 	b.w	404406 <_svfprintf_r+0xb2e>
  404cbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404cbe:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404cc0:	4413      	add	r3, r2
  404cc2:	930e      	str	r3, [sp, #56]	; 0x38
  404cc4:	e76b      	b.n	404b9e <_svfprintf_r+0x12c6>
  404cc6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404cc8:	e5ee      	b.n	4048a8 <_svfprintf_r+0xfd0>
  404cca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ccc:	4d3f      	ldr	r5, [pc, #252]	; (404dcc <_svfprintf_r+0x14f4>)
  404cce:	e4bb      	b.n	404648 <_svfprintf_r+0xd70>
  404cd0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404cd2:	9808      	ldr	r0, [sp, #32]
  404cd4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404cd6:	4639      	mov	r1, r7
  404cd8:	f002 ff18 	bl	407b0c <__aeabi_dcmpeq>
  404cdc:	2800      	cmp	r0, #0
  404cde:	f47f ae70 	bne.w	4049c2 <_svfprintf_r+0x10ea>
  404ce2:	f1c5 0501 	rsb	r5, r5, #1
  404ce6:	951f      	str	r5, [sp, #124]	; 0x7c
  404ce8:	442c      	add	r4, r5
  404cea:	e5ca      	b.n	404882 <_svfprintf_r+0xfaa>
  404cec:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404cee:	4e38      	ldr	r6, [pc, #224]	; (404dd0 <_svfprintf_r+0x14f8>)
  404cf0:	2b00      	cmp	r3, #0
  404cf2:	bfbe      	ittt	lt
  404cf4:	232d      	movlt	r3, #45	; 0x2d
  404cf6:	461f      	movlt	r7, r3
  404cf8:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
  404cfc:	f04f 0303 	mov.w	r3, #3
  404d00:	461a      	mov	r2, r3
  404d02:	9308      	str	r3, [sp, #32]
  404d04:	f04f 0300 	mov.w	r3, #0
  404d08:	bfa8      	it	ge
  404d0a:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  404d0e:	4619      	mov	r1, r3
  404d10:	930a      	str	r3, [sp, #40]	; 0x28
  404d12:	4b30      	ldr	r3, [pc, #192]	; (404dd4 <_svfprintf_r+0x14fc>)
  404d14:	f7ff b954 	b.w	403fc0 <_svfprintf_r+0x6e8>
  404d18:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404d1a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404d1c:	4413      	add	r3, r2
  404d1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404d20:	441a      	add	r2, r3
  404d22:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404d26:	920e      	str	r2, [sp, #56]	; 0x38
  404d28:	9308      	str	r3, [sp, #32]
  404d2a:	e5dd      	b.n	4048e8 <_svfprintf_r+0x1010>
  404d2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404d2e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404d30:	f1c3 0301 	rsb	r3, r3, #1
  404d34:	441a      	add	r2, r3
  404d36:	4613      	mov	r3, r2
  404d38:	e7c3      	b.n	404cc2 <_svfprintf_r+0x13ea>
  404d3a:	f01b 0301 	ands.w	r3, fp, #1
  404d3e:	9312      	str	r3, [sp, #72]	; 0x48
  404d40:	f47f aeb3 	bne.w	404aaa <_svfprintf_r+0x11d2>
  404d44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404d46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404d4a:	9308      	str	r3, [sp, #32]
  404d4c:	e5cc      	b.n	4048e8 <_svfprintf_r+0x1010>
  404d4e:	4d1f      	ldr	r5, [pc, #124]	; (404dcc <_svfprintf_r+0x14f4>)
  404d50:	e43c      	b.n	4045cc <_svfprintf_r+0xcf4>
  404d52:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404d54:	4d1d      	ldr	r5, [pc, #116]	; (404dcc <_svfprintf_r+0x14f4>)
  404d56:	e491      	b.n	40467c <_svfprintf_r+0xda4>
  404d58:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404d5a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  404d5e:	6828      	ldr	r0, [r5, #0]
  404d60:	46a2      	mov	sl, r4
  404d62:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  404d66:	900a      	str	r0, [sp, #40]	; 0x28
  404d68:	4628      	mov	r0, r5
  404d6a:	3004      	adds	r0, #4
  404d6c:	900f      	str	r0, [sp, #60]	; 0x3c
  404d6e:	f7fe be0d 	b.w	40398c <_svfprintf_r+0xb4>
  404d72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404d74:	b913      	cbnz	r3, 404d7c <_svfprintf_r+0x14a4>
  404d76:	f01b 0f01 	tst.w	fp, #1
  404d7a:	d002      	beq.n	404d82 <_svfprintf_r+0x14aa>
  404d7c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404d7e:	3301      	adds	r3, #1
  404d80:	e7cd      	b.n	404d1e <_svfprintf_r+0x1446>
  404d82:	2301      	movs	r3, #1
  404d84:	e71c      	b.n	404bc0 <_svfprintf_r+0x12e8>
  404d86:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404d8a:	f7ff b980 	b.w	40408e <_svfprintf_r+0x7b6>
  404d8e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404d92:	f7ff b93a 	b.w	40400a <_svfprintf_r+0x732>
  404d96:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404d9a:	f7ff b84f 	b.w	403e3c <_svfprintf_r+0x564>
  404d9e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  404da2:	e679      	b.n	404a98 <_svfprintf_r+0x11c0>
  404da4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404da8:	f7ff b9b2 	b.w	404110 <_svfprintf_r+0x838>
  404dac:	f04f 32ff 	mov.w	r2, #4294967295
  404db0:	230c      	movs	r3, #12
  404db2:	9209      	str	r2, [sp, #36]	; 0x24
  404db4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404db6:	6013      	str	r3, [r2, #0]
  404db8:	f7fe be74 	b.w	403aa4 <_svfprintf_r+0x1cc>
  404dbc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404dc0:	f7ff b8c4 	b.w	403f4c <_svfprintf_r+0x674>
  404dc4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404dc8:	f7ff b878 	b.w	403ebc <_svfprintf_r+0x5e4>
  404dcc:	004080a4 	.word	0x004080a4
  404dd0:	0040805c 	.word	0x0040805c
  404dd4:	00408058 	.word	0x00408058

00404dd8 <register_fini>:
  404dd8:	4b02      	ldr	r3, [pc, #8]	; (404de4 <register_fini+0xc>)
  404dda:	b113      	cbz	r3, 404de2 <register_fini+0xa>
  404ddc:	4802      	ldr	r0, [pc, #8]	; (404de8 <register_fini+0x10>)
  404dde:	f000 b805 	b.w	404dec <atexit>
  404de2:	4770      	bx	lr
  404de4:	00000000 	.word	0x00000000
  404de8:	00405d65 	.word	0x00405d65

00404dec <atexit>:
  404dec:	2300      	movs	r3, #0
  404dee:	4601      	mov	r1, r0
  404df0:	461a      	mov	r2, r3
  404df2:	4618      	mov	r0, r3
  404df4:	f002 b9d8 	b.w	4071a8 <__register_exitproc>

00404df8 <quorem>:
  404df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404dfc:	6903      	ldr	r3, [r0, #16]
  404dfe:	690f      	ldr	r7, [r1, #16]
  404e00:	b083      	sub	sp, #12
  404e02:	429f      	cmp	r7, r3
  404e04:	f300 8088 	bgt.w	404f18 <quorem+0x120>
  404e08:	3f01      	subs	r7, #1
  404e0a:	f101 0614 	add.w	r6, r1, #20
  404e0e:	f100 0a14 	add.w	sl, r0, #20
  404e12:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
  404e16:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
  404e1a:	3301      	adds	r3, #1
  404e1c:	fbb2 f8f3 	udiv	r8, r2, r3
  404e20:	00bb      	lsls	r3, r7, #2
  404e22:	9300      	str	r3, [sp, #0]
  404e24:	eb06 0903 	add.w	r9, r6, r3
  404e28:	4453      	add	r3, sl
  404e2a:	9301      	str	r3, [sp, #4]
  404e2c:	f1b8 0f00 	cmp.w	r8, #0
  404e30:	d03b      	beq.n	404eaa <quorem+0xb2>
  404e32:	2300      	movs	r3, #0
  404e34:	46b4      	mov	ip, r6
  404e36:	461c      	mov	r4, r3
  404e38:	46d6      	mov	lr, sl
  404e3a:	f85c 2b04 	ldr.w	r2, [ip], #4
  404e3e:	f8de 5000 	ldr.w	r5, [lr]
  404e42:	fa1f fb82 	uxth.w	fp, r2
  404e46:	fb08 330b 	mla	r3, r8, fp, r3
  404e4a:	0c12      	lsrs	r2, r2, #16
  404e4c:	ea4f 4b13 	mov.w	fp, r3, lsr #16
  404e50:	fb08 bb02 	mla	fp, r8, r2, fp
  404e54:	b29a      	uxth	r2, r3
  404e56:	1aa2      	subs	r2, r4, r2
  404e58:	b2ab      	uxth	r3, r5
  404e5a:	fa1f f48b 	uxth.w	r4, fp
  404e5e:	441a      	add	r2, r3
  404e60:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
  404e64:	eb04 4422 	add.w	r4, r4, r2, asr #16
  404e68:	b292      	uxth	r2, r2
  404e6a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  404e6e:	45e1      	cmp	r9, ip
  404e70:	f84e 2b04 	str.w	r2, [lr], #4
  404e74:	ea4f 4424 	mov.w	r4, r4, asr #16
  404e78:	ea4f 431b 	mov.w	r3, fp, lsr #16
  404e7c:	d2dd      	bcs.n	404e3a <quorem+0x42>
  404e7e:	9b00      	ldr	r3, [sp, #0]
  404e80:	f85a 3003 	ldr.w	r3, [sl, r3]
  404e84:	b98b      	cbnz	r3, 404eaa <quorem+0xb2>
  404e86:	9c01      	ldr	r4, [sp, #4]
  404e88:	1f23      	subs	r3, r4, #4
  404e8a:	459a      	cmp	sl, r3
  404e8c:	d20c      	bcs.n	404ea8 <quorem+0xb0>
  404e8e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  404e92:	b94b      	cbnz	r3, 404ea8 <quorem+0xb0>
  404e94:	f1a4 0308 	sub.w	r3, r4, #8
  404e98:	e002      	b.n	404ea0 <quorem+0xa8>
  404e9a:	681a      	ldr	r2, [r3, #0]
  404e9c:	3b04      	subs	r3, #4
  404e9e:	b91a      	cbnz	r2, 404ea8 <quorem+0xb0>
  404ea0:	459a      	cmp	sl, r3
  404ea2:	f107 37ff 	add.w	r7, r7, #4294967295
  404ea6:	d3f8      	bcc.n	404e9a <quorem+0xa2>
  404ea8:	6107      	str	r7, [r0, #16]
  404eaa:	4604      	mov	r4, r0
  404eac:	f001 fe2c 	bl	406b08 <__mcmp>
  404eb0:	2800      	cmp	r0, #0
  404eb2:	db2d      	blt.n	404f10 <quorem+0x118>
  404eb4:	4655      	mov	r5, sl
  404eb6:	2300      	movs	r3, #0
  404eb8:	f108 0801 	add.w	r8, r8, #1
  404ebc:	f856 1b04 	ldr.w	r1, [r6], #4
  404ec0:	6828      	ldr	r0, [r5, #0]
  404ec2:	b28a      	uxth	r2, r1
  404ec4:	1a9a      	subs	r2, r3, r2
  404ec6:	0c0b      	lsrs	r3, r1, #16
  404ec8:	b281      	uxth	r1, r0
  404eca:	440a      	add	r2, r1
  404ecc:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  404ed0:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404ed4:	b292      	uxth	r2, r2
  404ed6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404eda:	45b1      	cmp	r9, r6
  404edc:	f845 2b04 	str.w	r2, [r5], #4
  404ee0:	ea4f 4323 	mov.w	r3, r3, asr #16
  404ee4:	d2ea      	bcs.n	404ebc <quorem+0xc4>
  404ee6:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
  404eea:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
  404eee:	b97a      	cbnz	r2, 404f10 <quorem+0x118>
  404ef0:	1f1a      	subs	r2, r3, #4
  404ef2:	4592      	cmp	sl, r2
  404ef4:	d20b      	bcs.n	404f0e <quorem+0x116>
  404ef6:	f853 2c04 	ldr.w	r2, [r3, #-4]
  404efa:	b942      	cbnz	r2, 404f0e <quorem+0x116>
  404efc:	3b08      	subs	r3, #8
  404efe:	e002      	b.n	404f06 <quorem+0x10e>
  404f00:	681a      	ldr	r2, [r3, #0]
  404f02:	3b04      	subs	r3, #4
  404f04:	b91a      	cbnz	r2, 404f0e <quorem+0x116>
  404f06:	459a      	cmp	sl, r3
  404f08:	f107 37ff 	add.w	r7, r7, #4294967295
  404f0c:	d3f8      	bcc.n	404f00 <quorem+0x108>
  404f0e:	6127      	str	r7, [r4, #16]
  404f10:	4640      	mov	r0, r8
  404f12:	b003      	add	sp, #12
  404f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f18:	2000      	movs	r0, #0
  404f1a:	b003      	add	sp, #12
  404f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404f20 <_dtoa_r>:
  404f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404f24:	6c05      	ldr	r5, [r0, #64]	; 0x40
  404f26:	b09b      	sub	sp, #108	; 0x6c
  404f28:	4604      	mov	r4, r0
  404f2a:	4692      	mov	sl, r2
  404f2c:	469b      	mov	fp, r3
  404f2e:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  404f30:	b14d      	cbz	r5, 404f46 <_dtoa_r+0x26>
  404f32:	2301      	movs	r3, #1
  404f34:	6c42      	ldr	r2, [r0, #68]	; 0x44
  404f36:	4629      	mov	r1, r5
  404f38:	4093      	lsls	r3, r2
  404f3a:	60ab      	str	r3, [r5, #8]
  404f3c:	606a      	str	r2, [r5, #4]
  404f3e:	f001 fc0b 	bl	406758 <_Bfree>
  404f42:	2300      	movs	r3, #0
  404f44:	6423      	str	r3, [r4, #64]	; 0x40
  404f46:	f1bb 0f00 	cmp.w	fp, #0
  404f4a:	465d      	mov	r5, fp
  404f4c:	db35      	blt.n	404fba <_dtoa_r+0x9a>
  404f4e:	2300      	movs	r3, #0
  404f50:	6033      	str	r3, [r6, #0]
  404f52:	4b9d      	ldr	r3, [pc, #628]	; (4051c8 <_dtoa_r+0x2a8>)
  404f54:	43ab      	bics	r3, r5
  404f56:	d015      	beq.n	404f84 <_dtoa_r+0x64>
  404f58:	2200      	movs	r2, #0
  404f5a:	2300      	movs	r3, #0
  404f5c:	4650      	mov	r0, sl
  404f5e:	4659      	mov	r1, fp
  404f60:	f002 fdd4 	bl	407b0c <__aeabi_dcmpeq>
  404f64:	4680      	mov	r8, r0
  404f66:	2800      	cmp	r0, #0
  404f68:	d02d      	beq.n	404fc6 <_dtoa_r+0xa6>
  404f6a:	2301      	movs	r3, #1
  404f6c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404f6e:	6013      	str	r3, [r2, #0]
  404f70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404f72:	2b00      	cmp	r3, #0
  404f74:	f000 80bd 	beq.w	4050f2 <_dtoa_r+0x1d2>
  404f78:	4894      	ldr	r0, [pc, #592]	; (4051cc <_dtoa_r+0x2ac>)
  404f7a:	6018      	str	r0, [r3, #0]
  404f7c:	3801      	subs	r0, #1
  404f7e:	b01b      	add	sp, #108	; 0x6c
  404f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f84:	f242 730f 	movw	r3, #9999	; 0x270f
  404f88:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404f8a:	6013      	str	r3, [r2, #0]
  404f8c:	f1ba 0f00 	cmp.w	sl, #0
  404f90:	d10d      	bne.n	404fae <_dtoa_r+0x8e>
  404f92:	f3c5 0513 	ubfx	r5, r5, #0, #20
  404f96:	b955      	cbnz	r5, 404fae <_dtoa_r+0x8e>
  404f98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404f9a:	488d      	ldr	r0, [pc, #564]	; (4051d0 <_dtoa_r+0x2b0>)
  404f9c:	2b00      	cmp	r3, #0
  404f9e:	d0ee      	beq.n	404f7e <_dtoa_r+0x5e>
  404fa0:	f100 0308 	add.w	r3, r0, #8
  404fa4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  404fa6:	6013      	str	r3, [r2, #0]
  404fa8:	b01b      	add	sp, #108	; 0x6c
  404faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404fae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404fb0:	4888      	ldr	r0, [pc, #544]	; (4051d4 <_dtoa_r+0x2b4>)
  404fb2:	2b00      	cmp	r3, #0
  404fb4:	d0e3      	beq.n	404f7e <_dtoa_r+0x5e>
  404fb6:	1cc3      	adds	r3, r0, #3
  404fb8:	e7f4      	b.n	404fa4 <_dtoa_r+0x84>
  404fba:	2301      	movs	r3, #1
  404fbc:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  404fc0:	6033      	str	r3, [r6, #0]
  404fc2:	46ab      	mov	fp, r5
  404fc4:	e7c5      	b.n	404f52 <_dtoa_r+0x32>
  404fc6:	aa18      	add	r2, sp, #96	; 0x60
  404fc8:	ab19      	add	r3, sp, #100	; 0x64
  404fca:	9201      	str	r2, [sp, #4]
  404fcc:	9300      	str	r3, [sp, #0]
  404fce:	4652      	mov	r2, sl
  404fd0:	465b      	mov	r3, fp
  404fd2:	4620      	mov	r0, r4
  404fd4:	f001 fe42 	bl	406c5c <__d2b>
  404fd8:	0d2b      	lsrs	r3, r5, #20
  404fda:	4681      	mov	r9, r0
  404fdc:	d071      	beq.n	4050c2 <_dtoa_r+0x1a2>
  404fde:	4650      	mov	r0, sl
  404fe0:	f3cb 0213 	ubfx	r2, fp, #0, #20
  404fe4:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  404fe8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  404fea:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  404fee:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  404ff2:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  404ff6:	2200      	movs	r2, #0
  404ff8:	4b77      	ldr	r3, [pc, #476]	; (4051d8 <_dtoa_r+0x2b8>)
  404ffa:	f002 f96b 	bl	4072d4 <__aeabi_dsub>
  404ffe:	a36c      	add	r3, pc, #432	; (adr r3, 4051b0 <_dtoa_r+0x290>)
  405000:	e9d3 2300 	ldrd	r2, r3, [r3]
  405004:	f002 fb1a 	bl	40763c <__aeabi_dmul>
  405008:	a36b      	add	r3, pc, #428	; (adr r3, 4051b8 <_dtoa_r+0x298>)
  40500a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40500e:	f002 f963 	bl	4072d8 <__adddf3>
  405012:	e9cd 0102 	strd	r0, r1, [sp, #8]
  405016:	4630      	mov	r0, r6
  405018:	f002 faaa 	bl	407570 <__aeabi_i2d>
  40501c:	a368      	add	r3, pc, #416	; (adr r3, 4051c0 <_dtoa_r+0x2a0>)
  40501e:	e9d3 2300 	ldrd	r2, r3, [r3]
  405022:	f002 fb0b 	bl	40763c <__aeabi_dmul>
  405026:	4602      	mov	r2, r0
  405028:	460b      	mov	r3, r1
  40502a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40502e:	f002 f953 	bl	4072d8 <__adddf3>
  405032:	e9cd 0104 	strd	r0, r1, [sp, #16]
  405036:	f002 fdb1 	bl	407b9c <__aeabi_d2iz>
  40503a:	2200      	movs	r2, #0
  40503c:	9002      	str	r0, [sp, #8]
  40503e:	2300      	movs	r3, #0
  405040:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405044:	f002 fd6c 	bl	407b20 <__aeabi_dcmplt>
  405048:	2800      	cmp	r0, #0
  40504a:	f040 816d 	bne.w	405328 <_dtoa_r+0x408>
  40504e:	9d02      	ldr	r5, [sp, #8]
  405050:	2d16      	cmp	r5, #22
  405052:	f200 8157 	bhi.w	405304 <_dtoa_r+0x3e4>
  405056:	4961      	ldr	r1, [pc, #388]	; (4051dc <_dtoa_r+0x2bc>)
  405058:	4652      	mov	r2, sl
  40505a:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
  40505e:	465b      	mov	r3, fp
  405060:	e9d1 0100 	ldrd	r0, r1, [r1]
  405064:	f002 fd7a 	bl	407b5c <__aeabi_dcmpgt>
  405068:	2800      	cmp	r0, #0
  40506a:	f000 81be 	beq.w	4053ea <_dtoa_r+0x4ca>
  40506e:	1e6b      	subs	r3, r5, #1
  405070:	9302      	str	r3, [sp, #8]
  405072:	2300      	movs	r3, #0
  405074:	930e      	str	r3, [sp, #56]	; 0x38
  405076:	1bbf      	subs	r7, r7, r6
  405078:	1e7b      	subs	r3, r7, #1
  40507a:	9308      	str	r3, [sp, #32]
  40507c:	f100 814e 	bmi.w	40531c <_dtoa_r+0x3fc>
  405080:	2300      	movs	r3, #0
  405082:	930a      	str	r3, [sp, #40]	; 0x28
  405084:	9b02      	ldr	r3, [sp, #8]
  405086:	2b00      	cmp	r3, #0
  405088:	f2c0 813f 	blt.w	40530a <_dtoa_r+0x3ea>
  40508c:	9a08      	ldr	r2, [sp, #32]
  40508e:	930d      	str	r3, [sp, #52]	; 0x34
  405090:	4611      	mov	r1, r2
  405092:	4419      	add	r1, r3
  405094:	2300      	movs	r3, #0
  405096:	9108      	str	r1, [sp, #32]
  405098:	930c      	str	r3, [sp, #48]	; 0x30
  40509a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40509c:	2b09      	cmp	r3, #9
  40509e:	d82a      	bhi.n	4050f6 <_dtoa_r+0x1d6>
  4050a0:	2b05      	cmp	r3, #5
  4050a2:	f340 8658 	ble.w	405d56 <_dtoa_r+0xe36>
  4050a6:	2500      	movs	r5, #0
  4050a8:	3b04      	subs	r3, #4
  4050aa:	9324      	str	r3, [sp, #144]	; 0x90
  4050ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4050ae:	3b02      	subs	r3, #2
  4050b0:	2b03      	cmp	r3, #3
  4050b2:	f200 863f 	bhi.w	405d34 <_dtoa_r+0xe14>
  4050b6:	e8df f013 	tbh	[pc, r3, lsl #1]
  4050ba:	03ce      	.short	0x03ce
  4050bc:	03d902c3 	.word	0x03d902c3
  4050c0:	045b      	.short	0x045b
  4050c2:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4050c4:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4050c6:	443e      	add	r6, r7
  4050c8:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4050cc:	2b20      	cmp	r3, #32
  4050ce:	f340 8187 	ble.w	4053e0 <_dtoa_r+0x4c0>
  4050d2:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4050d6:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4050da:	409d      	lsls	r5, r3
  4050dc:	fa2a f000 	lsr.w	r0, sl, r0
  4050e0:	4328      	orrs	r0, r5
  4050e2:	f002 fa35 	bl	407550 <__aeabi_ui2d>
  4050e6:	2301      	movs	r3, #1
  4050e8:	3e01      	subs	r6, #1
  4050ea:	9314      	str	r3, [sp, #80]	; 0x50
  4050ec:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4050f0:	e781      	b.n	404ff6 <_dtoa_r+0xd6>
  4050f2:	483b      	ldr	r0, [pc, #236]	; (4051e0 <_dtoa_r+0x2c0>)
  4050f4:	e743      	b.n	404f7e <_dtoa_r+0x5e>
  4050f6:	2100      	movs	r1, #0
  4050f8:	4620      	mov	r0, r4
  4050fa:	6461      	str	r1, [r4, #68]	; 0x44
  4050fc:	9125      	str	r1, [sp, #148]	; 0x94
  4050fe:	f001 fb05 	bl	40670c <_Balloc>
  405102:	f04f 33ff 	mov.w	r3, #4294967295
  405106:	9307      	str	r3, [sp, #28]
  405108:	930f      	str	r3, [sp, #60]	; 0x3c
  40510a:	2301      	movs	r3, #1
  40510c:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40510e:	9004      	str	r0, [sp, #16]
  405110:	6420      	str	r0, [r4, #64]	; 0x40
  405112:	9224      	str	r2, [sp, #144]	; 0x90
  405114:	930b      	str	r3, [sp, #44]	; 0x2c
  405116:	9b19      	ldr	r3, [sp, #100]	; 0x64
  405118:	2b00      	cmp	r3, #0
  40511a:	f2c0 80d3 	blt.w	4052c4 <_dtoa_r+0x3a4>
  40511e:	9a02      	ldr	r2, [sp, #8]
  405120:	2a0e      	cmp	r2, #14
  405122:	f300 80cf 	bgt.w	4052c4 <_dtoa_r+0x3a4>
  405126:	4b2d      	ldr	r3, [pc, #180]	; (4051dc <_dtoa_r+0x2bc>)
  405128:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40512c:	e9d3 2300 	ldrd	r2, r3, [r3]
  405130:	e9cd 2308 	strd	r2, r3, [sp, #32]
  405134:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405136:	2b00      	cmp	r3, #0
  405138:	f2c0 83b4 	blt.w	4058a4 <_dtoa_r+0x984>
  40513c:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  405140:	4650      	mov	r0, sl
  405142:	462a      	mov	r2, r5
  405144:	4633      	mov	r3, r6
  405146:	4659      	mov	r1, fp
  405148:	f002 fba2 	bl	407890 <__aeabi_ddiv>
  40514c:	f002 fd26 	bl	407b9c <__aeabi_d2iz>
  405150:	4680      	mov	r8, r0
  405152:	f002 fa0d 	bl	407570 <__aeabi_i2d>
  405156:	462a      	mov	r2, r5
  405158:	4633      	mov	r3, r6
  40515a:	f002 fa6f 	bl	40763c <__aeabi_dmul>
  40515e:	4602      	mov	r2, r0
  405160:	460b      	mov	r3, r1
  405162:	4650      	mov	r0, sl
  405164:	4659      	mov	r1, fp
  405166:	f002 f8b5 	bl	4072d4 <__aeabi_dsub>
  40516a:	9e07      	ldr	r6, [sp, #28]
  40516c:	9f04      	ldr	r7, [sp, #16]
  40516e:	f108 0530 	add.w	r5, r8, #48	; 0x30
  405172:	2e01      	cmp	r6, #1
  405174:	703d      	strb	r5, [r7, #0]
  405176:	4602      	mov	r2, r0
  405178:	460b      	mov	r3, r1
  40517a:	f107 0501 	add.w	r5, r7, #1
  40517e:	d064      	beq.n	40524a <_dtoa_r+0x32a>
  405180:	2200      	movs	r2, #0
  405182:	4b18      	ldr	r3, [pc, #96]	; (4051e4 <_dtoa_r+0x2c4>)
  405184:	f002 fa5a 	bl	40763c <__aeabi_dmul>
  405188:	2200      	movs	r2, #0
  40518a:	2300      	movs	r3, #0
  40518c:	4606      	mov	r6, r0
  40518e:	460f      	mov	r7, r1
  405190:	f002 fcbc 	bl	407b0c <__aeabi_dcmpeq>
  405194:	2800      	cmp	r0, #0
  405196:	f040 8082 	bne.w	40529e <_dtoa_r+0x37e>
  40519a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  40519e:	f04f 0a00 	mov.w	sl, #0
  4051a2:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4051a6:	f04f 0b00 	mov.w	fp, #0
  4051aa:	940b      	str	r4, [sp, #44]	; 0x2c
  4051ac:	e029      	b.n	405202 <_dtoa_r+0x2e2>
  4051ae:	bf00      	nop
  4051b0:	636f4361 	.word	0x636f4361
  4051b4:	3fd287a7 	.word	0x3fd287a7
  4051b8:	8b60c8b3 	.word	0x8b60c8b3
  4051bc:	3fc68a28 	.word	0x3fc68a28
  4051c0:	509f79fb 	.word	0x509f79fb
  4051c4:	3fd34413 	.word	0x3fd34413
  4051c8:	7ff00000 	.word	0x7ff00000
  4051cc:	00408091 	.word	0x00408091
  4051d0:	004080b4 	.word	0x004080b4
  4051d4:	004080c0 	.word	0x004080c0
  4051d8:	3ff80000 	.word	0x3ff80000
  4051dc:	00408100 	.word	0x00408100
  4051e0:	00408090 	.word	0x00408090
  4051e4:	40240000 	.word	0x40240000
  4051e8:	2200      	movs	r2, #0
  4051ea:	4b81      	ldr	r3, [pc, #516]	; (4053f0 <_dtoa_r+0x4d0>)
  4051ec:	f002 fa26 	bl	40763c <__aeabi_dmul>
  4051f0:	4652      	mov	r2, sl
  4051f2:	465b      	mov	r3, fp
  4051f4:	4606      	mov	r6, r0
  4051f6:	460f      	mov	r7, r1
  4051f8:	f002 fc88 	bl	407b0c <__aeabi_dcmpeq>
  4051fc:	2800      	cmp	r0, #0
  4051fe:	f040 83ba 	bne.w	405976 <_dtoa_r+0xa56>
  405202:	4642      	mov	r2, r8
  405204:	464b      	mov	r3, r9
  405206:	4630      	mov	r0, r6
  405208:	4639      	mov	r1, r7
  40520a:	f002 fb41 	bl	407890 <__aeabi_ddiv>
  40520e:	f002 fcc5 	bl	407b9c <__aeabi_d2iz>
  405212:	4604      	mov	r4, r0
  405214:	f002 f9ac 	bl	407570 <__aeabi_i2d>
  405218:	4642      	mov	r2, r8
  40521a:	464b      	mov	r3, r9
  40521c:	f002 fa0e 	bl	40763c <__aeabi_dmul>
  405220:	4602      	mov	r2, r0
  405222:	460b      	mov	r3, r1
  405224:	4630      	mov	r0, r6
  405226:	4639      	mov	r1, r7
  405228:	f002 f854 	bl	4072d4 <__aeabi_dsub>
  40522c:	f104 0630 	add.w	r6, r4, #48	; 0x30
  405230:	f805 6b01 	strb.w	r6, [r5], #1
  405234:	9e04      	ldr	r6, [sp, #16]
  405236:	9f07      	ldr	r7, [sp, #28]
  405238:	1bae      	subs	r6, r5, r6
  40523a:	42be      	cmp	r6, r7
  40523c:	4602      	mov	r2, r0
  40523e:	460b      	mov	r3, r1
  405240:	d1d2      	bne.n	4051e8 <_dtoa_r+0x2c8>
  405242:	46a0      	mov	r8, r4
  405244:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  405248:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40524a:	4610      	mov	r0, r2
  40524c:	4619      	mov	r1, r3
  40524e:	f002 f843 	bl	4072d8 <__adddf3>
  405252:	4606      	mov	r6, r0
  405254:	460f      	mov	r7, r1
  405256:	4602      	mov	r2, r0
  405258:	460b      	mov	r3, r1
  40525a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40525e:	f002 fc5f 	bl	407b20 <__aeabi_dcmplt>
  405262:	b948      	cbnz	r0, 405278 <_dtoa_r+0x358>
  405264:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405268:	4632      	mov	r2, r6
  40526a:	463b      	mov	r3, r7
  40526c:	f002 fc4e 	bl	407b0c <__aeabi_dcmpeq>
  405270:	b1a8      	cbz	r0, 40529e <_dtoa_r+0x37e>
  405272:	f018 0f01 	tst.w	r8, #1
  405276:	d012      	beq.n	40529e <_dtoa_r+0x37e>
  405278:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40527c:	1e6b      	subs	r3, r5, #1
  40527e:	9a04      	ldr	r2, [sp, #16]
  405280:	e004      	b.n	40528c <_dtoa_r+0x36c>
  405282:	429a      	cmp	r2, r3
  405284:	f000 8402 	beq.w	405a8c <_dtoa_r+0xb6c>
  405288:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40528c:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  405290:	f103 0501 	add.w	r5, r3, #1
  405294:	d0f5      	beq.n	405282 <_dtoa_r+0x362>
  405296:	f108 0801 	add.w	r8, r8, #1
  40529a:	f883 8000 	strb.w	r8, [r3]
  40529e:	4649      	mov	r1, r9
  4052a0:	4620      	mov	r0, r4
  4052a2:	f001 fa59 	bl	406758 <_Bfree>
  4052a6:	2200      	movs	r2, #0
  4052a8:	9b02      	ldr	r3, [sp, #8]
  4052aa:	702a      	strb	r2, [r5, #0]
  4052ac:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4052ae:	3301      	adds	r3, #1
  4052b0:	6013      	str	r3, [r2, #0]
  4052b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4052b4:	2b00      	cmp	r3, #0
  4052b6:	f000 839f 	beq.w	4059f8 <_dtoa_r+0xad8>
  4052ba:	9804      	ldr	r0, [sp, #16]
  4052bc:	601d      	str	r5, [r3, #0]
  4052be:	b01b      	add	sp, #108	; 0x6c
  4052c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4052c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4052c6:	2a00      	cmp	r2, #0
  4052c8:	d03e      	beq.n	405348 <_dtoa_r+0x428>
  4052ca:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4052cc:	2a01      	cmp	r2, #1
  4052ce:	f340 8311 	ble.w	4058f4 <_dtoa_r+0x9d4>
  4052d2:	9b07      	ldr	r3, [sp, #28]
  4052d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4052d6:	1e5f      	subs	r7, r3, #1
  4052d8:	42ba      	cmp	r2, r7
  4052da:	f2c0 8390 	blt.w	4059fe <_dtoa_r+0xade>
  4052de:	1bd7      	subs	r7, r2, r7
  4052e0:	9b07      	ldr	r3, [sp, #28]
  4052e2:	2b00      	cmp	r3, #0
  4052e4:	f2c0 848c 	blt.w	405c00 <_dtoa_r+0xce0>
  4052e8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4052ea:	9b07      	ldr	r3, [sp, #28]
  4052ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4052ee:	2101      	movs	r1, #1
  4052f0:	441a      	add	r2, r3
  4052f2:	920a      	str	r2, [sp, #40]	; 0x28
  4052f4:	9a08      	ldr	r2, [sp, #32]
  4052f6:	4620      	mov	r0, r4
  4052f8:	441a      	add	r2, r3
  4052fa:	9208      	str	r2, [sp, #32]
  4052fc:	f001 fac8 	bl	406890 <__i2b>
  405300:	4606      	mov	r6, r0
  405302:	e023      	b.n	40534c <_dtoa_r+0x42c>
  405304:	2301      	movs	r3, #1
  405306:	930e      	str	r3, [sp, #56]	; 0x38
  405308:	e6b5      	b.n	405076 <_dtoa_r+0x156>
  40530a:	2300      	movs	r3, #0
  40530c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40530e:	930d      	str	r3, [sp, #52]	; 0x34
  405310:	9b02      	ldr	r3, [sp, #8]
  405312:	1ad2      	subs	r2, r2, r3
  405314:	425b      	negs	r3, r3
  405316:	920a      	str	r2, [sp, #40]	; 0x28
  405318:	930c      	str	r3, [sp, #48]	; 0x30
  40531a:	e6be      	b.n	40509a <_dtoa_r+0x17a>
  40531c:	f1c7 0301 	rsb	r3, r7, #1
  405320:	930a      	str	r3, [sp, #40]	; 0x28
  405322:	2300      	movs	r3, #0
  405324:	9308      	str	r3, [sp, #32]
  405326:	e6ad      	b.n	405084 <_dtoa_r+0x164>
  405328:	9d02      	ldr	r5, [sp, #8]
  40532a:	4628      	mov	r0, r5
  40532c:	f002 f920 	bl	407570 <__aeabi_i2d>
  405330:	4602      	mov	r2, r0
  405332:	460b      	mov	r3, r1
  405334:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405338:	f002 fbe8 	bl	407b0c <__aeabi_dcmpeq>
  40533c:	2800      	cmp	r0, #0
  40533e:	f47f ae86 	bne.w	40504e <_dtoa_r+0x12e>
  405342:	1e6b      	subs	r3, r5, #1
  405344:	9302      	str	r3, [sp, #8]
  405346:	e682      	b.n	40504e <_dtoa_r+0x12e>
  405348:	ad0a      	add	r5, sp, #40	; 0x28
  40534a:	cde0      	ldmia	r5, {r5, r6, r7}
  40534c:	2d00      	cmp	r5, #0
  40534e:	dd0c      	ble.n	40536a <_dtoa_r+0x44a>
  405350:	9908      	ldr	r1, [sp, #32]
  405352:	2900      	cmp	r1, #0
  405354:	460b      	mov	r3, r1
  405356:	dd08      	ble.n	40536a <_dtoa_r+0x44a>
  405358:	42a9      	cmp	r1, r5
  40535a:	bfa8      	it	ge
  40535c:	462b      	movge	r3, r5
  40535e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405360:	1aed      	subs	r5, r5, r3
  405362:	1ad2      	subs	r2, r2, r3
  405364:	1acb      	subs	r3, r1, r3
  405366:	920a      	str	r2, [sp, #40]	; 0x28
  405368:	9308      	str	r3, [sp, #32]
  40536a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40536c:	b1d3      	cbz	r3, 4053a4 <_dtoa_r+0x484>
  40536e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405370:	2b00      	cmp	r3, #0
  405372:	f000 82b8 	beq.w	4058e6 <_dtoa_r+0x9c6>
  405376:	2f00      	cmp	r7, #0
  405378:	dd10      	ble.n	40539c <_dtoa_r+0x47c>
  40537a:	4631      	mov	r1, r6
  40537c:	463a      	mov	r2, r7
  40537e:	4620      	mov	r0, r4
  405380:	f001 fb22 	bl	4069c8 <__pow5mult>
  405384:	464a      	mov	r2, r9
  405386:	4601      	mov	r1, r0
  405388:	4606      	mov	r6, r0
  40538a:	4620      	mov	r0, r4
  40538c:	f001 fa8a 	bl	4068a4 <__multiply>
  405390:	4603      	mov	r3, r0
  405392:	4649      	mov	r1, r9
  405394:	4620      	mov	r0, r4
  405396:	4699      	mov	r9, r3
  405398:	f001 f9de 	bl	406758 <_Bfree>
  40539c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40539e:	1bda      	subs	r2, r3, r7
  4053a0:	f040 82a2 	bne.w	4058e8 <_dtoa_r+0x9c8>
  4053a4:	2101      	movs	r1, #1
  4053a6:	4620      	mov	r0, r4
  4053a8:	f001 fa72 	bl	406890 <__i2b>
  4053ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4053ae:	4680      	mov	r8, r0
  4053b0:	2b00      	cmp	r3, #0
  4053b2:	dd1f      	ble.n	4053f4 <_dtoa_r+0x4d4>
  4053b4:	4601      	mov	r1, r0
  4053b6:	461a      	mov	r2, r3
  4053b8:	4620      	mov	r0, r4
  4053ba:	f001 fb05 	bl	4069c8 <__pow5mult>
  4053be:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4053c0:	4680      	mov	r8, r0
  4053c2:	2b01      	cmp	r3, #1
  4053c4:	f340 8255 	ble.w	405872 <_dtoa_r+0x952>
  4053c8:	2300      	movs	r3, #0
  4053ca:	930c      	str	r3, [sp, #48]	; 0x30
  4053cc:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4053d0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4053d4:	6918      	ldr	r0, [r3, #16]
  4053d6:	f001 fa0b 	bl	4067f0 <__hi0bits>
  4053da:	f1c0 0020 	rsb	r0, r0, #32
  4053de:	e013      	b.n	405408 <_dtoa_r+0x4e8>
  4053e0:	f1c3 0520 	rsb	r5, r3, #32
  4053e4:	fa0a f005 	lsl.w	r0, sl, r5
  4053e8:	e67b      	b.n	4050e2 <_dtoa_r+0x1c2>
  4053ea:	900e      	str	r0, [sp, #56]	; 0x38
  4053ec:	e643      	b.n	405076 <_dtoa_r+0x156>
  4053ee:	bf00      	nop
  4053f0:	40240000 	.word	0x40240000
  4053f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4053f6:	2b01      	cmp	r3, #1
  4053f8:	f340 8285 	ble.w	405906 <_dtoa_r+0x9e6>
  4053fc:	2300      	movs	r3, #0
  4053fe:	930c      	str	r3, [sp, #48]	; 0x30
  405400:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  405402:	2001      	movs	r0, #1
  405404:	2b00      	cmp	r3, #0
  405406:	d1e1      	bne.n	4053cc <_dtoa_r+0x4ac>
  405408:	9a08      	ldr	r2, [sp, #32]
  40540a:	4410      	add	r0, r2
  40540c:	f010 001f 	ands.w	r0, r0, #31
  405410:	f000 80a1 	beq.w	405556 <_dtoa_r+0x636>
  405414:	f1c0 0320 	rsb	r3, r0, #32
  405418:	2b04      	cmp	r3, #4
  40541a:	f340 8486 	ble.w	405d2a <_dtoa_r+0xe0a>
  40541e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405420:	f1c0 001c 	rsb	r0, r0, #28
  405424:	4403      	add	r3, r0
  405426:	930a      	str	r3, [sp, #40]	; 0x28
  405428:	4613      	mov	r3, r2
  40542a:	4403      	add	r3, r0
  40542c:	4405      	add	r5, r0
  40542e:	9308      	str	r3, [sp, #32]
  405430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405432:	2b00      	cmp	r3, #0
  405434:	dd05      	ble.n	405442 <_dtoa_r+0x522>
  405436:	4649      	mov	r1, r9
  405438:	461a      	mov	r2, r3
  40543a:	4620      	mov	r0, r4
  40543c:	f001 fb14 	bl	406a68 <__lshift>
  405440:	4681      	mov	r9, r0
  405442:	9b08      	ldr	r3, [sp, #32]
  405444:	2b00      	cmp	r3, #0
  405446:	dd05      	ble.n	405454 <_dtoa_r+0x534>
  405448:	4641      	mov	r1, r8
  40544a:	461a      	mov	r2, r3
  40544c:	4620      	mov	r0, r4
  40544e:	f001 fb0b 	bl	406a68 <__lshift>
  405452:	4680      	mov	r8, r0
  405454:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405456:	2b00      	cmp	r3, #0
  405458:	f040 8086 	bne.w	405568 <_dtoa_r+0x648>
  40545c:	9b07      	ldr	r3, [sp, #28]
  40545e:	2b00      	cmp	r3, #0
  405460:	f340 8264 	ble.w	40592c <_dtoa_r+0xa0c>
  405464:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405466:	2b00      	cmp	r3, #0
  405468:	f000 8098 	beq.w	40559c <_dtoa_r+0x67c>
  40546c:	2d00      	cmp	r5, #0
  40546e:	dd05      	ble.n	40547c <_dtoa_r+0x55c>
  405470:	4631      	mov	r1, r6
  405472:	462a      	mov	r2, r5
  405474:	4620      	mov	r0, r4
  405476:	f001 faf7 	bl	406a68 <__lshift>
  40547a:	4606      	mov	r6, r0
  40547c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40547e:	2b00      	cmp	r3, #0
  405480:	f040 8336 	bne.w	405af0 <_dtoa_r+0xbd0>
  405484:	9608      	str	r6, [sp, #32]
  405486:	9b07      	ldr	r3, [sp, #28]
  405488:	9a04      	ldr	r2, [sp, #16]
  40548a:	3b01      	subs	r3, #1
  40548c:	18d3      	adds	r3, r2, r3
  40548e:	930b      	str	r3, [sp, #44]	; 0x2c
  405490:	4617      	mov	r7, r2
  405492:	f00a 0301 	and.w	r3, sl, #1
  405496:	46c2      	mov	sl, r8
  405498:	f8dd b020 	ldr.w	fp, [sp, #32]
  40549c:	930c      	str	r3, [sp, #48]	; 0x30
  40549e:	4651      	mov	r1, sl
  4054a0:	4648      	mov	r0, r9
  4054a2:	f7ff fca9 	bl	404df8 <quorem>
  4054a6:	4631      	mov	r1, r6
  4054a8:	4605      	mov	r5, r0
  4054aa:	4648      	mov	r0, r9
  4054ac:	f001 fb2c 	bl	406b08 <__mcmp>
  4054b0:	465a      	mov	r2, fp
  4054b2:	9007      	str	r0, [sp, #28]
  4054b4:	4651      	mov	r1, sl
  4054b6:	4620      	mov	r0, r4
  4054b8:	f001 fb42 	bl	406b40 <__mdiff>
  4054bc:	68c2      	ldr	r2, [r0, #12]
  4054be:	4680      	mov	r8, r0
  4054c0:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4054c4:	2a00      	cmp	r2, #0
  4054c6:	f040 8229 	bne.w	40591c <_dtoa_r+0x9fc>
  4054ca:	4601      	mov	r1, r0
  4054cc:	4648      	mov	r0, r9
  4054ce:	930a      	str	r3, [sp, #40]	; 0x28
  4054d0:	f001 fb1a 	bl	406b08 <__mcmp>
  4054d4:	4641      	mov	r1, r8
  4054d6:	9008      	str	r0, [sp, #32]
  4054d8:	4620      	mov	r0, r4
  4054da:	f001 f93d 	bl	406758 <_Bfree>
  4054de:	9a08      	ldr	r2, [sp, #32]
  4054e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4054e2:	b932      	cbnz	r2, 4054f2 <_dtoa_r+0x5d2>
  4054e4:	9924      	ldr	r1, [sp, #144]	; 0x90
  4054e6:	b921      	cbnz	r1, 4054f2 <_dtoa_r+0x5d2>
  4054e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4054ea:	2a00      	cmp	r2, #0
  4054ec:	f000 83ee 	beq.w	405ccc <_dtoa_r+0xdac>
  4054f0:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4054f2:	9907      	ldr	r1, [sp, #28]
  4054f4:	2900      	cmp	r1, #0
  4054f6:	f2c0 829f 	blt.w	405a38 <_dtoa_r+0xb18>
  4054fa:	d105      	bne.n	405508 <_dtoa_r+0x5e8>
  4054fc:	9924      	ldr	r1, [sp, #144]	; 0x90
  4054fe:	b919      	cbnz	r1, 405508 <_dtoa_r+0x5e8>
  405500:	990c      	ldr	r1, [sp, #48]	; 0x30
  405502:	2900      	cmp	r1, #0
  405504:	f000 8298 	beq.w	405a38 <_dtoa_r+0xb18>
  405508:	2a00      	cmp	r2, #0
  40550a:	f300 8305 	bgt.w	405b18 <_dtoa_r+0xbf8>
  40550e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405510:	f107 0801 	add.w	r8, r7, #1
  405514:	4297      	cmp	r7, r2
  405516:	703b      	strb	r3, [r7, #0]
  405518:	4645      	mov	r5, r8
  40551a:	f000 830b 	beq.w	405b34 <_dtoa_r+0xc14>
  40551e:	4649      	mov	r1, r9
  405520:	2300      	movs	r3, #0
  405522:	220a      	movs	r2, #10
  405524:	4620      	mov	r0, r4
  405526:	f001 f921 	bl	40676c <__multadd>
  40552a:	455e      	cmp	r6, fp
  40552c:	4681      	mov	r9, r0
  40552e:	4631      	mov	r1, r6
  405530:	f04f 0300 	mov.w	r3, #0
  405534:	f04f 020a 	mov.w	r2, #10
  405538:	4620      	mov	r0, r4
  40553a:	f000 81e9 	beq.w	405910 <_dtoa_r+0x9f0>
  40553e:	f001 f915 	bl	40676c <__multadd>
  405542:	4659      	mov	r1, fp
  405544:	4606      	mov	r6, r0
  405546:	2300      	movs	r3, #0
  405548:	220a      	movs	r2, #10
  40554a:	4620      	mov	r0, r4
  40554c:	f001 f90e 	bl	40676c <__multadd>
  405550:	4647      	mov	r7, r8
  405552:	4683      	mov	fp, r0
  405554:	e7a3      	b.n	40549e <_dtoa_r+0x57e>
  405556:	201c      	movs	r0, #28
  405558:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40555a:	4405      	add	r5, r0
  40555c:	4403      	add	r3, r0
  40555e:	930a      	str	r3, [sp, #40]	; 0x28
  405560:	9b08      	ldr	r3, [sp, #32]
  405562:	4403      	add	r3, r0
  405564:	9308      	str	r3, [sp, #32]
  405566:	e763      	b.n	405430 <_dtoa_r+0x510>
  405568:	4641      	mov	r1, r8
  40556a:	4648      	mov	r0, r9
  40556c:	f001 facc 	bl	406b08 <__mcmp>
  405570:	2800      	cmp	r0, #0
  405572:	f6bf af73 	bge.w	40545c <_dtoa_r+0x53c>
  405576:	9f02      	ldr	r7, [sp, #8]
  405578:	4649      	mov	r1, r9
  40557a:	2300      	movs	r3, #0
  40557c:	220a      	movs	r2, #10
  40557e:	4620      	mov	r0, r4
  405580:	3f01      	subs	r7, #1
  405582:	9702      	str	r7, [sp, #8]
  405584:	f001 f8f2 	bl	40676c <__multadd>
  405588:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40558a:	4681      	mov	r9, r0
  40558c:	2b00      	cmp	r3, #0
  40558e:	f040 83b5 	bne.w	405cfc <_dtoa_r+0xddc>
  405592:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405594:	2b00      	cmp	r3, #0
  405596:	f340 83be 	ble.w	405d16 <_dtoa_r+0xdf6>
  40559a:	9307      	str	r3, [sp, #28]
  40559c:	f8dd a010 	ldr.w	sl, [sp, #16]
  4055a0:	9f07      	ldr	r7, [sp, #28]
  4055a2:	4655      	mov	r5, sl
  4055a4:	e006      	b.n	4055b4 <_dtoa_r+0x694>
  4055a6:	4649      	mov	r1, r9
  4055a8:	2300      	movs	r3, #0
  4055aa:	220a      	movs	r2, #10
  4055ac:	4620      	mov	r0, r4
  4055ae:	f001 f8dd 	bl	40676c <__multadd>
  4055b2:	4681      	mov	r9, r0
  4055b4:	4641      	mov	r1, r8
  4055b6:	4648      	mov	r0, r9
  4055b8:	f7ff fc1e 	bl	404df8 <quorem>
  4055bc:	3030      	adds	r0, #48	; 0x30
  4055be:	f805 0b01 	strb.w	r0, [r5], #1
  4055c2:	eba5 030a 	sub.w	r3, r5, sl
  4055c6:	42bb      	cmp	r3, r7
  4055c8:	dbed      	blt.n	4055a6 <_dtoa_r+0x686>
  4055ca:	9b04      	ldr	r3, [sp, #16]
  4055cc:	9a07      	ldr	r2, [sp, #28]
  4055ce:	4682      	mov	sl, r0
  4055d0:	2a01      	cmp	r2, #1
  4055d2:	bfac      	ite	ge
  4055d4:	189b      	addge	r3, r3, r2
  4055d6:	3301      	addlt	r3, #1
  4055d8:	f04f 0b00 	mov.w	fp, #0
  4055dc:	461d      	mov	r5, r3
  4055de:	4649      	mov	r1, r9
  4055e0:	2201      	movs	r2, #1
  4055e2:	4620      	mov	r0, r4
  4055e4:	f001 fa40 	bl	406a68 <__lshift>
  4055e8:	4641      	mov	r1, r8
  4055ea:	4681      	mov	r9, r0
  4055ec:	f001 fa8c 	bl	406b08 <__mcmp>
  4055f0:	2800      	cmp	r0, #0
  4055f2:	f340 823f 	ble.w	405a74 <_dtoa_r+0xb54>
  4055f6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4055fa:	1e6b      	subs	r3, r5, #1
  4055fc:	9904      	ldr	r1, [sp, #16]
  4055fe:	e004      	b.n	40560a <_dtoa_r+0x6ea>
  405600:	428b      	cmp	r3, r1
  405602:	f000 81ae 	beq.w	405962 <_dtoa_r+0xa42>
  405606:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40560a:	2a39      	cmp	r2, #57	; 0x39
  40560c:	f103 0501 	add.w	r5, r3, #1
  405610:	d0f6      	beq.n	405600 <_dtoa_r+0x6e0>
  405612:	3201      	adds	r2, #1
  405614:	701a      	strb	r2, [r3, #0]
  405616:	4641      	mov	r1, r8
  405618:	4620      	mov	r0, r4
  40561a:	f001 f89d 	bl	406758 <_Bfree>
  40561e:	2e00      	cmp	r6, #0
  405620:	f43f ae3d 	beq.w	40529e <_dtoa_r+0x37e>
  405624:	f1bb 0f00 	cmp.w	fp, #0
  405628:	d005      	beq.n	405636 <_dtoa_r+0x716>
  40562a:	45b3      	cmp	fp, r6
  40562c:	d003      	beq.n	405636 <_dtoa_r+0x716>
  40562e:	4659      	mov	r1, fp
  405630:	4620      	mov	r0, r4
  405632:	f001 f891 	bl	406758 <_Bfree>
  405636:	4631      	mov	r1, r6
  405638:	4620      	mov	r0, r4
  40563a:	f001 f88d 	bl	406758 <_Bfree>
  40563e:	e62e      	b.n	40529e <_dtoa_r+0x37e>
  405640:	2300      	movs	r3, #0
  405642:	930b      	str	r3, [sp, #44]	; 0x2c
  405644:	9b02      	ldr	r3, [sp, #8]
  405646:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405648:	4413      	add	r3, r2
  40564a:	930f      	str	r3, [sp, #60]	; 0x3c
  40564c:	3301      	adds	r3, #1
  40564e:	2b01      	cmp	r3, #1
  405650:	461f      	mov	r7, r3
  405652:	461e      	mov	r6, r3
  405654:	bfb8      	it	lt
  405656:	2701      	movlt	r7, #1
  405658:	9307      	str	r3, [sp, #28]
  40565a:	2100      	movs	r1, #0
  40565c:	2f17      	cmp	r7, #23
  40565e:	6461      	str	r1, [r4, #68]	; 0x44
  405660:	d90a      	bls.n	405678 <_dtoa_r+0x758>
  405662:	2201      	movs	r2, #1
  405664:	2304      	movs	r3, #4
  405666:	005b      	lsls	r3, r3, #1
  405668:	f103 0014 	add.w	r0, r3, #20
  40566c:	4287      	cmp	r7, r0
  40566e:	4611      	mov	r1, r2
  405670:	f102 0201 	add.w	r2, r2, #1
  405674:	d2f7      	bcs.n	405666 <_dtoa_r+0x746>
  405676:	6461      	str	r1, [r4, #68]	; 0x44
  405678:	4620      	mov	r0, r4
  40567a:	f001 f847 	bl	40670c <_Balloc>
  40567e:	2e0e      	cmp	r6, #14
  405680:	9004      	str	r0, [sp, #16]
  405682:	6420      	str	r0, [r4, #64]	; 0x40
  405684:	f63f ad47 	bhi.w	405116 <_dtoa_r+0x1f6>
  405688:	2d00      	cmp	r5, #0
  40568a:	f43f ad44 	beq.w	405116 <_dtoa_r+0x1f6>
  40568e:	9902      	ldr	r1, [sp, #8]
  405690:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  405694:	2900      	cmp	r1, #0
  405696:	f340 8203 	ble.w	405aa0 <_dtoa_r+0xb80>
  40569a:	4bb9      	ldr	r3, [pc, #740]	; (405980 <_dtoa_r+0xa60>)
  40569c:	f001 020f 	and.w	r2, r1, #15
  4056a0:	110d      	asrs	r5, r1, #4
  4056a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4056a6:	06e9      	lsls	r1, r5, #27
  4056a8:	e9d3 6700 	ldrd	r6, r7, [r3]
  4056ac:	f140 81af 	bpl.w	405a0e <_dtoa_r+0xaee>
  4056b0:	4bb4      	ldr	r3, [pc, #720]	; (405984 <_dtoa_r+0xa64>)
  4056b2:	4650      	mov	r0, sl
  4056b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4056b8:	4659      	mov	r1, fp
  4056ba:	f002 f8e9 	bl	407890 <__aeabi_ddiv>
  4056be:	f04f 0a03 	mov.w	sl, #3
  4056c2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4056c6:	f005 050f 	and.w	r5, r5, #15
  4056ca:	b18d      	cbz	r5, 4056f0 <_dtoa_r+0x7d0>
  4056cc:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405984 <_dtoa_r+0xa64>
  4056d0:	07ea      	lsls	r2, r5, #31
  4056d2:	d509      	bpl.n	4056e8 <_dtoa_r+0x7c8>
  4056d4:	e9d8 2300 	ldrd	r2, r3, [r8]
  4056d8:	4630      	mov	r0, r6
  4056da:	4639      	mov	r1, r7
  4056dc:	f001 ffae 	bl	40763c <__aeabi_dmul>
  4056e0:	4606      	mov	r6, r0
  4056e2:	460f      	mov	r7, r1
  4056e4:	f10a 0a01 	add.w	sl, sl, #1
  4056e8:	106d      	asrs	r5, r5, #1
  4056ea:	f108 0808 	add.w	r8, r8, #8
  4056ee:	d1ef      	bne.n	4056d0 <_dtoa_r+0x7b0>
  4056f0:	463b      	mov	r3, r7
  4056f2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4056f6:	4632      	mov	r2, r6
  4056f8:	f002 f8ca 	bl	407890 <__aeabi_ddiv>
  4056fc:	4607      	mov	r7, r0
  4056fe:	4688      	mov	r8, r1
  405700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405702:	b143      	cbz	r3, 405716 <_dtoa_r+0x7f6>
  405704:	2200      	movs	r2, #0
  405706:	4ba0      	ldr	r3, [pc, #640]	; (405988 <_dtoa_r+0xa68>)
  405708:	4638      	mov	r0, r7
  40570a:	4641      	mov	r1, r8
  40570c:	f002 fa08 	bl	407b20 <__aeabi_dcmplt>
  405710:	2800      	cmp	r0, #0
  405712:	f040 8287 	bne.w	405c24 <_dtoa_r+0xd04>
  405716:	4650      	mov	r0, sl
  405718:	f001 ff2a 	bl	407570 <__aeabi_i2d>
  40571c:	463a      	mov	r2, r7
  40571e:	4643      	mov	r3, r8
  405720:	f001 ff8c 	bl	40763c <__aeabi_dmul>
  405724:	4b99      	ldr	r3, [pc, #612]	; (40598c <_dtoa_r+0xa6c>)
  405726:	2200      	movs	r2, #0
  405728:	f001 fdd6 	bl	4072d8 <__adddf3>
  40572c:	9b07      	ldr	r3, [sp, #28]
  40572e:	4605      	mov	r5, r0
  405730:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405734:	2b00      	cmp	r3, #0
  405736:	f000 813f 	beq.w	4059b8 <_dtoa_r+0xa98>
  40573a:	9b02      	ldr	r3, [sp, #8]
  40573c:	9315      	str	r3, [sp, #84]	; 0x54
  40573e:	9b07      	ldr	r3, [sp, #28]
  405740:	9312      	str	r3, [sp, #72]	; 0x48
  405742:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405744:	2b00      	cmp	r3, #0
  405746:	f000 81fb 	beq.w	405b40 <_dtoa_r+0xc20>
  40574a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40574c:	4b8c      	ldr	r3, [pc, #560]	; (405980 <_dtoa_r+0xa60>)
  40574e:	2000      	movs	r0, #0
  405750:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405754:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405758:	498d      	ldr	r1, [pc, #564]	; (405990 <_dtoa_r+0xa70>)
  40575a:	f002 f899 	bl	407890 <__aeabi_ddiv>
  40575e:	462a      	mov	r2, r5
  405760:	4633      	mov	r3, r6
  405762:	f001 fdb7 	bl	4072d4 <__aeabi_dsub>
  405766:	4682      	mov	sl, r0
  405768:	468b      	mov	fp, r1
  40576a:	4638      	mov	r0, r7
  40576c:	4641      	mov	r1, r8
  40576e:	f002 fa15 	bl	407b9c <__aeabi_d2iz>
  405772:	4605      	mov	r5, r0
  405774:	f001 fefc 	bl	407570 <__aeabi_i2d>
  405778:	4602      	mov	r2, r0
  40577a:	460b      	mov	r3, r1
  40577c:	4638      	mov	r0, r7
  40577e:	4641      	mov	r1, r8
  405780:	f001 fda8 	bl	4072d4 <__aeabi_dsub>
  405784:	3530      	adds	r5, #48	; 0x30
  405786:	fa5f f885 	uxtb.w	r8, r5
  40578a:	9d04      	ldr	r5, [sp, #16]
  40578c:	4606      	mov	r6, r0
  40578e:	460f      	mov	r7, r1
  405790:	f885 8000 	strb.w	r8, [r5]
  405794:	4602      	mov	r2, r0
  405796:	460b      	mov	r3, r1
  405798:	4650      	mov	r0, sl
  40579a:	4659      	mov	r1, fp
  40579c:	3501      	adds	r5, #1
  40579e:	f002 f9dd 	bl	407b5c <__aeabi_dcmpgt>
  4057a2:	2800      	cmp	r0, #0
  4057a4:	d154      	bne.n	405850 <_dtoa_r+0x930>
  4057a6:	4632      	mov	r2, r6
  4057a8:	463b      	mov	r3, r7
  4057aa:	2000      	movs	r0, #0
  4057ac:	4976      	ldr	r1, [pc, #472]	; (405988 <_dtoa_r+0xa68>)
  4057ae:	f001 fd91 	bl	4072d4 <__aeabi_dsub>
  4057b2:	4602      	mov	r2, r0
  4057b4:	460b      	mov	r3, r1
  4057b6:	4650      	mov	r0, sl
  4057b8:	4659      	mov	r1, fp
  4057ba:	f002 f9cf 	bl	407b5c <__aeabi_dcmpgt>
  4057be:	2800      	cmp	r0, #0
  4057c0:	f040 8270 	bne.w	405ca4 <_dtoa_r+0xd84>
  4057c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4057c6:	2a01      	cmp	r2, #1
  4057c8:	f000 8112 	beq.w	4059f0 <_dtoa_r+0xad0>
  4057cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4057ce:	9a04      	ldr	r2, [sp, #16]
  4057d0:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4057d4:	4413      	add	r3, r2
  4057d6:	4699      	mov	r9, r3
  4057d8:	e00f      	b.n	4057fa <_dtoa_r+0x8da>
  4057da:	4632      	mov	r2, r6
  4057dc:	463b      	mov	r3, r7
  4057de:	2000      	movs	r0, #0
  4057e0:	4969      	ldr	r1, [pc, #420]	; (405988 <_dtoa_r+0xa68>)
  4057e2:	f001 fd77 	bl	4072d4 <__aeabi_dsub>
  4057e6:	4652      	mov	r2, sl
  4057e8:	465b      	mov	r3, fp
  4057ea:	f002 f999 	bl	407b20 <__aeabi_dcmplt>
  4057ee:	2800      	cmp	r0, #0
  4057f0:	f040 8256 	bne.w	405ca0 <_dtoa_r+0xd80>
  4057f4:	454d      	cmp	r5, r9
  4057f6:	f000 80f9 	beq.w	4059ec <_dtoa_r+0xacc>
  4057fa:	4650      	mov	r0, sl
  4057fc:	4659      	mov	r1, fp
  4057fe:	2200      	movs	r2, #0
  405800:	4b64      	ldr	r3, [pc, #400]	; (405994 <_dtoa_r+0xa74>)
  405802:	f001 ff1b 	bl	40763c <__aeabi_dmul>
  405806:	2200      	movs	r2, #0
  405808:	4b62      	ldr	r3, [pc, #392]	; (405994 <_dtoa_r+0xa74>)
  40580a:	4682      	mov	sl, r0
  40580c:	468b      	mov	fp, r1
  40580e:	4630      	mov	r0, r6
  405810:	4639      	mov	r1, r7
  405812:	f001 ff13 	bl	40763c <__aeabi_dmul>
  405816:	460f      	mov	r7, r1
  405818:	4606      	mov	r6, r0
  40581a:	f002 f9bf 	bl	407b9c <__aeabi_d2iz>
  40581e:	4680      	mov	r8, r0
  405820:	f001 fea6 	bl	407570 <__aeabi_i2d>
  405824:	4602      	mov	r2, r0
  405826:	460b      	mov	r3, r1
  405828:	4630      	mov	r0, r6
  40582a:	4639      	mov	r1, r7
  40582c:	f001 fd52 	bl	4072d4 <__aeabi_dsub>
  405830:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405834:	fa5f f888 	uxtb.w	r8, r8
  405838:	f805 8b01 	strb.w	r8, [r5], #1
  40583c:	4652      	mov	r2, sl
  40583e:	465b      	mov	r3, fp
  405840:	4606      	mov	r6, r0
  405842:	460f      	mov	r7, r1
  405844:	f002 f96c 	bl	407b20 <__aeabi_dcmplt>
  405848:	2800      	cmp	r0, #0
  40584a:	d0c6      	beq.n	4057da <_dtoa_r+0x8ba>
  40584c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405850:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405852:	9302      	str	r3, [sp, #8]
  405854:	e523      	b.n	40529e <_dtoa_r+0x37e>
  405856:	2300      	movs	r3, #0
  405858:	930b      	str	r3, [sp, #44]	; 0x2c
  40585a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40585c:	2b00      	cmp	r3, #0
  40585e:	f340 80dd 	ble.w	405a1c <_dtoa_r+0xafc>
  405862:	461f      	mov	r7, r3
  405864:	461e      	mov	r6, r3
  405866:	930f      	str	r3, [sp, #60]	; 0x3c
  405868:	9307      	str	r3, [sp, #28]
  40586a:	e6f6      	b.n	40565a <_dtoa_r+0x73a>
  40586c:	2301      	movs	r3, #1
  40586e:	930b      	str	r3, [sp, #44]	; 0x2c
  405870:	e7f3      	b.n	40585a <_dtoa_r+0x93a>
  405872:	f1ba 0f00 	cmp.w	sl, #0
  405876:	f47f ada7 	bne.w	4053c8 <_dtoa_r+0x4a8>
  40587a:	f3cb 0313 	ubfx	r3, fp, #0, #20
  40587e:	2b00      	cmp	r3, #0
  405880:	f47f adbc 	bne.w	4053fc <_dtoa_r+0x4dc>
  405884:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405888:	0d3f      	lsrs	r7, r7, #20
  40588a:	053f      	lsls	r7, r7, #20
  40588c:	2f00      	cmp	r7, #0
  40588e:	f000 820d 	beq.w	405cac <_dtoa_r+0xd8c>
  405892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405894:	3301      	adds	r3, #1
  405896:	930a      	str	r3, [sp, #40]	; 0x28
  405898:	9b08      	ldr	r3, [sp, #32]
  40589a:	3301      	adds	r3, #1
  40589c:	9308      	str	r3, [sp, #32]
  40589e:	2301      	movs	r3, #1
  4058a0:	930c      	str	r3, [sp, #48]	; 0x30
  4058a2:	e5ad      	b.n	405400 <_dtoa_r+0x4e0>
  4058a4:	9b07      	ldr	r3, [sp, #28]
  4058a6:	2b00      	cmp	r3, #0
  4058a8:	f73f ac48 	bgt.w	40513c <_dtoa_r+0x21c>
  4058ac:	f040 8222 	bne.w	405cf4 <_dtoa_r+0xdd4>
  4058b0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4058b4:	2200      	movs	r2, #0
  4058b6:	4b38      	ldr	r3, [pc, #224]	; (405998 <_dtoa_r+0xa78>)
  4058b8:	f001 fec0 	bl	40763c <__aeabi_dmul>
  4058bc:	4652      	mov	r2, sl
  4058be:	465b      	mov	r3, fp
  4058c0:	f002 f942 	bl	407b48 <__aeabi_dcmpge>
  4058c4:	f8dd 801c 	ldr.w	r8, [sp, #28]
  4058c8:	4646      	mov	r6, r8
  4058ca:	2800      	cmp	r0, #0
  4058cc:	d041      	beq.n	405952 <_dtoa_r+0xa32>
  4058ce:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4058d0:	9d04      	ldr	r5, [sp, #16]
  4058d2:	43db      	mvns	r3, r3
  4058d4:	9302      	str	r3, [sp, #8]
  4058d6:	4641      	mov	r1, r8
  4058d8:	4620      	mov	r0, r4
  4058da:	f000 ff3d 	bl	406758 <_Bfree>
  4058de:	2e00      	cmp	r6, #0
  4058e0:	f43f acdd 	beq.w	40529e <_dtoa_r+0x37e>
  4058e4:	e6a7      	b.n	405636 <_dtoa_r+0x716>
  4058e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4058e8:	4649      	mov	r1, r9
  4058ea:	4620      	mov	r0, r4
  4058ec:	f001 f86c 	bl	4069c8 <__pow5mult>
  4058f0:	4681      	mov	r9, r0
  4058f2:	e557      	b.n	4053a4 <_dtoa_r+0x484>
  4058f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4058f6:	2a00      	cmp	r2, #0
  4058f8:	f000 8188 	beq.w	405c0c <_dtoa_r+0xcec>
  4058fc:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405900:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405902:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405904:	e4f2      	b.n	4052ec <_dtoa_r+0x3cc>
  405906:	f1ba 0f00 	cmp.w	sl, #0
  40590a:	f47f ad77 	bne.w	4053fc <_dtoa_r+0x4dc>
  40590e:	e7b4      	b.n	40587a <_dtoa_r+0x95a>
  405910:	f000 ff2c 	bl	40676c <__multadd>
  405914:	4647      	mov	r7, r8
  405916:	4606      	mov	r6, r0
  405918:	4683      	mov	fp, r0
  40591a:	e5c0      	b.n	40549e <_dtoa_r+0x57e>
  40591c:	4601      	mov	r1, r0
  40591e:	4620      	mov	r0, r4
  405920:	9308      	str	r3, [sp, #32]
  405922:	f000 ff19 	bl	406758 <_Bfree>
  405926:	2201      	movs	r2, #1
  405928:	9b08      	ldr	r3, [sp, #32]
  40592a:	e5e2      	b.n	4054f2 <_dtoa_r+0x5d2>
  40592c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40592e:	2b02      	cmp	r3, #2
  405930:	f77f ad98 	ble.w	405464 <_dtoa_r+0x544>
  405934:	9b07      	ldr	r3, [sp, #28]
  405936:	2b00      	cmp	r3, #0
  405938:	d1c9      	bne.n	4058ce <_dtoa_r+0x9ae>
  40593a:	4641      	mov	r1, r8
  40593c:	2205      	movs	r2, #5
  40593e:	4620      	mov	r0, r4
  405940:	f000 ff14 	bl	40676c <__multadd>
  405944:	4601      	mov	r1, r0
  405946:	4680      	mov	r8, r0
  405948:	4648      	mov	r0, r9
  40594a:	f001 f8dd 	bl	406b08 <__mcmp>
  40594e:	2800      	cmp	r0, #0
  405950:	ddbd      	ble.n	4058ce <_dtoa_r+0x9ae>
  405952:	2331      	movs	r3, #49	; 0x31
  405954:	9a02      	ldr	r2, [sp, #8]
  405956:	9904      	ldr	r1, [sp, #16]
  405958:	3201      	adds	r2, #1
  40595a:	9202      	str	r2, [sp, #8]
  40595c:	700b      	strb	r3, [r1, #0]
  40595e:	1c4d      	adds	r5, r1, #1
  405960:	e7b9      	b.n	4058d6 <_dtoa_r+0x9b6>
  405962:	2331      	movs	r3, #49	; 0x31
  405964:	9a02      	ldr	r2, [sp, #8]
  405966:	3201      	adds	r2, #1
  405968:	9202      	str	r2, [sp, #8]
  40596a:	9a04      	ldr	r2, [sp, #16]
  40596c:	7013      	strb	r3, [r2, #0]
  40596e:	e652      	b.n	405616 <_dtoa_r+0x6f6>
  405970:	2301      	movs	r3, #1
  405972:	930b      	str	r3, [sp, #44]	; 0x2c
  405974:	e666      	b.n	405644 <_dtoa_r+0x724>
  405976:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  40597a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40597c:	e48f      	b.n	40529e <_dtoa_r+0x37e>
  40597e:	bf00      	nop
  405980:	00408100 	.word	0x00408100
  405984:	004080d8 	.word	0x004080d8
  405988:	3ff00000 	.word	0x3ff00000
  40598c:	401c0000 	.word	0x401c0000
  405990:	3fe00000 	.word	0x3fe00000
  405994:	40240000 	.word	0x40240000
  405998:	40140000 	.word	0x40140000
  40599c:	4650      	mov	r0, sl
  40599e:	f001 fde7 	bl	407570 <__aeabi_i2d>
  4059a2:	463a      	mov	r2, r7
  4059a4:	4643      	mov	r3, r8
  4059a6:	f001 fe49 	bl	40763c <__aeabi_dmul>
  4059aa:	2200      	movs	r2, #0
  4059ac:	4bc1      	ldr	r3, [pc, #772]	; (405cb4 <_dtoa_r+0xd94>)
  4059ae:	f001 fc93 	bl	4072d8 <__adddf3>
  4059b2:	4605      	mov	r5, r0
  4059b4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4059b8:	4641      	mov	r1, r8
  4059ba:	2200      	movs	r2, #0
  4059bc:	4bbe      	ldr	r3, [pc, #760]	; (405cb8 <_dtoa_r+0xd98>)
  4059be:	4638      	mov	r0, r7
  4059c0:	f001 fc88 	bl	4072d4 <__aeabi_dsub>
  4059c4:	462a      	mov	r2, r5
  4059c6:	4633      	mov	r3, r6
  4059c8:	4682      	mov	sl, r0
  4059ca:	468b      	mov	fp, r1
  4059cc:	f002 f8c6 	bl	407b5c <__aeabi_dcmpgt>
  4059d0:	4680      	mov	r8, r0
  4059d2:	2800      	cmp	r0, #0
  4059d4:	f040 8110 	bne.w	405bf8 <_dtoa_r+0xcd8>
  4059d8:	462a      	mov	r2, r5
  4059da:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4059de:	4650      	mov	r0, sl
  4059e0:	4659      	mov	r1, fp
  4059e2:	f002 f89d 	bl	407b20 <__aeabi_dcmplt>
  4059e6:	b118      	cbz	r0, 4059f0 <_dtoa_r+0xad0>
  4059e8:	4646      	mov	r6, r8
  4059ea:	e770      	b.n	4058ce <_dtoa_r+0x9ae>
  4059ec:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4059f0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4059f4:	f7ff bb8f 	b.w	405116 <_dtoa_r+0x1f6>
  4059f8:	9804      	ldr	r0, [sp, #16]
  4059fa:	f7ff bac0 	b.w	404f7e <_dtoa_r+0x5e>
  4059fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405a00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405a02:	1afb      	subs	r3, r7, r3
  405a04:	441a      	add	r2, r3
  405a06:	970c      	str	r7, [sp, #48]	; 0x30
  405a08:	920d      	str	r2, [sp, #52]	; 0x34
  405a0a:	2700      	movs	r7, #0
  405a0c:	e468      	b.n	4052e0 <_dtoa_r+0x3c0>
  405a0e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405a12:	f04f 0a02 	mov.w	sl, #2
  405a16:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  405a1a:	e656      	b.n	4056ca <_dtoa_r+0x7aa>
  405a1c:	2100      	movs	r1, #0
  405a1e:	2301      	movs	r3, #1
  405a20:	4620      	mov	r0, r4
  405a22:	6461      	str	r1, [r4, #68]	; 0x44
  405a24:	9325      	str	r3, [sp, #148]	; 0x94
  405a26:	f000 fe71 	bl	40670c <_Balloc>
  405a2a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405a2c:	9004      	str	r0, [sp, #16]
  405a2e:	9307      	str	r3, [sp, #28]
  405a30:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405a32:	6420      	str	r0, [r4, #64]	; 0x40
  405a34:	930f      	str	r3, [sp, #60]	; 0x3c
  405a36:	e627      	b.n	405688 <_dtoa_r+0x768>
  405a38:	2a00      	cmp	r2, #0
  405a3a:	46d0      	mov	r8, sl
  405a3c:	f8cd b020 	str.w	fp, [sp, #32]
  405a40:	469a      	mov	sl, r3
  405a42:	dd11      	ble.n	405a68 <_dtoa_r+0xb48>
  405a44:	4649      	mov	r1, r9
  405a46:	2201      	movs	r2, #1
  405a48:	4620      	mov	r0, r4
  405a4a:	f001 f80d 	bl	406a68 <__lshift>
  405a4e:	4641      	mov	r1, r8
  405a50:	4681      	mov	r9, r0
  405a52:	f001 f859 	bl	406b08 <__mcmp>
  405a56:	2800      	cmp	r0, #0
  405a58:	f340 8145 	ble.w	405ce6 <_dtoa_r+0xdc6>
  405a5c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  405a60:	f000 8105 	beq.w	405c6e <_dtoa_r+0xd4e>
  405a64:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  405a68:	46b3      	mov	fp, r6
  405a6a:	f887 a000 	strb.w	sl, [r7]
  405a6e:	1c7d      	adds	r5, r7, #1
  405a70:	9e08      	ldr	r6, [sp, #32]
  405a72:	e5d0      	b.n	405616 <_dtoa_r+0x6f6>
  405a74:	d104      	bne.n	405a80 <_dtoa_r+0xb60>
  405a76:	f01a 0f01 	tst.w	sl, #1
  405a7a:	d001      	beq.n	405a80 <_dtoa_r+0xb60>
  405a7c:	e5bb      	b.n	4055f6 <_dtoa_r+0x6d6>
  405a7e:	4615      	mov	r5, r2
  405a80:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405a84:	1e6a      	subs	r2, r5, #1
  405a86:	2b30      	cmp	r3, #48	; 0x30
  405a88:	d0f9      	beq.n	405a7e <_dtoa_r+0xb5e>
  405a8a:	e5c4      	b.n	405616 <_dtoa_r+0x6f6>
  405a8c:	2230      	movs	r2, #48	; 0x30
  405a8e:	9904      	ldr	r1, [sp, #16]
  405a90:	700a      	strb	r2, [r1, #0]
  405a92:	9a02      	ldr	r2, [sp, #8]
  405a94:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405a98:	3201      	adds	r2, #1
  405a9a:	9202      	str	r2, [sp, #8]
  405a9c:	f7ff bbfb 	b.w	405296 <_dtoa_r+0x376>
  405aa0:	f000 80bb 	beq.w	405c1a <_dtoa_r+0xcfa>
  405aa4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  405aa8:	9b02      	ldr	r3, [sp, #8]
  405aaa:	f04f 0a02 	mov.w	sl, #2
  405aae:	425d      	negs	r5, r3
  405ab0:	4b82      	ldr	r3, [pc, #520]	; (405cbc <_dtoa_r+0xd9c>)
  405ab2:	f005 020f 	and.w	r2, r5, #15
  405ab6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405aba:	e9d3 2300 	ldrd	r2, r3, [r3]
  405abe:	f001 fdbd 	bl	40763c <__aeabi_dmul>
  405ac2:	112d      	asrs	r5, r5, #4
  405ac4:	4607      	mov	r7, r0
  405ac6:	4688      	mov	r8, r1
  405ac8:	f43f ae1a 	beq.w	405700 <_dtoa_r+0x7e0>
  405acc:	4e7c      	ldr	r6, [pc, #496]	; (405cc0 <_dtoa_r+0xda0>)
  405ace:	07eb      	lsls	r3, r5, #31
  405ad0:	d509      	bpl.n	405ae6 <_dtoa_r+0xbc6>
  405ad2:	e9d6 2300 	ldrd	r2, r3, [r6]
  405ad6:	4638      	mov	r0, r7
  405ad8:	4641      	mov	r1, r8
  405ada:	f001 fdaf 	bl	40763c <__aeabi_dmul>
  405ade:	4607      	mov	r7, r0
  405ae0:	4688      	mov	r8, r1
  405ae2:	f10a 0a01 	add.w	sl, sl, #1
  405ae6:	106d      	asrs	r5, r5, #1
  405ae8:	f106 0608 	add.w	r6, r6, #8
  405aec:	d1ef      	bne.n	405ace <_dtoa_r+0xbae>
  405aee:	e607      	b.n	405700 <_dtoa_r+0x7e0>
  405af0:	6871      	ldr	r1, [r6, #4]
  405af2:	4620      	mov	r0, r4
  405af4:	f000 fe0a 	bl	40670c <_Balloc>
  405af8:	4605      	mov	r5, r0
  405afa:	6933      	ldr	r3, [r6, #16]
  405afc:	f106 010c 	add.w	r1, r6, #12
  405b00:	3302      	adds	r3, #2
  405b02:	009a      	lsls	r2, r3, #2
  405b04:	300c      	adds	r0, #12
  405b06:	f7fd fd25 	bl	403554 <memcpy>
  405b0a:	4629      	mov	r1, r5
  405b0c:	2201      	movs	r2, #1
  405b0e:	4620      	mov	r0, r4
  405b10:	f000 ffaa 	bl	406a68 <__lshift>
  405b14:	9008      	str	r0, [sp, #32]
  405b16:	e4b6      	b.n	405486 <_dtoa_r+0x566>
  405b18:	2b39      	cmp	r3, #57	; 0x39
  405b1a:	f8cd b020 	str.w	fp, [sp, #32]
  405b1e:	46d0      	mov	r8, sl
  405b20:	f000 80a5 	beq.w	405c6e <_dtoa_r+0xd4e>
  405b24:	f103 0a01 	add.w	sl, r3, #1
  405b28:	46b3      	mov	fp, r6
  405b2a:	f887 a000 	strb.w	sl, [r7]
  405b2e:	1c7d      	adds	r5, r7, #1
  405b30:	9e08      	ldr	r6, [sp, #32]
  405b32:	e570      	b.n	405616 <_dtoa_r+0x6f6>
  405b34:	465a      	mov	r2, fp
  405b36:	46d0      	mov	r8, sl
  405b38:	46b3      	mov	fp, r6
  405b3a:	469a      	mov	sl, r3
  405b3c:	4616      	mov	r6, r2
  405b3e:	e54e      	b.n	4055de <_dtoa_r+0x6be>
  405b40:	9812      	ldr	r0, [sp, #72]	; 0x48
  405b42:	495e      	ldr	r1, [pc, #376]	; (405cbc <_dtoa_r+0xd9c>)
  405b44:	462a      	mov	r2, r5
  405b46:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
  405b4a:	4633      	mov	r3, r6
  405b4c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  405b50:	f001 fd74 	bl	40763c <__aeabi_dmul>
  405b54:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  405b58:	4638      	mov	r0, r7
  405b5a:	4641      	mov	r1, r8
  405b5c:	f002 f81e 	bl	407b9c <__aeabi_d2iz>
  405b60:	4605      	mov	r5, r0
  405b62:	f001 fd05 	bl	407570 <__aeabi_i2d>
  405b66:	4602      	mov	r2, r0
  405b68:	460b      	mov	r3, r1
  405b6a:	4638      	mov	r0, r7
  405b6c:	4641      	mov	r1, r8
  405b6e:	f001 fbb1 	bl	4072d4 <__aeabi_dsub>
  405b72:	4606      	mov	r6, r0
  405b74:	9812      	ldr	r0, [sp, #72]	; 0x48
  405b76:	9a04      	ldr	r2, [sp, #16]
  405b78:	3530      	adds	r5, #48	; 0x30
  405b7a:	2801      	cmp	r0, #1
  405b7c:	7015      	strb	r5, [r2, #0]
  405b7e:	460f      	mov	r7, r1
  405b80:	f102 0501 	add.w	r5, r2, #1
  405b84:	d026      	beq.n	405bd4 <_dtoa_r+0xcb4>
  405b86:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405b88:	9a04      	ldr	r2, [sp, #16]
  405b8a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405b8e:	4413      	add	r3, r2
  405b90:	f04f 0a00 	mov.w	sl, #0
  405b94:	4699      	mov	r9, r3
  405b96:	f8df b130 	ldr.w	fp, [pc, #304]	; 405cc8 <_dtoa_r+0xda8>
  405b9a:	4652      	mov	r2, sl
  405b9c:	465b      	mov	r3, fp
  405b9e:	4630      	mov	r0, r6
  405ba0:	4639      	mov	r1, r7
  405ba2:	f001 fd4b 	bl	40763c <__aeabi_dmul>
  405ba6:	460f      	mov	r7, r1
  405ba8:	4606      	mov	r6, r0
  405baa:	f001 fff7 	bl	407b9c <__aeabi_d2iz>
  405bae:	4680      	mov	r8, r0
  405bb0:	f001 fcde 	bl	407570 <__aeabi_i2d>
  405bb4:	4602      	mov	r2, r0
  405bb6:	460b      	mov	r3, r1
  405bb8:	4630      	mov	r0, r6
  405bba:	4639      	mov	r1, r7
  405bbc:	f001 fb8a 	bl	4072d4 <__aeabi_dsub>
  405bc0:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405bc4:	f805 8b01 	strb.w	r8, [r5], #1
  405bc8:	454d      	cmp	r5, r9
  405bca:	4606      	mov	r6, r0
  405bcc:	460f      	mov	r7, r1
  405bce:	d1e4      	bne.n	405b9a <_dtoa_r+0xc7a>
  405bd0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405bd4:	2200      	movs	r2, #0
  405bd6:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  405bda:	4b3a      	ldr	r3, [pc, #232]	; (405cc4 <_dtoa_r+0xda4>)
  405bdc:	f001 fb7c 	bl	4072d8 <__adddf3>
  405be0:	4632      	mov	r2, r6
  405be2:	463b      	mov	r3, r7
  405be4:	f001 ff9c 	bl	407b20 <__aeabi_dcmplt>
  405be8:	2800      	cmp	r0, #0
  405bea:	d046      	beq.n	405c7a <_dtoa_r+0xd5a>
  405bec:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405bee:	9302      	str	r3, [sp, #8]
  405bf0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405bf4:	f7ff bb42 	b.w	40527c <_dtoa_r+0x35c>
  405bf8:	f04f 0800 	mov.w	r8, #0
  405bfc:	4646      	mov	r6, r8
  405bfe:	e6a8      	b.n	405952 <_dtoa_r+0xa32>
  405c00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405c02:	9a07      	ldr	r2, [sp, #28]
  405c04:	1a9d      	subs	r5, r3, r2
  405c06:	2300      	movs	r3, #0
  405c08:	f7ff bb70 	b.w	4052ec <_dtoa_r+0x3cc>
  405c0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  405c0e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405c10:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  405c14:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405c16:	f7ff bb69 	b.w	4052ec <_dtoa_r+0x3cc>
  405c1a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  405c1e:	f04f 0a02 	mov.w	sl, #2
  405c22:	e56d      	b.n	405700 <_dtoa_r+0x7e0>
  405c24:	9b07      	ldr	r3, [sp, #28]
  405c26:	2b00      	cmp	r3, #0
  405c28:	f43f aeb8 	beq.w	40599c <_dtoa_r+0xa7c>
  405c2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405c2e:	2b00      	cmp	r3, #0
  405c30:	f77f aede 	ble.w	4059f0 <_dtoa_r+0xad0>
  405c34:	2200      	movs	r2, #0
  405c36:	4b24      	ldr	r3, [pc, #144]	; (405cc8 <_dtoa_r+0xda8>)
  405c38:	4638      	mov	r0, r7
  405c3a:	4641      	mov	r1, r8
  405c3c:	f001 fcfe 	bl	40763c <__aeabi_dmul>
  405c40:	4607      	mov	r7, r0
  405c42:	4688      	mov	r8, r1
  405c44:	f10a 0001 	add.w	r0, sl, #1
  405c48:	f001 fc92 	bl	407570 <__aeabi_i2d>
  405c4c:	463a      	mov	r2, r7
  405c4e:	4643      	mov	r3, r8
  405c50:	f001 fcf4 	bl	40763c <__aeabi_dmul>
  405c54:	2200      	movs	r2, #0
  405c56:	4b17      	ldr	r3, [pc, #92]	; (405cb4 <_dtoa_r+0xd94>)
  405c58:	f001 fb3e 	bl	4072d8 <__adddf3>
  405c5c:	9a02      	ldr	r2, [sp, #8]
  405c5e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405c60:	3a01      	subs	r2, #1
  405c62:	4605      	mov	r5, r0
  405c64:	9215      	str	r2, [sp, #84]	; 0x54
  405c66:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405c6a:	9312      	str	r3, [sp, #72]	; 0x48
  405c6c:	e569      	b.n	405742 <_dtoa_r+0x822>
  405c6e:	2239      	movs	r2, #57	; 0x39
  405c70:	46b3      	mov	fp, r6
  405c72:	703a      	strb	r2, [r7, #0]
  405c74:	9e08      	ldr	r6, [sp, #32]
  405c76:	1c7d      	adds	r5, r7, #1
  405c78:	e4bf      	b.n	4055fa <_dtoa_r+0x6da>
  405c7a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  405c7e:	2000      	movs	r0, #0
  405c80:	4910      	ldr	r1, [pc, #64]	; (405cc4 <_dtoa_r+0xda4>)
  405c82:	f001 fb27 	bl	4072d4 <__aeabi_dsub>
  405c86:	4632      	mov	r2, r6
  405c88:	463b      	mov	r3, r7
  405c8a:	f001 ff67 	bl	407b5c <__aeabi_dcmpgt>
  405c8e:	b908      	cbnz	r0, 405c94 <_dtoa_r+0xd74>
  405c90:	e6ae      	b.n	4059f0 <_dtoa_r+0xad0>
  405c92:	4615      	mov	r5, r2
  405c94:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405c98:	1e6a      	subs	r2, r5, #1
  405c9a:	2b30      	cmp	r3, #48	; 0x30
  405c9c:	d0f9      	beq.n	405c92 <_dtoa_r+0xd72>
  405c9e:	e5d7      	b.n	405850 <_dtoa_r+0x930>
  405ca0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405ca4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405ca6:	9302      	str	r3, [sp, #8]
  405ca8:	f7ff bae8 	b.w	40527c <_dtoa_r+0x35c>
  405cac:	970c      	str	r7, [sp, #48]	; 0x30
  405cae:	f7ff bba7 	b.w	405400 <_dtoa_r+0x4e0>
  405cb2:	bf00      	nop
  405cb4:	401c0000 	.word	0x401c0000
  405cb8:	40140000 	.word	0x40140000
  405cbc:	00408100 	.word	0x00408100
  405cc0:	004080d8 	.word	0x004080d8
  405cc4:	3fe00000 	.word	0x3fe00000
  405cc8:	40240000 	.word	0x40240000
  405ccc:	2b39      	cmp	r3, #57	; 0x39
  405cce:	f8cd b020 	str.w	fp, [sp, #32]
  405cd2:	46d0      	mov	r8, sl
  405cd4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  405cd8:	469a      	mov	sl, r3
  405cda:	d0c8      	beq.n	405c6e <_dtoa_r+0xd4e>
  405cdc:	f1bb 0f00 	cmp.w	fp, #0
  405ce0:	f73f aec0 	bgt.w	405a64 <_dtoa_r+0xb44>
  405ce4:	e6c0      	b.n	405a68 <_dtoa_r+0xb48>
  405ce6:	f47f aebf 	bne.w	405a68 <_dtoa_r+0xb48>
  405cea:	f01a 0f01 	tst.w	sl, #1
  405cee:	f43f aebb 	beq.w	405a68 <_dtoa_r+0xb48>
  405cf2:	e6b3      	b.n	405a5c <_dtoa_r+0xb3c>
  405cf4:	f04f 0800 	mov.w	r8, #0
  405cf8:	4646      	mov	r6, r8
  405cfa:	e5e8      	b.n	4058ce <_dtoa_r+0x9ae>
  405cfc:	4631      	mov	r1, r6
  405cfe:	2300      	movs	r3, #0
  405d00:	220a      	movs	r2, #10
  405d02:	4620      	mov	r0, r4
  405d04:	f000 fd32 	bl	40676c <__multadd>
  405d08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405d0a:	4606      	mov	r6, r0
  405d0c:	2b00      	cmp	r3, #0
  405d0e:	dd07      	ble.n	405d20 <_dtoa_r+0xe00>
  405d10:	9307      	str	r3, [sp, #28]
  405d12:	f7ff bbab 	b.w	40546c <_dtoa_r+0x54c>
  405d16:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405d18:	2b02      	cmp	r3, #2
  405d1a:	dc1f      	bgt.n	405d5c <_dtoa_r+0xe3c>
  405d1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405d1e:	e43c      	b.n	40559a <_dtoa_r+0x67a>
  405d20:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405d22:	2b02      	cmp	r3, #2
  405d24:	dc1a      	bgt.n	405d5c <_dtoa_r+0xe3c>
  405d26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405d28:	e7f2      	b.n	405d10 <_dtoa_r+0xdf0>
  405d2a:	f43f ab81 	beq.w	405430 <_dtoa_r+0x510>
  405d2e:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  405d32:	e411      	b.n	405558 <_dtoa_r+0x638>
  405d34:	2500      	movs	r5, #0
  405d36:	4620      	mov	r0, r4
  405d38:	6465      	str	r5, [r4, #68]	; 0x44
  405d3a:	4629      	mov	r1, r5
  405d3c:	f000 fce6 	bl	40670c <_Balloc>
  405d40:	f04f 33ff 	mov.w	r3, #4294967295
  405d44:	9307      	str	r3, [sp, #28]
  405d46:	930f      	str	r3, [sp, #60]	; 0x3c
  405d48:	2301      	movs	r3, #1
  405d4a:	9004      	str	r0, [sp, #16]
  405d4c:	9525      	str	r5, [sp, #148]	; 0x94
  405d4e:	6420      	str	r0, [r4, #64]	; 0x40
  405d50:	930b      	str	r3, [sp, #44]	; 0x2c
  405d52:	f7ff b9e0 	b.w	405116 <_dtoa_r+0x1f6>
  405d56:	2501      	movs	r5, #1
  405d58:	f7ff b9a8 	b.w	4050ac <_dtoa_r+0x18c>
  405d5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405d5e:	9307      	str	r3, [sp, #28]
  405d60:	e5e8      	b.n	405934 <_dtoa_r+0xa14>
  405d62:	bf00      	nop

00405d64 <__libc_fini_array>:
  405d64:	b538      	push	{r3, r4, r5, lr}
  405d66:	4c0a      	ldr	r4, [pc, #40]	; (405d90 <__libc_fini_array+0x2c>)
  405d68:	4d0a      	ldr	r5, [pc, #40]	; (405d94 <__libc_fini_array+0x30>)
  405d6a:	1b64      	subs	r4, r4, r5
  405d6c:	10a4      	asrs	r4, r4, #2
  405d6e:	d00a      	beq.n	405d86 <__libc_fini_array+0x22>
  405d70:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  405d74:	3b01      	subs	r3, #1
  405d76:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  405d7a:	3c01      	subs	r4, #1
  405d7c:	f855 3904 	ldr.w	r3, [r5], #-4
  405d80:	4798      	blx	r3
  405d82:	2c00      	cmp	r4, #0
  405d84:	d1f9      	bne.n	405d7a <__libc_fini_array+0x16>
  405d86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  405d8a:	f002 baaf 	b.w	4082ec <_fini>
  405d8e:	bf00      	nop
  405d90:	004082fc 	.word	0x004082fc
  405d94:	004082f8 	.word	0x004082f8

00405d98 <_malloc_trim_r>:
  405d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405d9a:	460c      	mov	r4, r1
  405d9c:	4f23      	ldr	r7, [pc, #140]	; (405e2c <_malloc_trim_r+0x94>)
  405d9e:	4606      	mov	r6, r0
  405da0:	f000 fca8 	bl	4066f4 <__malloc_lock>
  405da4:	68bb      	ldr	r3, [r7, #8]
  405da6:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405daa:	685d      	ldr	r5, [r3, #4]
  405dac:	310f      	adds	r1, #15
  405dae:	f025 0503 	bic.w	r5, r5, #3
  405db2:	4429      	add	r1, r5
  405db4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  405db8:	f021 010f 	bic.w	r1, r1, #15
  405dbc:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405dc0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405dc4:	db07      	blt.n	405dd6 <_malloc_trim_r+0x3e>
  405dc6:	2100      	movs	r1, #0
  405dc8:	4630      	mov	r0, r6
  405dca:	f001 f951 	bl	407070 <_sbrk_r>
  405dce:	68bb      	ldr	r3, [r7, #8]
  405dd0:	442b      	add	r3, r5
  405dd2:	4298      	cmp	r0, r3
  405dd4:	d004      	beq.n	405de0 <_malloc_trim_r+0x48>
  405dd6:	4630      	mov	r0, r6
  405dd8:	f000 fc92 	bl	406700 <__malloc_unlock>
  405ddc:	2000      	movs	r0, #0
  405dde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405de0:	4261      	negs	r1, r4
  405de2:	4630      	mov	r0, r6
  405de4:	f001 f944 	bl	407070 <_sbrk_r>
  405de8:	3001      	adds	r0, #1
  405dea:	d00d      	beq.n	405e08 <_malloc_trim_r+0x70>
  405dec:	4b10      	ldr	r3, [pc, #64]	; (405e30 <_malloc_trim_r+0x98>)
  405dee:	68ba      	ldr	r2, [r7, #8]
  405df0:	6819      	ldr	r1, [r3, #0]
  405df2:	1b2d      	subs	r5, r5, r4
  405df4:	f045 0501 	orr.w	r5, r5, #1
  405df8:	4630      	mov	r0, r6
  405dfa:	1b09      	subs	r1, r1, r4
  405dfc:	6055      	str	r5, [r2, #4]
  405dfe:	6019      	str	r1, [r3, #0]
  405e00:	f000 fc7e 	bl	406700 <__malloc_unlock>
  405e04:	2001      	movs	r0, #1
  405e06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405e08:	2100      	movs	r1, #0
  405e0a:	4630      	mov	r0, r6
  405e0c:	f001 f930 	bl	407070 <_sbrk_r>
  405e10:	68ba      	ldr	r2, [r7, #8]
  405e12:	1a83      	subs	r3, r0, r2
  405e14:	2b0f      	cmp	r3, #15
  405e16:	ddde      	ble.n	405dd6 <_malloc_trim_r+0x3e>
  405e18:	4c06      	ldr	r4, [pc, #24]	; (405e34 <_malloc_trim_r+0x9c>)
  405e1a:	4905      	ldr	r1, [pc, #20]	; (405e30 <_malloc_trim_r+0x98>)
  405e1c:	6824      	ldr	r4, [r4, #0]
  405e1e:	f043 0301 	orr.w	r3, r3, #1
  405e22:	1b00      	subs	r0, r0, r4
  405e24:	6053      	str	r3, [r2, #4]
  405e26:	6008      	str	r0, [r1, #0]
  405e28:	e7d5      	b.n	405dd6 <_malloc_trim_r+0x3e>
  405e2a:	bf00      	nop
  405e2c:	200007a8 	.word	0x200007a8
  405e30:	20000e14 	.word	0x20000e14
  405e34:	20000bb0 	.word	0x20000bb0

00405e38 <_free_r>:
  405e38:	2900      	cmp	r1, #0
  405e3a:	d044      	beq.n	405ec6 <_free_r+0x8e>
  405e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405e40:	460d      	mov	r5, r1
  405e42:	4680      	mov	r8, r0
  405e44:	f000 fc56 	bl	4066f4 <__malloc_lock>
  405e48:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405e4c:	4969      	ldr	r1, [pc, #420]	; (405ff4 <_free_r+0x1bc>)
  405e4e:	f1a5 0408 	sub.w	r4, r5, #8
  405e52:	f027 0301 	bic.w	r3, r7, #1
  405e56:	18e2      	adds	r2, r4, r3
  405e58:	688e      	ldr	r6, [r1, #8]
  405e5a:	6850      	ldr	r0, [r2, #4]
  405e5c:	42b2      	cmp	r2, r6
  405e5e:	f020 0003 	bic.w	r0, r0, #3
  405e62:	d05e      	beq.n	405f22 <_free_r+0xea>
  405e64:	07fe      	lsls	r6, r7, #31
  405e66:	6050      	str	r0, [r2, #4]
  405e68:	d40b      	bmi.n	405e82 <_free_r+0x4a>
  405e6a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405e6e:	f101 0e08 	add.w	lr, r1, #8
  405e72:	1be4      	subs	r4, r4, r7
  405e74:	68a5      	ldr	r5, [r4, #8]
  405e76:	443b      	add	r3, r7
  405e78:	4575      	cmp	r5, lr
  405e7a:	d06d      	beq.n	405f58 <_free_r+0x120>
  405e7c:	68e7      	ldr	r7, [r4, #12]
  405e7e:	60ef      	str	r7, [r5, #12]
  405e80:	60bd      	str	r5, [r7, #8]
  405e82:	1815      	adds	r5, r2, r0
  405e84:	686d      	ldr	r5, [r5, #4]
  405e86:	07ed      	lsls	r5, r5, #31
  405e88:	d53e      	bpl.n	405f08 <_free_r+0xd0>
  405e8a:	f043 0201 	orr.w	r2, r3, #1
  405e8e:	6062      	str	r2, [r4, #4]
  405e90:	50e3      	str	r3, [r4, r3]
  405e92:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405e96:	d217      	bcs.n	405ec8 <_free_r+0x90>
  405e98:	2201      	movs	r2, #1
  405e9a:	08db      	lsrs	r3, r3, #3
  405e9c:	1098      	asrs	r0, r3, #2
  405e9e:	684d      	ldr	r5, [r1, #4]
  405ea0:	4413      	add	r3, r2
  405ea2:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
  405ea6:	4082      	lsls	r2, r0
  405ea8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
  405eac:	432a      	orrs	r2, r5
  405eae:	3808      	subs	r0, #8
  405eb0:	60e0      	str	r0, [r4, #12]
  405eb2:	60a7      	str	r7, [r4, #8]
  405eb4:	604a      	str	r2, [r1, #4]
  405eb6:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
  405eba:	60fc      	str	r4, [r7, #12]
  405ebc:	4640      	mov	r0, r8
  405ebe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405ec2:	f000 bc1d 	b.w	406700 <__malloc_unlock>
  405ec6:	4770      	bx	lr
  405ec8:	0a5a      	lsrs	r2, r3, #9
  405eca:	2a04      	cmp	r2, #4
  405ecc:	d852      	bhi.n	405f74 <_free_r+0x13c>
  405ece:	099a      	lsrs	r2, r3, #6
  405ed0:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405ed4:	00ff      	lsls	r7, r7, #3
  405ed6:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405eda:	19c8      	adds	r0, r1, r7
  405edc:	59ca      	ldr	r2, [r1, r7]
  405ede:	3808      	subs	r0, #8
  405ee0:	4290      	cmp	r0, r2
  405ee2:	d04f      	beq.n	405f84 <_free_r+0x14c>
  405ee4:	6851      	ldr	r1, [r2, #4]
  405ee6:	f021 0103 	bic.w	r1, r1, #3
  405eea:	428b      	cmp	r3, r1
  405eec:	d232      	bcs.n	405f54 <_free_r+0x11c>
  405eee:	6892      	ldr	r2, [r2, #8]
  405ef0:	4290      	cmp	r0, r2
  405ef2:	d1f7      	bne.n	405ee4 <_free_r+0xac>
  405ef4:	68c3      	ldr	r3, [r0, #12]
  405ef6:	60a0      	str	r0, [r4, #8]
  405ef8:	60e3      	str	r3, [r4, #12]
  405efa:	609c      	str	r4, [r3, #8]
  405efc:	60c4      	str	r4, [r0, #12]
  405efe:	4640      	mov	r0, r8
  405f00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405f04:	f000 bbfc 	b.w	406700 <__malloc_unlock>
  405f08:	6895      	ldr	r5, [r2, #8]
  405f0a:	4f3b      	ldr	r7, [pc, #236]	; (405ff8 <_free_r+0x1c0>)
  405f0c:	4403      	add	r3, r0
  405f0e:	42bd      	cmp	r5, r7
  405f10:	d040      	beq.n	405f94 <_free_r+0x15c>
  405f12:	68d0      	ldr	r0, [r2, #12]
  405f14:	f043 0201 	orr.w	r2, r3, #1
  405f18:	60e8      	str	r0, [r5, #12]
  405f1a:	6085      	str	r5, [r0, #8]
  405f1c:	6062      	str	r2, [r4, #4]
  405f1e:	50e3      	str	r3, [r4, r3]
  405f20:	e7b7      	b.n	405e92 <_free_r+0x5a>
  405f22:	07ff      	lsls	r7, r7, #31
  405f24:	4403      	add	r3, r0
  405f26:	d407      	bmi.n	405f38 <_free_r+0x100>
  405f28:	f855 5c08 	ldr.w	r5, [r5, #-8]
  405f2c:	1b64      	subs	r4, r4, r5
  405f2e:	68e2      	ldr	r2, [r4, #12]
  405f30:	68a0      	ldr	r0, [r4, #8]
  405f32:	442b      	add	r3, r5
  405f34:	60c2      	str	r2, [r0, #12]
  405f36:	6090      	str	r0, [r2, #8]
  405f38:	4a30      	ldr	r2, [pc, #192]	; (405ffc <_free_r+0x1c4>)
  405f3a:	f043 0001 	orr.w	r0, r3, #1
  405f3e:	6812      	ldr	r2, [r2, #0]
  405f40:	6060      	str	r0, [r4, #4]
  405f42:	4293      	cmp	r3, r2
  405f44:	608c      	str	r4, [r1, #8]
  405f46:	d3b9      	bcc.n	405ebc <_free_r+0x84>
  405f48:	4b2d      	ldr	r3, [pc, #180]	; (406000 <_free_r+0x1c8>)
  405f4a:	4640      	mov	r0, r8
  405f4c:	6819      	ldr	r1, [r3, #0]
  405f4e:	f7ff ff23 	bl	405d98 <_malloc_trim_r>
  405f52:	e7b3      	b.n	405ebc <_free_r+0x84>
  405f54:	4610      	mov	r0, r2
  405f56:	e7cd      	b.n	405ef4 <_free_r+0xbc>
  405f58:	1811      	adds	r1, r2, r0
  405f5a:	6849      	ldr	r1, [r1, #4]
  405f5c:	07c9      	lsls	r1, r1, #31
  405f5e:	d444      	bmi.n	405fea <_free_r+0x1b2>
  405f60:	6891      	ldr	r1, [r2, #8]
  405f62:	4403      	add	r3, r0
  405f64:	68d2      	ldr	r2, [r2, #12]
  405f66:	f043 0001 	orr.w	r0, r3, #1
  405f6a:	60ca      	str	r2, [r1, #12]
  405f6c:	6091      	str	r1, [r2, #8]
  405f6e:	6060      	str	r0, [r4, #4]
  405f70:	50e3      	str	r3, [r4, r3]
  405f72:	e7a3      	b.n	405ebc <_free_r+0x84>
  405f74:	2a14      	cmp	r2, #20
  405f76:	d816      	bhi.n	405fa6 <_free_r+0x16e>
  405f78:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405f7c:	00ff      	lsls	r7, r7, #3
  405f7e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405f82:	e7aa      	b.n	405eda <_free_r+0xa2>
  405f84:	2301      	movs	r3, #1
  405f86:	10aa      	asrs	r2, r5, #2
  405f88:	684d      	ldr	r5, [r1, #4]
  405f8a:	4093      	lsls	r3, r2
  405f8c:	432b      	orrs	r3, r5
  405f8e:	604b      	str	r3, [r1, #4]
  405f90:	4603      	mov	r3, r0
  405f92:	e7b0      	b.n	405ef6 <_free_r+0xbe>
  405f94:	f043 0201 	orr.w	r2, r3, #1
  405f98:	614c      	str	r4, [r1, #20]
  405f9a:	610c      	str	r4, [r1, #16]
  405f9c:	60e5      	str	r5, [r4, #12]
  405f9e:	60a5      	str	r5, [r4, #8]
  405fa0:	6062      	str	r2, [r4, #4]
  405fa2:	50e3      	str	r3, [r4, r3]
  405fa4:	e78a      	b.n	405ebc <_free_r+0x84>
  405fa6:	2a54      	cmp	r2, #84	; 0x54
  405fa8:	d806      	bhi.n	405fb8 <_free_r+0x180>
  405faa:	0b1a      	lsrs	r2, r3, #12
  405fac:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405fb0:	00ff      	lsls	r7, r7, #3
  405fb2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405fb6:	e790      	b.n	405eda <_free_r+0xa2>
  405fb8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405fbc:	d806      	bhi.n	405fcc <_free_r+0x194>
  405fbe:	0bda      	lsrs	r2, r3, #15
  405fc0:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405fc4:	00ff      	lsls	r7, r7, #3
  405fc6:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405fca:	e786      	b.n	405eda <_free_r+0xa2>
  405fcc:	f240 5054 	movw	r0, #1364	; 0x554
  405fd0:	4282      	cmp	r2, r0
  405fd2:	d806      	bhi.n	405fe2 <_free_r+0x1aa>
  405fd4:	0c9a      	lsrs	r2, r3, #18
  405fd6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405fda:	00ff      	lsls	r7, r7, #3
  405fdc:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405fe0:	e77b      	b.n	405eda <_free_r+0xa2>
  405fe2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405fe6:	257e      	movs	r5, #126	; 0x7e
  405fe8:	e777      	b.n	405eda <_free_r+0xa2>
  405fea:	f043 0101 	orr.w	r1, r3, #1
  405fee:	6061      	str	r1, [r4, #4]
  405ff0:	6013      	str	r3, [r2, #0]
  405ff2:	e763      	b.n	405ebc <_free_r+0x84>
  405ff4:	200007a8 	.word	0x200007a8
  405ff8:	200007b0 	.word	0x200007b0
  405ffc:	20000bb4 	.word	0x20000bb4
  406000:	20000e44 	.word	0x20000e44

00406004 <__locale_ctype_ptr_l>:
  406004:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
  406008:	4770      	bx	lr
  40600a:	bf00      	nop

0040600c <_localeconv_r>:
  40600c:	4a04      	ldr	r2, [pc, #16]	; (406020 <_localeconv_r+0x14>)
  40600e:	4b05      	ldr	r3, [pc, #20]	; (406024 <_localeconv_r+0x18>)
  406010:	6812      	ldr	r2, [r2, #0]
  406012:	6b50      	ldr	r0, [r2, #52]	; 0x34
  406014:	2800      	cmp	r0, #0
  406016:	bf08      	it	eq
  406018:	4618      	moveq	r0, r3
  40601a:	30f0      	adds	r0, #240	; 0xf0
  40601c:	4770      	bx	lr
  40601e:	bf00      	nop
  406020:	20000208 	.word	0x20000208
  406024:	2000063c 	.word	0x2000063c

00406028 <__retarget_lock_acquire_recursive>:
  406028:	4770      	bx	lr
  40602a:	bf00      	nop

0040602c <__retarget_lock_release_recursive>:
  40602c:	4770      	bx	lr
  40602e:	bf00      	nop

00406030 <_malloc_r>:
  406030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406034:	f101 060b 	add.w	r6, r1, #11
  406038:	2e16      	cmp	r6, #22
  40603a:	b083      	sub	sp, #12
  40603c:	4605      	mov	r5, r0
  40603e:	f240 809e 	bls.w	40617e <_malloc_r+0x14e>
  406042:	f036 0607 	bics.w	r6, r6, #7
  406046:	f100 80bd 	bmi.w	4061c4 <_malloc_r+0x194>
  40604a:	42b1      	cmp	r1, r6
  40604c:	f200 80ba 	bhi.w	4061c4 <_malloc_r+0x194>
  406050:	f000 fb50 	bl	4066f4 <__malloc_lock>
  406054:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  406058:	f0c0 8285 	bcc.w	406566 <_malloc_r+0x536>
  40605c:	0a73      	lsrs	r3, r6, #9
  40605e:	f000 80b8 	beq.w	4061d2 <_malloc_r+0x1a2>
  406062:	2b04      	cmp	r3, #4
  406064:	f200 816c 	bhi.w	406340 <_malloc_r+0x310>
  406068:	09b3      	lsrs	r3, r6, #6
  40606a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40606e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  406072:	00c1      	lsls	r1, r0, #3
  406074:	4fb8      	ldr	r7, [pc, #736]	; (406358 <_malloc_r+0x328>)
  406076:	4439      	add	r1, r7
  406078:	684c      	ldr	r4, [r1, #4]
  40607a:	3908      	subs	r1, #8
  40607c:	42a1      	cmp	r1, r4
  40607e:	d106      	bne.n	40608e <_malloc_r+0x5e>
  406080:	e00c      	b.n	40609c <_malloc_r+0x6c>
  406082:	2a00      	cmp	r2, #0
  406084:	f280 80ab 	bge.w	4061de <_malloc_r+0x1ae>
  406088:	68e4      	ldr	r4, [r4, #12]
  40608a:	42a1      	cmp	r1, r4
  40608c:	d006      	beq.n	40609c <_malloc_r+0x6c>
  40608e:	6863      	ldr	r3, [r4, #4]
  406090:	f023 0303 	bic.w	r3, r3, #3
  406094:	1b9a      	subs	r2, r3, r6
  406096:	2a0f      	cmp	r2, #15
  406098:	ddf3      	ble.n	406082 <_malloc_r+0x52>
  40609a:	4670      	mov	r0, lr
  40609c:	693c      	ldr	r4, [r7, #16]
  40609e:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 40636c <_malloc_r+0x33c>
  4060a2:	4574      	cmp	r4, lr
  4060a4:	f000 819e 	beq.w	4063e4 <_malloc_r+0x3b4>
  4060a8:	6863      	ldr	r3, [r4, #4]
  4060aa:	f023 0303 	bic.w	r3, r3, #3
  4060ae:	1b9a      	subs	r2, r3, r6
  4060b0:	2a0f      	cmp	r2, #15
  4060b2:	f300 8183 	bgt.w	4063bc <_malloc_r+0x38c>
  4060b6:	2a00      	cmp	r2, #0
  4060b8:	f8c7 e014 	str.w	lr, [r7, #20]
  4060bc:	f8c7 e010 	str.w	lr, [r7, #16]
  4060c0:	f280 8091 	bge.w	4061e6 <_malloc_r+0x1b6>
  4060c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4060c8:	f080 8154 	bcs.w	406374 <_malloc_r+0x344>
  4060cc:	2201      	movs	r2, #1
  4060ce:	08db      	lsrs	r3, r3, #3
  4060d0:	6879      	ldr	r1, [r7, #4]
  4060d2:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  4060d6:	4413      	add	r3, r2
  4060d8:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
  4060dc:	fa02 f20c 	lsl.w	r2, r2, ip
  4060e0:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
  4060e4:	430a      	orrs	r2, r1
  4060e6:	f1ac 0108 	sub.w	r1, ip, #8
  4060ea:	60e1      	str	r1, [r4, #12]
  4060ec:	f8c4 8008 	str.w	r8, [r4, #8]
  4060f0:	607a      	str	r2, [r7, #4]
  4060f2:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
  4060f6:	f8c8 400c 	str.w	r4, [r8, #12]
  4060fa:	2401      	movs	r4, #1
  4060fc:	1083      	asrs	r3, r0, #2
  4060fe:	409c      	lsls	r4, r3
  406100:	4294      	cmp	r4, r2
  406102:	d87d      	bhi.n	406200 <_malloc_r+0x1d0>
  406104:	4214      	tst	r4, r2
  406106:	d106      	bne.n	406116 <_malloc_r+0xe6>
  406108:	f020 0003 	bic.w	r0, r0, #3
  40610c:	0064      	lsls	r4, r4, #1
  40610e:	4214      	tst	r4, r2
  406110:	f100 0004 	add.w	r0, r0, #4
  406114:	d0fa      	beq.n	40610c <_malloc_r+0xdc>
  406116:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40611a:	46cc      	mov	ip, r9
  40611c:	4680      	mov	r8, r0
  40611e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  406122:	459c      	cmp	ip, r3
  406124:	d107      	bne.n	406136 <_malloc_r+0x106>
  406126:	e15f      	b.n	4063e8 <_malloc_r+0x3b8>
  406128:	2a00      	cmp	r2, #0
  40612a:	f280 816d 	bge.w	406408 <_malloc_r+0x3d8>
  40612e:	68db      	ldr	r3, [r3, #12]
  406130:	459c      	cmp	ip, r3
  406132:	f000 8159 	beq.w	4063e8 <_malloc_r+0x3b8>
  406136:	6859      	ldr	r1, [r3, #4]
  406138:	f021 0103 	bic.w	r1, r1, #3
  40613c:	1b8a      	subs	r2, r1, r6
  40613e:	2a0f      	cmp	r2, #15
  406140:	ddf2      	ble.n	406128 <_malloc_r+0xf8>
  406142:	68dc      	ldr	r4, [r3, #12]
  406144:	f8d3 c008 	ldr.w	ip, [r3, #8]
  406148:	f046 0801 	orr.w	r8, r6, #1
  40614c:	4628      	mov	r0, r5
  40614e:	441e      	add	r6, r3
  406150:	f042 0501 	orr.w	r5, r2, #1
  406154:	f8c3 8004 	str.w	r8, [r3, #4]
  406158:	f8cc 400c 	str.w	r4, [ip, #12]
  40615c:	f8c4 c008 	str.w	ip, [r4, #8]
  406160:	617e      	str	r6, [r7, #20]
  406162:	613e      	str	r6, [r7, #16]
  406164:	f8c6 e00c 	str.w	lr, [r6, #12]
  406168:	f8c6 e008 	str.w	lr, [r6, #8]
  40616c:	6075      	str	r5, [r6, #4]
  40616e:	505a      	str	r2, [r3, r1]
  406170:	9300      	str	r3, [sp, #0]
  406172:	f000 fac5 	bl	406700 <__malloc_unlock>
  406176:	9b00      	ldr	r3, [sp, #0]
  406178:	f103 0408 	add.w	r4, r3, #8
  40617c:	e01e      	b.n	4061bc <_malloc_r+0x18c>
  40617e:	2910      	cmp	r1, #16
  406180:	d820      	bhi.n	4061c4 <_malloc_r+0x194>
  406182:	f000 fab7 	bl	4066f4 <__malloc_lock>
  406186:	2610      	movs	r6, #16
  406188:	2318      	movs	r3, #24
  40618a:	2002      	movs	r0, #2
  40618c:	4f72      	ldr	r7, [pc, #456]	; (406358 <_malloc_r+0x328>)
  40618e:	443b      	add	r3, r7
  406190:	685c      	ldr	r4, [r3, #4]
  406192:	f1a3 0208 	sub.w	r2, r3, #8
  406196:	4294      	cmp	r4, r2
  406198:	f000 812f 	beq.w	4063fa <_malloc_r+0x3ca>
  40619c:	6863      	ldr	r3, [r4, #4]
  40619e:	68e1      	ldr	r1, [r4, #12]
  4061a0:	f023 0303 	bic.w	r3, r3, #3
  4061a4:	4423      	add	r3, r4
  4061a6:	685a      	ldr	r2, [r3, #4]
  4061a8:	68a6      	ldr	r6, [r4, #8]
  4061aa:	f042 0201 	orr.w	r2, r2, #1
  4061ae:	60f1      	str	r1, [r6, #12]
  4061b0:	4628      	mov	r0, r5
  4061b2:	608e      	str	r6, [r1, #8]
  4061b4:	605a      	str	r2, [r3, #4]
  4061b6:	f000 faa3 	bl	406700 <__malloc_unlock>
  4061ba:	3408      	adds	r4, #8
  4061bc:	4620      	mov	r0, r4
  4061be:	b003      	add	sp, #12
  4061c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4061c4:	2400      	movs	r4, #0
  4061c6:	230c      	movs	r3, #12
  4061c8:	4620      	mov	r0, r4
  4061ca:	602b      	str	r3, [r5, #0]
  4061cc:	b003      	add	sp, #12
  4061ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4061d2:	2040      	movs	r0, #64	; 0x40
  4061d4:	f44f 7100 	mov.w	r1, #512	; 0x200
  4061d8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4061dc:	e74a      	b.n	406074 <_malloc_r+0x44>
  4061de:	4423      	add	r3, r4
  4061e0:	685a      	ldr	r2, [r3, #4]
  4061e2:	68e1      	ldr	r1, [r4, #12]
  4061e4:	e7e0      	b.n	4061a8 <_malloc_r+0x178>
  4061e6:	4423      	add	r3, r4
  4061e8:	685a      	ldr	r2, [r3, #4]
  4061ea:	4628      	mov	r0, r5
  4061ec:	f042 0201 	orr.w	r2, r2, #1
  4061f0:	605a      	str	r2, [r3, #4]
  4061f2:	3408      	adds	r4, #8
  4061f4:	f000 fa84 	bl	406700 <__malloc_unlock>
  4061f8:	4620      	mov	r0, r4
  4061fa:	b003      	add	sp, #12
  4061fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406200:	68bc      	ldr	r4, [r7, #8]
  406202:	6863      	ldr	r3, [r4, #4]
  406204:	f023 0803 	bic.w	r8, r3, #3
  406208:	45b0      	cmp	r8, r6
  40620a:	d304      	bcc.n	406216 <_malloc_r+0x1e6>
  40620c:	eba8 0306 	sub.w	r3, r8, r6
  406210:	2b0f      	cmp	r3, #15
  406212:	f300 8085 	bgt.w	406320 <_malloc_r+0x2f0>
  406216:	f8df 9158 	ldr.w	r9, [pc, #344]	; 406370 <_malloc_r+0x340>
  40621a:	4b50      	ldr	r3, [pc, #320]	; (40635c <_malloc_r+0x32c>)
  40621c:	f8d9 2000 	ldr.w	r2, [r9]
  406220:	681b      	ldr	r3, [r3, #0]
  406222:	3201      	adds	r2, #1
  406224:	4433      	add	r3, r6
  406226:	eb04 0a08 	add.w	sl, r4, r8
  40622a:	f000 8154 	beq.w	4064d6 <_malloc_r+0x4a6>
  40622e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  406232:	330f      	adds	r3, #15
  406234:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  406238:	f02b 0b0f 	bic.w	fp, fp, #15
  40623c:	4659      	mov	r1, fp
  40623e:	4628      	mov	r0, r5
  406240:	f000 ff16 	bl	407070 <_sbrk_r>
  406244:	1c41      	adds	r1, r0, #1
  406246:	4602      	mov	r2, r0
  406248:	f000 80fb 	beq.w	406442 <_malloc_r+0x412>
  40624c:	4582      	cmp	sl, r0
  40624e:	f200 80f6 	bhi.w	40643e <_malloc_r+0x40e>
  406252:	4b43      	ldr	r3, [pc, #268]	; (406360 <_malloc_r+0x330>)
  406254:	6819      	ldr	r1, [r3, #0]
  406256:	4459      	add	r1, fp
  406258:	6019      	str	r1, [r3, #0]
  40625a:	f000 814c 	beq.w	4064f6 <_malloc_r+0x4c6>
  40625e:	f8d9 0000 	ldr.w	r0, [r9]
  406262:	3001      	adds	r0, #1
  406264:	bf1b      	ittet	ne
  406266:	eba2 0a0a 	subne.w	sl, r2, sl
  40626a:	4451      	addne	r1, sl
  40626c:	f8c9 2000 	streq.w	r2, [r9]
  406270:	6019      	strne	r1, [r3, #0]
  406272:	f012 0107 	ands.w	r1, r2, #7
  406276:	f000 8114 	beq.w	4064a2 <_malloc_r+0x472>
  40627a:	f1c1 0008 	rsb	r0, r1, #8
  40627e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  406282:	4402      	add	r2, r0
  406284:	3108      	adds	r1, #8
  406286:	eb02 090b 	add.w	r9, r2, fp
  40628a:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40628e:	eba1 0909 	sub.w	r9, r1, r9
  406292:	4649      	mov	r1, r9
  406294:	4628      	mov	r0, r5
  406296:	9301      	str	r3, [sp, #4]
  406298:	9200      	str	r2, [sp, #0]
  40629a:	f000 fee9 	bl	407070 <_sbrk_r>
  40629e:	1c43      	adds	r3, r0, #1
  4062a0:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4062a4:	f000 8142 	beq.w	40652c <_malloc_r+0x4fc>
  4062a8:	1a80      	subs	r0, r0, r2
  4062aa:	4448      	add	r0, r9
  4062ac:	f040 0001 	orr.w	r0, r0, #1
  4062b0:	6819      	ldr	r1, [r3, #0]
  4062b2:	42bc      	cmp	r4, r7
  4062b4:	4449      	add	r1, r9
  4062b6:	60ba      	str	r2, [r7, #8]
  4062b8:	6019      	str	r1, [r3, #0]
  4062ba:	6050      	str	r0, [r2, #4]
  4062bc:	d017      	beq.n	4062ee <_malloc_r+0x2be>
  4062be:	f1b8 0f0f 	cmp.w	r8, #15
  4062c2:	f240 80fa 	bls.w	4064ba <_malloc_r+0x48a>
  4062c6:	f04f 0c05 	mov.w	ip, #5
  4062ca:	6862      	ldr	r2, [r4, #4]
  4062cc:	f1a8 000c 	sub.w	r0, r8, #12
  4062d0:	f020 0007 	bic.w	r0, r0, #7
  4062d4:	f002 0201 	and.w	r2, r2, #1
  4062d8:	eb04 0e00 	add.w	lr, r4, r0
  4062dc:	4302      	orrs	r2, r0
  4062de:	280f      	cmp	r0, #15
  4062e0:	6062      	str	r2, [r4, #4]
  4062e2:	f8ce c004 	str.w	ip, [lr, #4]
  4062e6:	f8ce c008 	str.w	ip, [lr, #8]
  4062ea:	f200 8116 	bhi.w	40651a <_malloc_r+0x4ea>
  4062ee:	4b1d      	ldr	r3, [pc, #116]	; (406364 <_malloc_r+0x334>)
  4062f0:	68bc      	ldr	r4, [r7, #8]
  4062f2:	681a      	ldr	r2, [r3, #0]
  4062f4:	4291      	cmp	r1, r2
  4062f6:	bf88      	it	hi
  4062f8:	6019      	strhi	r1, [r3, #0]
  4062fa:	4b1b      	ldr	r3, [pc, #108]	; (406368 <_malloc_r+0x338>)
  4062fc:	681a      	ldr	r2, [r3, #0]
  4062fe:	4291      	cmp	r1, r2
  406300:	6862      	ldr	r2, [r4, #4]
  406302:	bf88      	it	hi
  406304:	6019      	strhi	r1, [r3, #0]
  406306:	f022 0203 	bic.w	r2, r2, #3
  40630a:	4296      	cmp	r6, r2
  40630c:	eba2 0306 	sub.w	r3, r2, r6
  406310:	d801      	bhi.n	406316 <_malloc_r+0x2e6>
  406312:	2b0f      	cmp	r3, #15
  406314:	dc04      	bgt.n	406320 <_malloc_r+0x2f0>
  406316:	4628      	mov	r0, r5
  406318:	f000 f9f2 	bl	406700 <__malloc_unlock>
  40631c:	2400      	movs	r4, #0
  40631e:	e74d      	b.n	4061bc <_malloc_r+0x18c>
  406320:	f046 0201 	orr.w	r2, r6, #1
  406324:	f043 0301 	orr.w	r3, r3, #1
  406328:	4426      	add	r6, r4
  40632a:	6062      	str	r2, [r4, #4]
  40632c:	4628      	mov	r0, r5
  40632e:	60be      	str	r6, [r7, #8]
  406330:	3408      	adds	r4, #8
  406332:	6073      	str	r3, [r6, #4]
  406334:	f000 f9e4 	bl	406700 <__malloc_unlock>
  406338:	4620      	mov	r0, r4
  40633a:	b003      	add	sp, #12
  40633c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406340:	2b14      	cmp	r3, #20
  406342:	d970      	bls.n	406426 <_malloc_r+0x3f6>
  406344:	2b54      	cmp	r3, #84	; 0x54
  406346:	f200 80a2 	bhi.w	40648e <_malloc_r+0x45e>
  40634a:	0b33      	lsrs	r3, r6, #12
  40634c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  406350:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  406354:	00c1      	lsls	r1, r0, #3
  406356:	e68d      	b.n	406074 <_malloc_r+0x44>
  406358:	200007a8 	.word	0x200007a8
  40635c:	20000e44 	.word	0x20000e44
  406360:	20000e14 	.word	0x20000e14
  406364:	20000e3c 	.word	0x20000e3c
  406368:	20000e40 	.word	0x20000e40
  40636c:	200007b0 	.word	0x200007b0
  406370:	20000bb0 	.word	0x20000bb0
  406374:	0a5a      	lsrs	r2, r3, #9
  406376:	2a04      	cmp	r2, #4
  406378:	d95b      	bls.n	406432 <_malloc_r+0x402>
  40637a:	2a14      	cmp	r2, #20
  40637c:	f200 80ae 	bhi.w	4064dc <_malloc_r+0x4ac>
  406380:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  406384:	00c9      	lsls	r1, r1, #3
  406386:	325b      	adds	r2, #91	; 0x5b
  406388:	eb07 0c01 	add.w	ip, r7, r1
  40638c:	5879      	ldr	r1, [r7, r1]
  40638e:	f1ac 0c08 	sub.w	ip, ip, #8
  406392:	458c      	cmp	ip, r1
  406394:	f000 8088 	beq.w	4064a8 <_malloc_r+0x478>
  406398:	684a      	ldr	r2, [r1, #4]
  40639a:	f022 0203 	bic.w	r2, r2, #3
  40639e:	4293      	cmp	r3, r2
  4063a0:	d273      	bcs.n	40648a <_malloc_r+0x45a>
  4063a2:	6889      	ldr	r1, [r1, #8]
  4063a4:	458c      	cmp	ip, r1
  4063a6:	d1f7      	bne.n	406398 <_malloc_r+0x368>
  4063a8:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4063ac:	687a      	ldr	r2, [r7, #4]
  4063ae:	60e3      	str	r3, [r4, #12]
  4063b0:	f8c4 c008 	str.w	ip, [r4, #8]
  4063b4:	609c      	str	r4, [r3, #8]
  4063b6:	f8cc 400c 	str.w	r4, [ip, #12]
  4063ba:	e69e      	b.n	4060fa <_malloc_r+0xca>
  4063bc:	f046 0c01 	orr.w	ip, r6, #1
  4063c0:	f042 0101 	orr.w	r1, r2, #1
  4063c4:	4426      	add	r6, r4
  4063c6:	f8c4 c004 	str.w	ip, [r4, #4]
  4063ca:	4628      	mov	r0, r5
  4063cc:	617e      	str	r6, [r7, #20]
  4063ce:	613e      	str	r6, [r7, #16]
  4063d0:	f8c6 e00c 	str.w	lr, [r6, #12]
  4063d4:	f8c6 e008 	str.w	lr, [r6, #8]
  4063d8:	6071      	str	r1, [r6, #4]
  4063da:	50e2      	str	r2, [r4, r3]
  4063dc:	f000 f990 	bl	406700 <__malloc_unlock>
  4063e0:	3408      	adds	r4, #8
  4063e2:	e6eb      	b.n	4061bc <_malloc_r+0x18c>
  4063e4:	687a      	ldr	r2, [r7, #4]
  4063e6:	e688      	b.n	4060fa <_malloc_r+0xca>
  4063e8:	f108 0801 	add.w	r8, r8, #1
  4063ec:	f018 0f03 	tst.w	r8, #3
  4063f0:	f10c 0c08 	add.w	ip, ip, #8
  4063f4:	f47f ae93 	bne.w	40611e <_malloc_r+0xee>
  4063f8:	e02d      	b.n	406456 <_malloc_r+0x426>
  4063fa:	68dc      	ldr	r4, [r3, #12]
  4063fc:	42a3      	cmp	r3, r4
  4063fe:	bf08      	it	eq
  406400:	3002      	addeq	r0, #2
  406402:	f43f ae4b 	beq.w	40609c <_malloc_r+0x6c>
  406406:	e6c9      	b.n	40619c <_malloc_r+0x16c>
  406408:	461c      	mov	r4, r3
  40640a:	4419      	add	r1, r3
  40640c:	684a      	ldr	r2, [r1, #4]
  40640e:	68db      	ldr	r3, [r3, #12]
  406410:	f854 6f08 	ldr.w	r6, [r4, #8]!
  406414:	f042 0201 	orr.w	r2, r2, #1
  406418:	604a      	str	r2, [r1, #4]
  40641a:	4628      	mov	r0, r5
  40641c:	60f3      	str	r3, [r6, #12]
  40641e:	609e      	str	r6, [r3, #8]
  406420:	f000 f96e 	bl	406700 <__malloc_unlock>
  406424:	e6ca      	b.n	4061bc <_malloc_r+0x18c>
  406426:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40642a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40642e:	00c1      	lsls	r1, r0, #3
  406430:	e620      	b.n	406074 <_malloc_r+0x44>
  406432:	099a      	lsrs	r2, r3, #6
  406434:	f102 0139 	add.w	r1, r2, #57	; 0x39
  406438:	00c9      	lsls	r1, r1, #3
  40643a:	3238      	adds	r2, #56	; 0x38
  40643c:	e7a4      	b.n	406388 <_malloc_r+0x358>
  40643e:	42bc      	cmp	r4, r7
  406440:	d054      	beq.n	4064ec <_malloc_r+0x4bc>
  406442:	68bc      	ldr	r4, [r7, #8]
  406444:	6862      	ldr	r2, [r4, #4]
  406446:	f022 0203 	bic.w	r2, r2, #3
  40644a:	e75e      	b.n	40630a <_malloc_r+0x2da>
  40644c:	f859 3908 	ldr.w	r3, [r9], #-8
  406450:	4599      	cmp	r9, r3
  406452:	f040 8086 	bne.w	406562 <_malloc_r+0x532>
  406456:	f010 0f03 	tst.w	r0, #3
  40645a:	f100 30ff 	add.w	r0, r0, #4294967295
  40645e:	d1f5      	bne.n	40644c <_malloc_r+0x41c>
  406460:	687b      	ldr	r3, [r7, #4]
  406462:	ea23 0304 	bic.w	r3, r3, r4
  406466:	607b      	str	r3, [r7, #4]
  406468:	0064      	lsls	r4, r4, #1
  40646a:	429c      	cmp	r4, r3
  40646c:	f63f aec8 	bhi.w	406200 <_malloc_r+0x1d0>
  406470:	2c00      	cmp	r4, #0
  406472:	f43f aec5 	beq.w	406200 <_malloc_r+0x1d0>
  406476:	421c      	tst	r4, r3
  406478:	4640      	mov	r0, r8
  40647a:	f47f ae4c 	bne.w	406116 <_malloc_r+0xe6>
  40647e:	0064      	lsls	r4, r4, #1
  406480:	421c      	tst	r4, r3
  406482:	f100 0004 	add.w	r0, r0, #4
  406486:	d0fa      	beq.n	40647e <_malloc_r+0x44e>
  406488:	e645      	b.n	406116 <_malloc_r+0xe6>
  40648a:	468c      	mov	ip, r1
  40648c:	e78c      	b.n	4063a8 <_malloc_r+0x378>
  40648e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  406492:	d815      	bhi.n	4064c0 <_malloc_r+0x490>
  406494:	0bf3      	lsrs	r3, r6, #15
  406496:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40649a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40649e:	00c1      	lsls	r1, r0, #3
  4064a0:	e5e8      	b.n	406074 <_malloc_r+0x44>
  4064a2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4064a6:	e6ee      	b.n	406286 <_malloc_r+0x256>
  4064a8:	2101      	movs	r1, #1
  4064aa:	687b      	ldr	r3, [r7, #4]
  4064ac:	1092      	asrs	r2, r2, #2
  4064ae:	fa01 f202 	lsl.w	r2, r1, r2
  4064b2:	431a      	orrs	r2, r3
  4064b4:	607a      	str	r2, [r7, #4]
  4064b6:	4663      	mov	r3, ip
  4064b8:	e779      	b.n	4063ae <_malloc_r+0x37e>
  4064ba:	2301      	movs	r3, #1
  4064bc:	6053      	str	r3, [r2, #4]
  4064be:	e72a      	b.n	406316 <_malloc_r+0x2e6>
  4064c0:	f240 5254 	movw	r2, #1364	; 0x554
  4064c4:	4293      	cmp	r3, r2
  4064c6:	d822      	bhi.n	40650e <_malloc_r+0x4de>
  4064c8:	0cb3      	lsrs	r3, r6, #18
  4064ca:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4064ce:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4064d2:	00c1      	lsls	r1, r0, #3
  4064d4:	e5ce      	b.n	406074 <_malloc_r+0x44>
  4064d6:	f103 0b10 	add.w	fp, r3, #16
  4064da:	e6af      	b.n	40623c <_malloc_r+0x20c>
  4064dc:	2a54      	cmp	r2, #84	; 0x54
  4064de:	d829      	bhi.n	406534 <_malloc_r+0x504>
  4064e0:	0b1a      	lsrs	r2, r3, #12
  4064e2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4064e6:	00c9      	lsls	r1, r1, #3
  4064e8:	326e      	adds	r2, #110	; 0x6e
  4064ea:	e74d      	b.n	406388 <_malloc_r+0x358>
  4064ec:	4b20      	ldr	r3, [pc, #128]	; (406570 <_malloc_r+0x540>)
  4064ee:	6819      	ldr	r1, [r3, #0]
  4064f0:	4459      	add	r1, fp
  4064f2:	6019      	str	r1, [r3, #0]
  4064f4:	e6b3      	b.n	40625e <_malloc_r+0x22e>
  4064f6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4064fa:	2800      	cmp	r0, #0
  4064fc:	f47f aeaf 	bne.w	40625e <_malloc_r+0x22e>
  406500:	eb08 030b 	add.w	r3, r8, fp
  406504:	68ba      	ldr	r2, [r7, #8]
  406506:	f043 0301 	orr.w	r3, r3, #1
  40650a:	6053      	str	r3, [r2, #4]
  40650c:	e6ef      	b.n	4062ee <_malloc_r+0x2be>
  40650e:	207f      	movs	r0, #127	; 0x7f
  406510:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  406514:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  406518:	e5ac      	b.n	406074 <_malloc_r+0x44>
  40651a:	f104 0108 	add.w	r1, r4, #8
  40651e:	4628      	mov	r0, r5
  406520:	9300      	str	r3, [sp, #0]
  406522:	f7ff fc89 	bl	405e38 <_free_r>
  406526:	9b00      	ldr	r3, [sp, #0]
  406528:	6819      	ldr	r1, [r3, #0]
  40652a:	e6e0      	b.n	4062ee <_malloc_r+0x2be>
  40652c:	2001      	movs	r0, #1
  40652e:	f04f 0900 	mov.w	r9, #0
  406532:	e6bd      	b.n	4062b0 <_malloc_r+0x280>
  406534:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  406538:	d805      	bhi.n	406546 <_malloc_r+0x516>
  40653a:	0bda      	lsrs	r2, r3, #15
  40653c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  406540:	00c9      	lsls	r1, r1, #3
  406542:	3277      	adds	r2, #119	; 0x77
  406544:	e720      	b.n	406388 <_malloc_r+0x358>
  406546:	f240 5154 	movw	r1, #1364	; 0x554
  40654a:	428a      	cmp	r2, r1
  40654c:	d805      	bhi.n	40655a <_malloc_r+0x52a>
  40654e:	0c9a      	lsrs	r2, r3, #18
  406550:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  406554:	00c9      	lsls	r1, r1, #3
  406556:	327c      	adds	r2, #124	; 0x7c
  406558:	e716      	b.n	406388 <_malloc_r+0x358>
  40655a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40655e:	227e      	movs	r2, #126	; 0x7e
  406560:	e712      	b.n	406388 <_malloc_r+0x358>
  406562:	687b      	ldr	r3, [r7, #4]
  406564:	e780      	b.n	406468 <_malloc_r+0x438>
  406566:	08f0      	lsrs	r0, r6, #3
  406568:	f106 0308 	add.w	r3, r6, #8
  40656c:	e60e      	b.n	40618c <_malloc_r+0x15c>
  40656e:	bf00      	nop
  406570:	20000e14 	.word	0x20000e14

00406574 <__ascii_mbtowc>:
  406574:	b082      	sub	sp, #8
  406576:	b149      	cbz	r1, 40658c <__ascii_mbtowc+0x18>
  406578:	b15a      	cbz	r2, 406592 <__ascii_mbtowc+0x1e>
  40657a:	b16b      	cbz	r3, 406598 <__ascii_mbtowc+0x24>
  40657c:	7813      	ldrb	r3, [r2, #0]
  40657e:	600b      	str	r3, [r1, #0]
  406580:	7812      	ldrb	r2, [r2, #0]
  406582:	1c10      	adds	r0, r2, #0
  406584:	bf18      	it	ne
  406586:	2001      	movne	r0, #1
  406588:	b002      	add	sp, #8
  40658a:	4770      	bx	lr
  40658c:	a901      	add	r1, sp, #4
  40658e:	2a00      	cmp	r2, #0
  406590:	d1f3      	bne.n	40657a <__ascii_mbtowc+0x6>
  406592:	4610      	mov	r0, r2
  406594:	b002      	add	sp, #8
  406596:	4770      	bx	lr
  406598:	f06f 0001 	mvn.w	r0, #1
  40659c:	e7f4      	b.n	406588 <__ascii_mbtowc+0x14>
  40659e:	bf00      	nop

004065a0 <memchr>:
  4065a0:	0783      	lsls	r3, r0, #30
  4065a2:	b470      	push	{r4, r5, r6}
  4065a4:	b2cd      	uxtb	r5, r1
  4065a6:	d03d      	beq.n	406624 <memchr+0x84>
  4065a8:	1e54      	subs	r4, r2, #1
  4065aa:	b30a      	cbz	r2, 4065f0 <memchr+0x50>
  4065ac:	7803      	ldrb	r3, [r0, #0]
  4065ae:	42ab      	cmp	r3, r5
  4065b0:	d01f      	beq.n	4065f2 <memchr+0x52>
  4065b2:	1c43      	adds	r3, r0, #1
  4065b4:	e005      	b.n	4065c2 <memchr+0x22>
  4065b6:	f114 34ff 	adds.w	r4, r4, #4294967295
  4065ba:	d319      	bcc.n	4065f0 <memchr+0x50>
  4065bc:	7802      	ldrb	r2, [r0, #0]
  4065be:	42aa      	cmp	r2, r5
  4065c0:	d017      	beq.n	4065f2 <memchr+0x52>
  4065c2:	f013 0f03 	tst.w	r3, #3
  4065c6:	4618      	mov	r0, r3
  4065c8:	f103 0301 	add.w	r3, r3, #1
  4065cc:	d1f3      	bne.n	4065b6 <memchr+0x16>
  4065ce:	2c03      	cmp	r4, #3
  4065d0:	d811      	bhi.n	4065f6 <memchr+0x56>
  4065d2:	b34c      	cbz	r4, 406628 <memchr+0x88>
  4065d4:	7803      	ldrb	r3, [r0, #0]
  4065d6:	42ab      	cmp	r3, r5
  4065d8:	d00b      	beq.n	4065f2 <memchr+0x52>
  4065da:	4404      	add	r4, r0
  4065dc:	1c43      	adds	r3, r0, #1
  4065de:	e002      	b.n	4065e6 <memchr+0x46>
  4065e0:	7802      	ldrb	r2, [r0, #0]
  4065e2:	42aa      	cmp	r2, r5
  4065e4:	d005      	beq.n	4065f2 <memchr+0x52>
  4065e6:	429c      	cmp	r4, r3
  4065e8:	4618      	mov	r0, r3
  4065ea:	f103 0301 	add.w	r3, r3, #1
  4065ee:	d1f7      	bne.n	4065e0 <memchr+0x40>
  4065f0:	2000      	movs	r0, #0
  4065f2:	bc70      	pop	{r4, r5, r6}
  4065f4:	4770      	bx	lr
  4065f6:	0209      	lsls	r1, r1, #8
  4065f8:	b289      	uxth	r1, r1
  4065fa:	4329      	orrs	r1, r5
  4065fc:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  406600:	6803      	ldr	r3, [r0, #0]
  406602:	4606      	mov	r6, r0
  406604:	404b      	eors	r3, r1
  406606:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  40660a:	ea22 0303 	bic.w	r3, r2, r3
  40660e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  406612:	f100 0004 	add.w	r0, r0, #4
  406616:	d103      	bne.n	406620 <memchr+0x80>
  406618:	3c04      	subs	r4, #4
  40661a:	2c03      	cmp	r4, #3
  40661c:	d8f0      	bhi.n	406600 <memchr+0x60>
  40661e:	e7d8      	b.n	4065d2 <memchr+0x32>
  406620:	4630      	mov	r0, r6
  406622:	e7d7      	b.n	4065d4 <memchr+0x34>
  406624:	4614      	mov	r4, r2
  406626:	e7d2      	b.n	4065ce <memchr+0x2e>
  406628:	4620      	mov	r0, r4
  40662a:	e7e2      	b.n	4065f2 <memchr+0x52>

0040662c <memmove>:
  40662c:	4288      	cmp	r0, r1
  40662e:	b5f0      	push	{r4, r5, r6, r7, lr}
  406630:	d90d      	bls.n	40664e <memmove+0x22>
  406632:	188b      	adds	r3, r1, r2
  406634:	4298      	cmp	r0, r3
  406636:	d20a      	bcs.n	40664e <memmove+0x22>
  406638:	1884      	adds	r4, r0, r2
  40663a:	2a00      	cmp	r2, #0
  40663c:	d051      	beq.n	4066e2 <memmove+0xb6>
  40663e:	4622      	mov	r2, r4
  406640:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406644:	4299      	cmp	r1, r3
  406646:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40664a:	d1f9      	bne.n	406640 <memmove+0x14>
  40664c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40664e:	2a0f      	cmp	r2, #15
  406650:	d948      	bls.n	4066e4 <memmove+0xb8>
  406652:	ea41 0300 	orr.w	r3, r1, r0
  406656:	079b      	lsls	r3, r3, #30
  406658:	d146      	bne.n	4066e8 <memmove+0xbc>
  40665a:	4615      	mov	r5, r2
  40665c:	f100 0410 	add.w	r4, r0, #16
  406660:	f101 0310 	add.w	r3, r1, #16
  406664:	f853 6c10 	ldr.w	r6, [r3, #-16]
  406668:	3d10      	subs	r5, #16
  40666a:	f844 6c10 	str.w	r6, [r4, #-16]
  40666e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  406672:	2d0f      	cmp	r5, #15
  406674:	f844 6c0c 	str.w	r6, [r4, #-12]
  406678:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40667c:	f104 0410 	add.w	r4, r4, #16
  406680:	f844 6c18 	str.w	r6, [r4, #-24]
  406684:	f853 6c04 	ldr.w	r6, [r3, #-4]
  406688:	f103 0310 	add.w	r3, r3, #16
  40668c:	f844 6c14 	str.w	r6, [r4, #-20]
  406690:	d8e8      	bhi.n	406664 <memmove+0x38>
  406692:	f1a2 0310 	sub.w	r3, r2, #16
  406696:	f023 030f 	bic.w	r3, r3, #15
  40669a:	f002 0e0f 	and.w	lr, r2, #15
  40669e:	3310      	adds	r3, #16
  4066a0:	f1be 0f03 	cmp.w	lr, #3
  4066a4:	4419      	add	r1, r3
  4066a6:	4403      	add	r3, r0
  4066a8:	d921      	bls.n	4066ee <memmove+0xc2>
  4066aa:	460e      	mov	r6, r1
  4066ac:	4674      	mov	r4, lr
  4066ae:	1f1d      	subs	r5, r3, #4
  4066b0:	f856 7b04 	ldr.w	r7, [r6], #4
  4066b4:	3c04      	subs	r4, #4
  4066b6:	2c03      	cmp	r4, #3
  4066b8:	f845 7f04 	str.w	r7, [r5, #4]!
  4066bc:	d8f8      	bhi.n	4066b0 <memmove+0x84>
  4066be:	f1ae 0404 	sub.w	r4, lr, #4
  4066c2:	f024 0403 	bic.w	r4, r4, #3
  4066c6:	3404      	adds	r4, #4
  4066c8:	4421      	add	r1, r4
  4066ca:	4423      	add	r3, r4
  4066cc:	f002 0203 	and.w	r2, r2, #3
  4066d0:	b162      	cbz	r2, 4066ec <memmove+0xc0>
  4066d2:	3b01      	subs	r3, #1
  4066d4:	440a      	add	r2, r1
  4066d6:	f811 4b01 	ldrb.w	r4, [r1], #1
  4066da:	428a      	cmp	r2, r1
  4066dc:	f803 4f01 	strb.w	r4, [r3, #1]!
  4066e0:	d1f9      	bne.n	4066d6 <memmove+0xaa>
  4066e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4066e4:	4603      	mov	r3, r0
  4066e6:	e7f3      	b.n	4066d0 <memmove+0xa4>
  4066e8:	4603      	mov	r3, r0
  4066ea:	e7f2      	b.n	4066d2 <memmove+0xa6>
  4066ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4066ee:	4672      	mov	r2, lr
  4066f0:	e7ee      	b.n	4066d0 <memmove+0xa4>
  4066f2:	bf00      	nop

004066f4 <__malloc_lock>:
  4066f4:	4801      	ldr	r0, [pc, #4]	; (4066fc <__malloc_lock+0x8>)
  4066f6:	f7ff bc97 	b.w	406028 <__retarget_lock_acquire_recursive>
  4066fa:	bf00      	nop
  4066fc:	20000ebc 	.word	0x20000ebc

00406700 <__malloc_unlock>:
  406700:	4801      	ldr	r0, [pc, #4]	; (406708 <__malloc_unlock+0x8>)
  406702:	f7ff bc93 	b.w	40602c <__retarget_lock_release_recursive>
  406706:	bf00      	nop
  406708:	20000ebc 	.word	0x20000ebc

0040670c <_Balloc>:
  40670c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40670e:	b570      	push	{r4, r5, r6, lr}
  406710:	4605      	mov	r5, r0
  406712:	460c      	mov	r4, r1
  406714:	b14b      	cbz	r3, 40672a <_Balloc+0x1e>
  406716:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40671a:	b180      	cbz	r0, 40673e <_Balloc+0x32>
  40671c:	6802      	ldr	r2, [r0, #0]
  40671e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  406722:	2300      	movs	r3, #0
  406724:	6103      	str	r3, [r0, #16]
  406726:	60c3      	str	r3, [r0, #12]
  406728:	bd70      	pop	{r4, r5, r6, pc}
  40672a:	2221      	movs	r2, #33	; 0x21
  40672c:	2104      	movs	r1, #4
  40672e:	f000 fd9d 	bl	40726c <_calloc_r>
  406732:	64e8      	str	r0, [r5, #76]	; 0x4c
  406734:	4603      	mov	r3, r0
  406736:	2800      	cmp	r0, #0
  406738:	d1ed      	bne.n	406716 <_Balloc+0xa>
  40673a:	2000      	movs	r0, #0
  40673c:	bd70      	pop	{r4, r5, r6, pc}
  40673e:	2101      	movs	r1, #1
  406740:	fa01 f604 	lsl.w	r6, r1, r4
  406744:	1d72      	adds	r2, r6, #5
  406746:	4628      	mov	r0, r5
  406748:	0092      	lsls	r2, r2, #2
  40674a:	f000 fd8f 	bl	40726c <_calloc_r>
  40674e:	2800      	cmp	r0, #0
  406750:	d0f3      	beq.n	40673a <_Balloc+0x2e>
  406752:	6044      	str	r4, [r0, #4]
  406754:	6086      	str	r6, [r0, #8]
  406756:	e7e4      	b.n	406722 <_Balloc+0x16>

00406758 <_Bfree>:
  406758:	b131      	cbz	r1, 406768 <_Bfree+0x10>
  40675a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40675c:	684a      	ldr	r2, [r1, #4]
  40675e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  406762:	6008      	str	r0, [r1, #0]
  406764:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  406768:	4770      	bx	lr
  40676a:	bf00      	nop

0040676c <__multadd>:
  40676c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40676e:	460c      	mov	r4, r1
  406770:	4605      	mov	r5, r0
  406772:	f04f 0e00 	mov.w	lr, #0
  406776:	690e      	ldr	r6, [r1, #16]
  406778:	b083      	sub	sp, #12
  40677a:	f101 0714 	add.w	r7, r1, #20
  40677e:	6838      	ldr	r0, [r7, #0]
  406780:	f10e 0e01 	add.w	lr, lr, #1
  406784:	b281      	uxth	r1, r0
  406786:	fb02 3301 	mla	r3, r2, r1, r3
  40678a:	0c01      	lsrs	r1, r0, #16
  40678c:	0c18      	lsrs	r0, r3, #16
  40678e:	fb02 0101 	mla	r1, r2, r1, r0
  406792:	b29b      	uxth	r3, r3
  406794:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  406798:	4576      	cmp	r6, lr
  40679a:	f847 3b04 	str.w	r3, [r7], #4
  40679e:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4067a2:	dcec      	bgt.n	40677e <__multadd+0x12>
  4067a4:	b13b      	cbz	r3, 4067b6 <__multadd+0x4a>
  4067a6:	68a2      	ldr	r2, [r4, #8]
  4067a8:	4296      	cmp	r6, r2
  4067aa:	da07      	bge.n	4067bc <__multadd+0x50>
  4067ac:	eb04 0286 	add.w	r2, r4, r6, lsl #2
  4067b0:	3601      	adds	r6, #1
  4067b2:	6153      	str	r3, [r2, #20]
  4067b4:	6126      	str	r6, [r4, #16]
  4067b6:	4620      	mov	r0, r4
  4067b8:	b003      	add	sp, #12
  4067ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4067bc:	6861      	ldr	r1, [r4, #4]
  4067be:	4628      	mov	r0, r5
  4067c0:	3101      	adds	r1, #1
  4067c2:	9301      	str	r3, [sp, #4]
  4067c4:	f7ff ffa2 	bl	40670c <_Balloc>
  4067c8:	4607      	mov	r7, r0
  4067ca:	6922      	ldr	r2, [r4, #16]
  4067cc:	f104 010c 	add.w	r1, r4, #12
  4067d0:	3202      	adds	r2, #2
  4067d2:	0092      	lsls	r2, r2, #2
  4067d4:	300c      	adds	r0, #12
  4067d6:	f7fc febd 	bl	403554 <memcpy>
  4067da:	6cea      	ldr	r2, [r5, #76]	; 0x4c
  4067dc:	6861      	ldr	r1, [r4, #4]
  4067de:	9b01      	ldr	r3, [sp, #4]
  4067e0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4067e4:	6020      	str	r0, [r4, #0]
  4067e6:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
  4067ea:	463c      	mov	r4, r7
  4067ec:	e7de      	b.n	4067ac <__multadd+0x40>
  4067ee:	bf00      	nop

004067f0 <__hi0bits>:
  4067f0:	0c02      	lsrs	r2, r0, #16
  4067f2:	0412      	lsls	r2, r2, #16
  4067f4:	4603      	mov	r3, r0
  4067f6:	b9b2      	cbnz	r2, 406826 <__hi0bits+0x36>
  4067f8:	0403      	lsls	r3, r0, #16
  4067fa:	2010      	movs	r0, #16
  4067fc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406800:	bf04      	itt	eq
  406802:	021b      	lsleq	r3, r3, #8
  406804:	3008      	addeq	r0, #8
  406806:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  40680a:	bf04      	itt	eq
  40680c:	011b      	lsleq	r3, r3, #4
  40680e:	3004      	addeq	r0, #4
  406810:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406814:	bf04      	itt	eq
  406816:	009b      	lsleq	r3, r3, #2
  406818:	3002      	addeq	r0, #2
  40681a:	2b00      	cmp	r3, #0
  40681c:	db02      	blt.n	406824 <__hi0bits+0x34>
  40681e:	005b      	lsls	r3, r3, #1
  406820:	d403      	bmi.n	40682a <__hi0bits+0x3a>
  406822:	2020      	movs	r0, #32
  406824:	4770      	bx	lr
  406826:	2000      	movs	r0, #0
  406828:	e7e8      	b.n	4067fc <__hi0bits+0xc>
  40682a:	3001      	adds	r0, #1
  40682c:	4770      	bx	lr
  40682e:	bf00      	nop

00406830 <__lo0bits>:
  406830:	6803      	ldr	r3, [r0, #0]
  406832:	4601      	mov	r1, r0
  406834:	f013 0207 	ands.w	r2, r3, #7
  406838:	d007      	beq.n	40684a <__lo0bits+0x1a>
  40683a:	07da      	lsls	r2, r3, #31
  40683c:	d421      	bmi.n	406882 <__lo0bits+0x52>
  40683e:	0798      	lsls	r0, r3, #30
  406840:	d421      	bmi.n	406886 <__lo0bits+0x56>
  406842:	089b      	lsrs	r3, r3, #2
  406844:	600b      	str	r3, [r1, #0]
  406846:	2002      	movs	r0, #2
  406848:	4770      	bx	lr
  40684a:	b298      	uxth	r0, r3
  40684c:	b198      	cbz	r0, 406876 <__lo0bits+0x46>
  40684e:	4610      	mov	r0, r2
  406850:	f013 0fff 	tst.w	r3, #255	; 0xff
  406854:	bf04      	itt	eq
  406856:	0a1b      	lsreq	r3, r3, #8
  406858:	3008      	addeq	r0, #8
  40685a:	071a      	lsls	r2, r3, #28
  40685c:	bf04      	itt	eq
  40685e:	091b      	lsreq	r3, r3, #4
  406860:	3004      	addeq	r0, #4
  406862:	079a      	lsls	r2, r3, #30
  406864:	bf04      	itt	eq
  406866:	089b      	lsreq	r3, r3, #2
  406868:	3002      	addeq	r0, #2
  40686a:	07da      	lsls	r2, r3, #31
  40686c:	d407      	bmi.n	40687e <__lo0bits+0x4e>
  40686e:	085b      	lsrs	r3, r3, #1
  406870:	d104      	bne.n	40687c <__lo0bits+0x4c>
  406872:	2020      	movs	r0, #32
  406874:	4770      	bx	lr
  406876:	0c1b      	lsrs	r3, r3, #16
  406878:	2010      	movs	r0, #16
  40687a:	e7e9      	b.n	406850 <__lo0bits+0x20>
  40687c:	3001      	adds	r0, #1
  40687e:	600b      	str	r3, [r1, #0]
  406880:	4770      	bx	lr
  406882:	2000      	movs	r0, #0
  406884:	4770      	bx	lr
  406886:	085b      	lsrs	r3, r3, #1
  406888:	600b      	str	r3, [r1, #0]
  40688a:	2001      	movs	r0, #1
  40688c:	4770      	bx	lr
  40688e:	bf00      	nop

00406890 <__i2b>:
  406890:	b510      	push	{r4, lr}
  406892:	460c      	mov	r4, r1
  406894:	2101      	movs	r1, #1
  406896:	f7ff ff39 	bl	40670c <_Balloc>
  40689a:	2201      	movs	r2, #1
  40689c:	6144      	str	r4, [r0, #20]
  40689e:	6102      	str	r2, [r0, #16]
  4068a0:	bd10      	pop	{r4, pc}
  4068a2:	bf00      	nop

004068a4 <__multiply>:
  4068a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4068a8:	690c      	ldr	r4, [r1, #16]
  4068aa:	6915      	ldr	r5, [r2, #16]
  4068ac:	b083      	sub	sp, #12
  4068ae:	42ac      	cmp	r4, r5
  4068b0:	468b      	mov	fp, r1
  4068b2:	4616      	mov	r6, r2
  4068b4:	da04      	bge.n	4068c0 <__multiply+0x1c>
  4068b6:	4622      	mov	r2, r4
  4068b8:	46b3      	mov	fp, r6
  4068ba:	462c      	mov	r4, r5
  4068bc:	460e      	mov	r6, r1
  4068be:	4615      	mov	r5, r2
  4068c0:	f8db 3008 	ldr.w	r3, [fp, #8]
  4068c4:	eb04 0805 	add.w	r8, r4, r5
  4068c8:	f8db 1004 	ldr.w	r1, [fp, #4]
  4068cc:	4598      	cmp	r8, r3
  4068ce:	bfc8      	it	gt
  4068d0:	3101      	addgt	r1, #1
  4068d2:	f7ff ff1b 	bl	40670c <_Balloc>
  4068d6:	f100 0914 	add.w	r9, r0, #20
  4068da:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  4068de:	45d1      	cmp	r9, sl
  4068e0:	9000      	str	r0, [sp, #0]
  4068e2:	d205      	bcs.n	4068f0 <__multiply+0x4c>
  4068e4:	464b      	mov	r3, r9
  4068e6:	2100      	movs	r1, #0
  4068e8:	f843 1b04 	str.w	r1, [r3], #4
  4068ec:	459a      	cmp	sl, r3
  4068ee:	d8fb      	bhi.n	4068e8 <__multiply+0x44>
  4068f0:	f106 0c14 	add.w	ip, r6, #20
  4068f4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  4068f8:	f10b 0b14 	add.w	fp, fp, #20
  4068fc:	459c      	cmp	ip, r3
  4068fe:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406902:	d24b      	bcs.n	40699c <__multiply+0xf8>
  406904:	f8cd a004 	str.w	sl, [sp, #4]
  406908:	469a      	mov	sl, r3
  40690a:	f8dc 5000 	ldr.w	r5, [ip]
  40690e:	b2af      	uxth	r7, r5
  406910:	b1e7      	cbz	r7, 40694c <__multiply+0xa8>
  406912:	464d      	mov	r5, r9
  406914:	465e      	mov	r6, fp
  406916:	2100      	movs	r1, #0
  406918:	f856 2b04 	ldr.w	r2, [r6], #4
  40691c:	6828      	ldr	r0, [r5, #0]
  40691e:	b293      	uxth	r3, r2
  406920:	b284      	uxth	r4, r0
  406922:	0c12      	lsrs	r2, r2, #16
  406924:	fb07 4303 	mla	r3, r7, r3, r4
  406928:	0c00      	lsrs	r0, r0, #16
  40692a:	fb07 0202 	mla	r2, r7, r2, r0
  40692e:	440b      	add	r3, r1
  406930:	eb02 4113 	add.w	r1, r2, r3, lsr #16
  406934:	b29b      	uxth	r3, r3
  406936:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  40693a:	45b6      	cmp	lr, r6
  40693c:	f845 3b04 	str.w	r3, [r5], #4
  406940:	ea4f 4111 	mov.w	r1, r1, lsr #16
  406944:	d8e8      	bhi.n	406918 <__multiply+0x74>
  406946:	6029      	str	r1, [r5, #0]
  406948:	f8dc 5000 	ldr.w	r5, [ip]
  40694c:	0c2d      	lsrs	r5, r5, #16
  40694e:	d01d      	beq.n	40698c <__multiply+0xe8>
  406950:	f8d9 3000 	ldr.w	r3, [r9]
  406954:	4648      	mov	r0, r9
  406956:	461c      	mov	r4, r3
  406958:	4659      	mov	r1, fp
  40695a:	2200      	movs	r2, #0
  40695c:	880e      	ldrh	r6, [r1, #0]
  40695e:	0c24      	lsrs	r4, r4, #16
  406960:	fb05 4406 	mla	r4, r5, r6, r4
  406964:	b29b      	uxth	r3, r3
  406966:	4422      	add	r2, r4
  406968:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40696c:	f840 3b04 	str.w	r3, [r0], #4
  406970:	f851 3b04 	ldr.w	r3, [r1], #4
  406974:	6804      	ldr	r4, [r0, #0]
  406976:	0c1b      	lsrs	r3, r3, #16
  406978:	b2a6      	uxth	r6, r4
  40697a:	fb05 6303 	mla	r3, r5, r3, r6
  40697e:	458e      	cmp	lr, r1
  406980:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  406984:	ea4f 4213 	mov.w	r2, r3, lsr #16
  406988:	d8e8      	bhi.n	40695c <__multiply+0xb8>
  40698a:	6003      	str	r3, [r0, #0]
  40698c:	f10c 0c04 	add.w	ip, ip, #4
  406990:	45e2      	cmp	sl, ip
  406992:	f109 0904 	add.w	r9, r9, #4
  406996:	d8b8      	bhi.n	40690a <__multiply+0x66>
  406998:	f8dd a004 	ldr.w	sl, [sp, #4]
  40699c:	f1b8 0f00 	cmp.w	r8, #0
  4069a0:	dd0b      	ble.n	4069ba <__multiply+0x116>
  4069a2:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4069a6:	f1aa 0a04 	sub.w	sl, sl, #4
  4069aa:	b11b      	cbz	r3, 4069b4 <__multiply+0x110>
  4069ac:	e005      	b.n	4069ba <__multiply+0x116>
  4069ae:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4069b2:	b913      	cbnz	r3, 4069ba <__multiply+0x116>
  4069b4:	f1b8 0801 	subs.w	r8, r8, #1
  4069b8:	d1f9      	bne.n	4069ae <__multiply+0x10a>
  4069ba:	9800      	ldr	r0, [sp, #0]
  4069bc:	f8c0 8010 	str.w	r8, [r0, #16]
  4069c0:	b003      	add	sp, #12
  4069c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4069c6:	bf00      	nop

004069c8 <__pow5mult>:
  4069c8:	f012 0303 	ands.w	r3, r2, #3
  4069cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4069d0:	4614      	mov	r4, r2
  4069d2:	4607      	mov	r7, r0
  4069d4:	d12e      	bne.n	406a34 <__pow5mult+0x6c>
  4069d6:	460d      	mov	r5, r1
  4069d8:	10a4      	asrs	r4, r4, #2
  4069da:	d01c      	beq.n	406a16 <__pow5mult+0x4e>
  4069dc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4069de:	b396      	cbz	r6, 406a46 <__pow5mult+0x7e>
  4069e0:	07e3      	lsls	r3, r4, #31
  4069e2:	f04f 0800 	mov.w	r8, #0
  4069e6:	d406      	bmi.n	4069f6 <__pow5mult+0x2e>
  4069e8:	1064      	asrs	r4, r4, #1
  4069ea:	d014      	beq.n	406a16 <__pow5mult+0x4e>
  4069ec:	6830      	ldr	r0, [r6, #0]
  4069ee:	b1a8      	cbz	r0, 406a1c <__pow5mult+0x54>
  4069f0:	4606      	mov	r6, r0
  4069f2:	07e3      	lsls	r3, r4, #31
  4069f4:	d5f8      	bpl.n	4069e8 <__pow5mult+0x20>
  4069f6:	4632      	mov	r2, r6
  4069f8:	4629      	mov	r1, r5
  4069fa:	4638      	mov	r0, r7
  4069fc:	f7ff ff52 	bl	4068a4 <__multiply>
  406a00:	b1b5      	cbz	r5, 406a30 <__pow5mult+0x68>
  406a02:	686a      	ldr	r2, [r5, #4]
  406a04:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406a06:	1064      	asrs	r4, r4, #1
  406a08:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406a0c:	6029      	str	r1, [r5, #0]
  406a0e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  406a12:	4605      	mov	r5, r0
  406a14:	d1ea      	bne.n	4069ec <__pow5mult+0x24>
  406a16:	4628      	mov	r0, r5
  406a18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406a1c:	4632      	mov	r2, r6
  406a1e:	4631      	mov	r1, r6
  406a20:	4638      	mov	r0, r7
  406a22:	f7ff ff3f 	bl	4068a4 <__multiply>
  406a26:	6030      	str	r0, [r6, #0]
  406a28:	f8c0 8000 	str.w	r8, [r0]
  406a2c:	4606      	mov	r6, r0
  406a2e:	e7e0      	b.n	4069f2 <__pow5mult+0x2a>
  406a30:	4605      	mov	r5, r0
  406a32:	e7d9      	b.n	4069e8 <__pow5mult+0x20>
  406a34:	4a0b      	ldr	r2, [pc, #44]	; (406a64 <__pow5mult+0x9c>)
  406a36:	3b01      	subs	r3, #1
  406a38:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
  406a3c:	2300      	movs	r3, #0
  406a3e:	f7ff fe95 	bl	40676c <__multadd>
  406a42:	4605      	mov	r5, r0
  406a44:	e7c8      	b.n	4069d8 <__pow5mult+0x10>
  406a46:	2101      	movs	r1, #1
  406a48:	4638      	mov	r0, r7
  406a4a:	f7ff fe5f 	bl	40670c <_Balloc>
  406a4e:	f240 2171 	movw	r1, #625	; 0x271
  406a52:	2201      	movs	r2, #1
  406a54:	2300      	movs	r3, #0
  406a56:	6141      	str	r1, [r0, #20]
  406a58:	6102      	str	r2, [r0, #16]
  406a5a:	4606      	mov	r6, r0
  406a5c:	64b8      	str	r0, [r7, #72]	; 0x48
  406a5e:	6003      	str	r3, [r0, #0]
  406a60:	e7be      	b.n	4069e0 <__pow5mult+0x18>
  406a62:	bf00      	nop
  406a64:	004081c8 	.word	0x004081c8

00406a68 <__lshift>:
  406a68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406a6c:	690b      	ldr	r3, [r1, #16]
  406a6e:	1154      	asrs	r4, r2, #5
  406a70:	eb04 0803 	add.w	r8, r4, r3
  406a74:	688b      	ldr	r3, [r1, #8]
  406a76:	f108 0501 	add.w	r5, r8, #1
  406a7a:	429d      	cmp	r5, r3
  406a7c:	460e      	mov	r6, r1
  406a7e:	4691      	mov	r9, r2
  406a80:	4607      	mov	r7, r0
  406a82:	6849      	ldr	r1, [r1, #4]
  406a84:	dd04      	ble.n	406a90 <__lshift+0x28>
  406a86:	005b      	lsls	r3, r3, #1
  406a88:	429d      	cmp	r5, r3
  406a8a:	f101 0101 	add.w	r1, r1, #1
  406a8e:	dcfa      	bgt.n	406a86 <__lshift+0x1e>
  406a90:	4638      	mov	r0, r7
  406a92:	f7ff fe3b 	bl	40670c <_Balloc>
  406a96:	2c00      	cmp	r4, #0
  406a98:	f100 0314 	add.w	r3, r0, #20
  406a9c:	dd06      	ble.n	406aac <__lshift+0x44>
  406a9e:	2100      	movs	r1, #0
  406aa0:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  406aa4:	f843 1b04 	str.w	r1, [r3], #4
  406aa8:	429a      	cmp	r2, r3
  406aaa:	d1fb      	bne.n	406aa4 <__lshift+0x3c>
  406aac:	6934      	ldr	r4, [r6, #16]
  406aae:	f106 0114 	add.w	r1, r6, #20
  406ab2:	f019 091f 	ands.w	r9, r9, #31
  406ab6:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  406aba:	d01d      	beq.n	406af8 <__lshift+0x90>
  406abc:	2200      	movs	r2, #0
  406abe:	f1c9 0c20 	rsb	ip, r9, #32
  406ac2:	680c      	ldr	r4, [r1, #0]
  406ac4:	fa04 f409 	lsl.w	r4, r4, r9
  406ac8:	4314      	orrs	r4, r2
  406aca:	f843 4b04 	str.w	r4, [r3], #4
  406ace:	f851 2b04 	ldr.w	r2, [r1], #4
  406ad2:	458e      	cmp	lr, r1
  406ad4:	fa22 f20c 	lsr.w	r2, r2, ip
  406ad8:	d8f3      	bhi.n	406ac2 <__lshift+0x5a>
  406ada:	601a      	str	r2, [r3, #0]
  406adc:	b10a      	cbz	r2, 406ae2 <__lshift+0x7a>
  406ade:	f108 0502 	add.w	r5, r8, #2
  406ae2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406ae4:	6872      	ldr	r2, [r6, #4]
  406ae6:	3d01      	subs	r5, #1
  406ae8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406aec:	6105      	str	r5, [r0, #16]
  406aee:	6031      	str	r1, [r6, #0]
  406af0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  406af4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406af8:	3b04      	subs	r3, #4
  406afa:	f851 2b04 	ldr.w	r2, [r1], #4
  406afe:	458e      	cmp	lr, r1
  406b00:	f843 2f04 	str.w	r2, [r3, #4]!
  406b04:	d8f9      	bhi.n	406afa <__lshift+0x92>
  406b06:	e7ec      	b.n	406ae2 <__lshift+0x7a>

00406b08 <__mcmp>:
  406b08:	b430      	push	{r4, r5}
  406b0a:	690b      	ldr	r3, [r1, #16]
  406b0c:	4605      	mov	r5, r0
  406b0e:	6900      	ldr	r0, [r0, #16]
  406b10:	1ac0      	subs	r0, r0, r3
  406b12:	d10f      	bne.n	406b34 <__mcmp+0x2c>
  406b14:	009b      	lsls	r3, r3, #2
  406b16:	3514      	adds	r5, #20
  406b18:	3114      	adds	r1, #20
  406b1a:	4419      	add	r1, r3
  406b1c:	442b      	add	r3, r5
  406b1e:	e001      	b.n	406b24 <__mcmp+0x1c>
  406b20:	429d      	cmp	r5, r3
  406b22:	d207      	bcs.n	406b34 <__mcmp+0x2c>
  406b24:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  406b28:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  406b2c:	4294      	cmp	r4, r2
  406b2e:	d0f7      	beq.n	406b20 <__mcmp+0x18>
  406b30:	d302      	bcc.n	406b38 <__mcmp+0x30>
  406b32:	2001      	movs	r0, #1
  406b34:	bc30      	pop	{r4, r5}
  406b36:	4770      	bx	lr
  406b38:	f04f 30ff 	mov.w	r0, #4294967295
  406b3c:	e7fa      	b.n	406b34 <__mcmp+0x2c>
  406b3e:	bf00      	nop

00406b40 <__mdiff>:
  406b40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406b44:	690c      	ldr	r4, [r1, #16]
  406b46:	4689      	mov	r9, r1
  406b48:	6911      	ldr	r1, [r2, #16]
  406b4a:	4692      	mov	sl, r2
  406b4c:	1a64      	subs	r4, r4, r1
  406b4e:	2c00      	cmp	r4, #0
  406b50:	d117      	bne.n	406b82 <__mdiff+0x42>
  406b52:	0089      	lsls	r1, r1, #2
  406b54:	f109 0714 	add.w	r7, r9, #20
  406b58:	f102 0614 	add.w	r6, r2, #20
  406b5c:	187b      	adds	r3, r7, r1
  406b5e:	4431      	add	r1, r6
  406b60:	e001      	b.n	406b66 <__mdiff+0x26>
  406b62:	429f      	cmp	r7, r3
  406b64:	d265      	bcs.n	406c32 <__mdiff+0xf2>
  406b66:	f853 5d04 	ldr.w	r5, [r3, #-4]!
  406b6a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  406b6e:	4295      	cmp	r5, r2
  406b70:	d0f7      	beq.n	406b62 <__mdiff+0x22>
  406b72:	d267      	bcs.n	406c44 <__mdiff+0x104>
  406b74:	464b      	mov	r3, r9
  406b76:	46bb      	mov	fp, r7
  406b78:	46d1      	mov	r9, sl
  406b7a:	4637      	mov	r7, r6
  406b7c:	469a      	mov	sl, r3
  406b7e:	2401      	movs	r4, #1
  406b80:	e005      	b.n	406b8e <__mdiff+0x4e>
  406b82:	db61      	blt.n	406c48 <__mdiff+0x108>
  406b84:	2400      	movs	r4, #0
  406b86:	f109 0714 	add.w	r7, r9, #20
  406b8a:	f10a 0b14 	add.w	fp, sl, #20
  406b8e:	f8d9 1004 	ldr.w	r1, [r9, #4]
  406b92:	f7ff fdbb 	bl	40670c <_Balloc>
  406b96:	465d      	mov	r5, fp
  406b98:	f04f 0800 	mov.w	r8, #0
  406b9c:	f8d9 e010 	ldr.w	lr, [r9, #16]
  406ba0:	f8da 3010 	ldr.w	r3, [sl, #16]
  406ba4:	463e      	mov	r6, r7
  406ba6:	60c4      	str	r4, [r0, #12]
  406ba8:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
  406bac:	eb07 078e 	add.w	r7, r7, lr, lsl #2
  406bb0:	f100 0414 	add.w	r4, r0, #20
  406bb4:	f856 9b04 	ldr.w	r9, [r6], #4
  406bb8:	f855 2b04 	ldr.w	r2, [r5], #4
  406bbc:	fa1f f389 	uxth.w	r3, r9
  406bc0:	4443      	add	r3, r8
  406bc2:	fa1f f882 	uxth.w	r8, r2
  406bc6:	0c12      	lsrs	r2, r2, #16
  406bc8:	eba3 0308 	sub.w	r3, r3, r8
  406bcc:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
  406bd0:	eb02 4223 	add.w	r2, r2, r3, asr #16
  406bd4:	b29b      	uxth	r3, r3
  406bd6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  406bda:	45ac      	cmp	ip, r5
  406bdc:	f844 3b04 	str.w	r3, [r4], #4
  406be0:	ea4f 4822 	mov.w	r8, r2, asr #16
  406be4:	d8e6      	bhi.n	406bb4 <__mdiff+0x74>
  406be6:	42b7      	cmp	r7, r6
  406be8:	d917      	bls.n	406c1a <__mdiff+0xda>
  406bea:	46a4      	mov	ip, r4
  406bec:	4635      	mov	r5, r6
  406bee:	f855 3b04 	ldr.w	r3, [r5], #4
  406bf2:	b299      	uxth	r1, r3
  406bf4:	4441      	add	r1, r8
  406bf6:	140a      	asrs	r2, r1, #16
  406bf8:	eb02 4213 	add.w	r2, r2, r3, lsr #16
  406bfc:	b289      	uxth	r1, r1
  406bfe:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
  406c02:	42af      	cmp	r7, r5
  406c04:	f84c 3b04 	str.w	r3, [ip], #4
  406c08:	ea4f 4822 	mov.w	r8, r2, asr #16
  406c0c:	d8ef      	bhi.n	406bee <__mdiff+0xae>
  406c0e:	43f6      	mvns	r6, r6
  406c10:	4437      	add	r7, r6
  406c12:	f027 0703 	bic.w	r7, r7, #3
  406c16:	3704      	adds	r7, #4
  406c18:	443c      	add	r4, r7
  406c1a:	3c04      	subs	r4, #4
  406c1c:	b92b      	cbnz	r3, 406c2a <__mdiff+0xea>
  406c1e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  406c22:	f10e 3eff 	add.w	lr, lr, #4294967295
  406c26:	2b00      	cmp	r3, #0
  406c28:	d0f9      	beq.n	406c1e <__mdiff+0xde>
  406c2a:	f8c0 e010 	str.w	lr, [r0, #16]
  406c2e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406c32:	2100      	movs	r1, #0
  406c34:	f7ff fd6a 	bl	40670c <_Balloc>
  406c38:	2201      	movs	r2, #1
  406c3a:	2300      	movs	r3, #0
  406c3c:	6102      	str	r2, [r0, #16]
  406c3e:	6143      	str	r3, [r0, #20]
  406c40:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406c44:	46b3      	mov	fp, r6
  406c46:	e7a2      	b.n	406b8e <__mdiff+0x4e>
  406c48:	464b      	mov	r3, r9
  406c4a:	f109 0b14 	add.w	fp, r9, #20
  406c4e:	f102 0714 	add.w	r7, r2, #20
  406c52:	4691      	mov	r9, r2
  406c54:	2401      	movs	r4, #1
  406c56:	469a      	mov	sl, r3
  406c58:	e799      	b.n	406b8e <__mdiff+0x4e>
  406c5a:	bf00      	nop

00406c5c <__d2b>:
  406c5c:	b5f0      	push	{r4, r5, r6, r7, lr}
  406c5e:	2101      	movs	r1, #1
  406c60:	b083      	sub	sp, #12
  406c62:	461c      	mov	r4, r3
  406c64:	f3c3 550a 	ubfx	r5, r3, #20, #11
  406c68:	4616      	mov	r6, r2
  406c6a:	f7ff fd4f 	bl	40670c <_Balloc>
  406c6e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  406c72:	4607      	mov	r7, r0
  406c74:	b10d      	cbz	r5, 406c7a <__d2b+0x1e>
  406c76:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  406c7a:	9401      	str	r4, [sp, #4]
  406c7c:	b306      	cbz	r6, 406cc0 <__d2b+0x64>
  406c7e:	a802      	add	r0, sp, #8
  406c80:	f840 6d08 	str.w	r6, [r0, #-8]!
  406c84:	f7ff fdd4 	bl	406830 <__lo0bits>
  406c88:	2800      	cmp	r0, #0
  406c8a:	d130      	bne.n	406cee <__d2b+0x92>
  406c8c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406c90:	617a      	str	r2, [r7, #20]
  406c92:	2b00      	cmp	r3, #0
  406c94:	bf0c      	ite	eq
  406c96:	2101      	moveq	r1, #1
  406c98:	2102      	movne	r1, #2
  406c9a:	61bb      	str	r3, [r7, #24]
  406c9c:	6139      	str	r1, [r7, #16]
  406c9e:	b9d5      	cbnz	r5, 406cd6 <__d2b+0x7a>
  406ca0:	9a08      	ldr	r2, [sp, #32]
  406ca2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
  406ca6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406caa:	6010      	str	r0, [r2, #0]
  406cac:	6918      	ldr	r0, [r3, #16]
  406cae:	f7ff fd9f 	bl	4067f0 <__hi0bits>
  406cb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406cb4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406cb8:	6018      	str	r0, [r3, #0]
  406cba:	4638      	mov	r0, r7
  406cbc:	b003      	add	sp, #12
  406cbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406cc0:	a801      	add	r0, sp, #4
  406cc2:	f7ff fdb5 	bl	406830 <__lo0bits>
  406cc6:	2201      	movs	r2, #1
  406cc8:	9b01      	ldr	r3, [sp, #4]
  406cca:	4611      	mov	r1, r2
  406ccc:	3020      	adds	r0, #32
  406cce:	613a      	str	r2, [r7, #16]
  406cd0:	617b      	str	r3, [r7, #20]
  406cd2:	2d00      	cmp	r5, #0
  406cd4:	d0e4      	beq.n	406ca0 <__d2b+0x44>
  406cd6:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
  406cda:	9a08      	ldr	r2, [sp, #32]
  406cdc:	4403      	add	r3, r0
  406cde:	6013      	str	r3, [r2, #0]
  406ce0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406ce2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  406ce6:	6018      	str	r0, [r3, #0]
  406ce8:	4638      	mov	r0, r7
  406cea:	b003      	add	sp, #12
  406cec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406cee:	9b01      	ldr	r3, [sp, #4]
  406cf0:	f1c0 0220 	rsb	r2, r0, #32
  406cf4:	9900      	ldr	r1, [sp, #0]
  406cf6:	fa03 f202 	lsl.w	r2, r3, r2
  406cfa:	430a      	orrs	r2, r1
  406cfc:	40c3      	lsrs	r3, r0
  406cfe:	9301      	str	r3, [sp, #4]
  406d00:	617a      	str	r2, [r7, #20]
  406d02:	e7c6      	b.n	406c92 <__d2b+0x36>

00406d04 <_realloc_r>:
  406d04:	2900      	cmp	r1, #0
  406d06:	f000 8094 	beq.w	406e32 <_realloc_r+0x12e>
  406d0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406d0e:	460c      	mov	r4, r1
  406d10:	4615      	mov	r5, r2
  406d12:	b083      	sub	sp, #12
  406d14:	4680      	mov	r8, r0
  406d16:	f105 060b 	add.w	r6, r5, #11
  406d1a:	f7ff fceb 	bl	4066f4 <__malloc_lock>
  406d1e:	f854 ec04 	ldr.w	lr, [r4, #-4]
  406d22:	2e16      	cmp	r6, #22
  406d24:	f02e 0703 	bic.w	r7, lr, #3
  406d28:	f1a4 0908 	sub.w	r9, r4, #8
  406d2c:	d83c      	bhi.n	406da8 <_realloc_r+0xa4>
  406d2e:	2210      	movs	r2, #16
  406d30:	4616      	mov	r6, r2
  406d32:	42b5      	cmp	r5, r6
  406d34:	d83d      	bhi.n	406db2 <_realloc_r+0xae>
  406d36:	4297      	cmp	r7, r2
  406d38:	da43      	bge.n	406dc2 <_realloc_r+0xbe>
  406d3a:	4bc6      	ldr	r3, [pc, #792]	; (407054 <_realloc_r+0x350>)
  406d3c:	eb09 0007 	add.w	r0, r9, r7
  406d40:	6899      	ldr	r1, [r3, #8]
  406d42:	4288      	cmp	r0, r1
  406d44:	f000 80c3 	beq.w	406ece <_realloc_r+0x1ca>
  406d48:	6843      	ldr	r3, [r0, #4]
  406d4a:	f023 0101 	bic.w	r1, r3, #1
  406d4e:	4401      	add	r1, r0
  406d50:	6849      	ldr	r1, [r1, #4]
  406d52:	07c9      	lsls	r1, r1, #31
  406d54:	d54d      	bpl.n	406df2 <_realloc_r+0xee>
  406d56:	f01e 0f01 	tst.w	lr, #1
  406d5a:	f000 809b 	beq.w	406e94 <_realloc_r+0x190>
  406d5e:	4629      	mov	r1, r5
  406d60:	4640      	mov	r0, r8
  406d62:	f7ff f965 	bl	406030 <_malloc_r>
  406d66:	4605      	mov	r5, r0
  406d68:	2800      	cmp	r0, #0
  406d6a:	d03b      	beq.n	406de4 <_realloc_r+0xe0>
  406d6c:	f854 3c04 	ldr.w	r3, [r4, #-4]
  406d70:	f1a0 0208 	sub.w	r2, r0, #8
  406d74:	f023 0301 	bic.w	r3, r3, #1
  406d78:	444b      	add	r3, r9
  406d7a:	429a      	cmp	r2, r3
  406d7c:	f000 812b 	beq.w	406fd6 <_realloc_r+0x2d2>
  406d80:	1f3a      	subs	r2, r7, #4
  406d82:	2a24      	cmp	r2, #36	; 0x24
  406d84:	f200 8118 	bhi.w	406fb8 <_realloc_r+0x2b4>
  406d88:	2a13      	cmp	r2, #19
  406d8a:	f200 80eb 	bhi.w	406f64 <_realloc_r+0x260>
  406d8e:	4603      	mov	r3, r0
  406d90:	4622      	mov	r2, r4
  406d92:	6811      	ldr	r1, [r2, #0]
  406d94:	6019      	str	r1, [r3, #0]
  406d96:	6851      	ldr	r1, [r2, #4]
  406d98:	6059      	str	r1, [r3, #4]
  406d9a:	6892      	ldr	r2, [r2, #8]
  406d9c:	609a      	str	r2, [r3, #8]
  406d9e:	4621      	mov	r1, r4
  406da0:	4640      	mov	r0, r8
  406da2:	f7ff f849 	bl	405e38 <_free_r>
  406da6:	e01d      	b.n	406de4 <_realloc_r+0xe0>
  406da8:	f026 0607 	bic.w	r6, r6, #7
  406dac:	2e00      	cmp	r6, #0
  406dae:	4632      	mov	r2, r6
  406db0:	dabf      	bge.n	406d32 <_realloc_r+0x2e>
  406db2:	2500      	movs	r5, #0
  406db4:	230c      	movs	r3, #12
  406db6:	4628      	mov	r0, r5
  406db8:	f8c8 3000 	str.w	r3, [r8]
  406dbc:	b003      	add	sp, #12
  406dbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406dc2:	4625      	mov	r5, r4
  406dc4:	1bbb      	subs	r3, r7, r6
  406dc6:	2b0f      	cmp	r3, #15
  406dc8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  406dcc:	d81d      	bhi.n	406e0a <_realloc_r+0x106>
  406dce:	f002 0201 	and.w	r2, r2, #1
  406dd2:	433a      	orrs	r2, r7
  406dd4:	eb09 0107 	add.w	r1, r9, r7
  406dd8:	f8c9 2004 	str.w	r2, [r9, #4]
  406ddc:	684b      	ldr	r3, [r1, #4]
  406dde:	f043 0301 	orr.w	r3, r3, #1
  406de2:	604b      	str	r3, [r1, #4]
  406de4:	4640      	mov	r0, r8
  406de6:	f7ff fc8b 	bl	406700 <__malloc_unlock>
  406dea:	4628      	mov	r0, r5
  406dec:	b003      	add	sp, #12
  406dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406df2:	f023 0303 	bic.w	r3, r3, #3
  406df6:	18f9      	adds	r1, r7, r3
  406df8:	4291      	cmp	r1, r2
  406dfa:	db1d      	blt.n	406e38 <_realloc_r+0x134>
  406dfc:	68c3      	ldr	r3, [r0, #12]
  406dfe:	6882      	ldr	r2, [r0, #8]
  406e00:	4625      	mov	r5, r4
  406e02:	60d3      	str	r3, [r2, #12]
  406e04:	460f      	mov	r7, r1
  406e06:	609a      	str	r2, [r3, #8]
  406e08:	e7dc      	b.n	406dc4 <_realloc_r+0xc0>
  406e0a:	f002 0201 	and.w	r2, r2, #1
  406e0e:	eb09 0106 	add.w	r1, r9, r6
  406e12:	f043 0301 	orr.w	r3, r3, #1
  406e16:	4332      	orrs	r2, r6
  406e18:	f8c9 2004 	str.w	r2, [r9, #4]
  406e1c:	444f      	add	r7, r9
  406e1e:	604b      	str	r3, [r1, #4]
  406e20:	687b      	ldr	r3, [r7, #4]
  406e22:	3108      	adds	r1, #8
  406e24:	f043 0301 	orr.w	r3, r3, #1
  406e28:	607b      	str	r3, [r7, #4]
  406e2a:	4640      	mov	r0, r8
  406e2c:	f7ff f804 	bl	405e38 <_free_r>
  406e30:	e7d8      	b.n	406de4 <_realloc_r+0xe0>
  406e32:	4611      	mov	r1, r2
  406e34:	f7ff b8fc 	b.w	406030 <_malloc_r>
  406e38:	f01e 0f01 	tst.w	lr, #1
  406e3c:	d18f      	bne.n	406d5e <_realloc_r+0x5a>
  406e3e:	f854 1c08 	ldr.w	r1, [r4, #-8]
  406e42:	eba9 0a01 	sub.w	sl, r9, r1
  406e46:	f8da 1004 	ldr.w	r1, [sl, #4]
  406e4a:	f021 0103 	bic.w	r1, r1, #3
  406e4e:	440b      	add	r3, r1
  406e50:	443b      	add	r3, r7
  406e52:	4293      	cmp	r3, r2
  406e54:	db26      	blt.n	406ea4 <_realloc_r+0x1a0>
  406e56:	4655      	mov	r5, sl
  406e58:	68c1      	ldr	r1, [r0, #12]
  406e5a:	6880      	ldr	r0, [r0, #8]
  406e5c:	1f3a      	subs	r2, r7, #4
  406e5e:	60c1      	str	r1, [r0, #12]
  406e60:	6088      	str	r0, [r1, #8]
  406e62:	f855 0f08 	ldr.w	r0, [r5, #8]!
  406e66:	f8da 100c 	ldr.w	r1, [sl, #12]
  406e6a:	2a24      	cmp	r2, #36	; 0x24
  406e6c:	60c1      	str	r1, [r0, #12]
  406e6e:	6088      	str	r0, [r1, #8]
  406e70:	d826      	bhi.n	406ec0 <_realloc_r+0x1bc>
  406e72:	2a13      	cmp	r2, #19
  406e74:	f240 8081 	bls.w	406f7a <_realloc_r+0x276>
  406e78:	6821      	ldr	r1, [r4, #0]
  406e7a:	2a1b      	cmp	r2, #27
  406e7c:	f8ca 1008 	str.w	r1, [sl, #8]
  406e80:	6861      	ldr	r1, [r4, #4]
  406e82:	f8ca 100c 	str.w	r1, [sl, #12]
  406e86:	f200 80ad 	bhi.w	406fe4 <_realloc_r+0x2e0>
  406e8a:	f104 0008 	add.w	r0, r4, #8
  406e8e:	f10a 0210 	add.w	r2, sl, #16
  406e92:	e074      	b.n	406f7e <_realloc_r+0x27a>
  406e94:	f854 3c08 	ldr.w	r3, [r4, #-8]
  406e98:	eba9 0a03 	sub.w	sl, r9, r3
  406e9c:	f8da 1004 	ldr.w	r1, [sl, #4]
  406ea0:	f021 0103 	bic.w	r1, r1, #3
  406ea4:	187b      	adds	r3, r7, r1
  406ea6:	4293      	cmp	r3, r2
  406ea8:	f6ff af59 	blt.w	406d5e <_realloc_r+0x5a>
  406eac:	4655      	mov	r5, sl
  406eae:	f8da 100c 	ldr.w	r1, [sl, #12]
  406eb2:	f855 0f08 	ldr.w	r0, [r5, #8]!
  406eb6:	1f3a      	subs	r2, r7, #4
  406eb8:	2a24      	cmp	r2, #36	; 0x24
  406eba:	60c1      	str	r1, [r0, #12]
  406ebc:	6088      	str	r0, [r1, #8]
  406ebe:	d9d8      	bls.n	406e72 <_realloc_r+0x16e>
  406ec0:	4621      	mov	r1, r4
  406ec2:	4628      	mov	r0, r5
  406ec4:	461f      	mov	r7, r3
  406ec6:	46d1      	mov	r9, sl
  406ec8:	f7ff fbb0 	bl	40662c <memmove>
  406ecc:	e77a      	b.n	406dc4 <_realloc_r+0xc0>
  406ece:	6841      	ldr	r1, [r0, #4]
  406ed0:	f106 0010 	add.w	r0, r6, #16
  406ed4:	f021 0b03 	bic.w	fp, r1, #3
  406ed8:	44bb      	add	fp, r7
  406eda:	4583      	cmp	fp, r0
  406edc:	da58      	bge.n	406f90 <_realloc_r+0x28c>
  406ede:	f01e 0f01 	tst.w	lr, #1
  406ee2:	f47f af3c 	bne.w	406d5e <_realloc_r+0x5a>
  406ee6:	f854 1c08 	ldr.w	r1, [r4, #-8]
  406eea:	eba9 0a01 	sub.w	sl, r9, r1
  406eee:	f8da 1004 	ldr.w	r1, [sl, #4]
  406ef2:	f021 0103 	bic.w	r1, r1, #3
  406ef6:	448b      	add	fp, r1
  406ef8:	4558      	cmp	r0, fp
  406efa:	dcd3      	bgt.n	406ea4 <_realloc_r+0x1a0>
  406efc:	4655      	mov	r5, sl
  406efe:	f8da 100c 	ldr.w	r1, [sl, #12]
  406f02:	f855 0f08 	ldr.w	r0, [r5, #8]!
  406f06:	1f3a      	subs	r2, r7, #4
  406f08:	2a24      	cmp	r2, #36	; 0x24
  406f0a:	60c1      	str	r1, [r0, #12]
  406f0c:	6088      	str	r0, [r1, #8]
  406f0e:	f200 808d 	bhi.w	40702c <_realloc_r+0x328>
  406f12:	2a13      	cmp	r2, #19
  406f14:	f240 8087 	bls.w	407026 <_realloc_r+0x322>
  406f18:	6821      	ldr	r1, [r4, #0]
  406f1a:	2a1b      	cmp	r2, #27
  406f1c:	f8ca 1008 	str.w	r1, [sl, #8]
  406f20:	6861      	ldr	r1, [r4, #4]
  406f22:	f8ca 100c 	str.w	r1, [sl, #12]
  406f26:	f200 8088 	bhi.w	40703a <_realloc_r+0x336>
  406f2a:	f104 0108 	add.w	r1, r4, #8
  406f2e:	f10a 0210 	add.w	r2, sl, #16
  406f32:	6808      	ldr	r0, [r1, #0]
  406f34:	6010      	str	r0, [r2, #0]
  406f36:	6848      	ldr	r0, [r1, #4]
  406f38:	6050      	str	r0, [r2, #4]
  406f3a:	6889      	ldr	r1, [r1, #8]
  406f3c:	6091      	str	r1, [r2, #8]
  406f3e:	ebab 0206 	sub.w	r2, fp, r6
  406f42:	eb0a 0106 	add.w	r1, sl, r6
  406f46:	f042 0201 	orr.w	r2, r2, #1
  406f4a:	6099      	str	r1, [r3, #8]
  406f4c:	604a      	str	r2, [r1, #4]
  406f4e:	f8da 3004 	ldr.w	r3, [sl, #4]
  406f52:	4640      	mov	r0, r8
  406f54:	f003 0301 	and.w	r3, r3, #1
  406f58:	431e      	orrs	r6, r3
  406f5a:	f8ca 6004 	str.w	r6, [sl, #4]
  406f5e:	f7ff fbcf 	bl	406700 <__malloc_unlock>
  406f62:	e742      	b.n	406dea <_realloc_r+0xe6>
  406f64:	6823      	ldr	r3, [r4, #0]
  406f66:	2a1b      	cmp	r2, #27
  406f68:	6003      	str	r3, [r0, #0]
  406f6a:	6863      	ldr	r3, [r4, #4]
  406f6c:	6043      	str	r3, [r0, #4]
  406f6e:	d827      	bhi.n	406fc0 <_realloc_r+0x2bc>
  406f70:	f100 0308 	add.w	r3, r0, #8
  406f74:	f104 0208 	add.w	r2, r4, #8
  406f78:	e70b      	b.n	406d92 <_realloc_r+0x8e>
  406f7a:	4620      	mov	r0, r4
  406f7c:	462a      	mov	r2, r5
  406f7e:	6801      	ldr	r1, [r0, #0]
  406f80:	461f      	mov	r7, r3
  406f82:	6011      	str	r1, [r2, #0]
  406f84:	6841      	ldr	r1, [r0, #4]
  406f86:	46d1      	mov	r9, sl
  406f88:	6051      	str	r1, [r2, #4]
  406f8a:	6883      	ldr	r3, [r0, #8]
  406f8c:	6093      	str	r3, [r2, #8]
  406f8e:	e719      	b.n	406dc4 <_realloc_r+0xc0>
  406f90:	ebab 0b06 	sub.w	fp, fp, r6
  406f94:	eb09 0106 	add.w	r1, r9, r6
  406f98:	f04b 0201 	orr.w	r2, fp, #1
  406f9c:	6099      	str	r1, [r3, #8]
  406f9e:	604a      	str	r2, [r1, #4]
  406fa0:	f854 3c04 	ldr.w	r3, [r4, #-4]
  406fa4:	4640      	mov	r0, r8
  406fa6:	f003 0301 	and.w	r3, r3, #1
  406faa:	431e      	orrs	r6, r3
  406fac:	f844 6c04 	str.w	r6, [r4, #-4]
  406fb0:	f7ff fba6 	bl	406700 <__malloc_unlock>
  406fb4:	4625      	mov	r5, r4
  406fb6:	e718      	b.n	406dea <_realloc_r+0xe6>
  406fb8:	4621      	mov	r1, r4
  406fba:	f7ff fb37 	bl	40662c <memmove>
  406fbe:	e6ee      	b.n	406d9e <_realloc_r+0x9a>
  406fc0:	68a3      	ldr	r3, [r4, #8]
  406fc2:	2a24      	cmp	r2, #36	; 0x24
  406fc4:	6083      	str	r3, [r0, #8]
  406fc6:	68e3      	ldr	r3, [r4, #12]
  406fc8:	60c3      	str	r3, [r0, #12]
  406fca:	d018      	beq.n	406ffe <_realloc_r+0x2fa>
  406fcc:	f100 0310 	add.w	r3, r0, #16
  406fd0:	f104 0210 	add.w	r2, r4, #16
  406fd4:	e6dd      	b.n	406d92 <_realloc_r+0x8e>
  406fd6:	f850 3c04 	ldr.w	r3, [r0, #-4]
  406fda:	4625      	mov	r5, r4
  406fdc:	f023 0303 	bic.w	r3, r3, #3
  406fe0:	441f      	add	r7, r3
  406fe2:	e6ef      	b.n	406dc4 <_realloc_r+0xc0>
  406fe4:	68a1      	ldr	r1, [r4, #8]
  406fe6:	2a24      	cmp	r2, #36	; 0x24
  406fe8:	f8ca 1010 	str.w	r1, [sl, #16]
  406fec:	68e1      	ldr	r1, [r4, #12]
  406fee:	f8ca 1014 	str.w	r1, [sl, #20]
  406ff2:	d00d      	beq.n	407010 <_realloc_r+0x30c>
  406ff4:	f104 0010 	add.w	r0, r4, #16
  406ff8:	f10a 0218 	add.w	r2, sl, #24
  406ffc:	e7bf      	b.n	406f7e <_realloc_r+0x27a>
  406ffe:	6922      	ldr	r2, [r4, #16]
  407000:	f100 0318 	add.w	r3, r0, #24
  407004:	6102      	str	r2, [r0, #16]
  407006:	6961      	ldr	r1, [r4, #20]
  407008:	f104 0218 	add.w	r2, r4, #24
  40700c:	6141      	str	r1, [r0, #20]
  40700e:	e6c0      	b.n	406d92 <_realloc_r+0x8e>
  407010:	6922      	ldr	r2, [r4, #16]
  407012:	f104 0018 	add.w	r0, r4, #24
  407016:	f8ca 2018 	str.w	r2, [sl, #24]
  40701a:	6961      	ldr	r1, [r4, #20]
  40701c:	f10a 0220 	add.w	r2, sl, #32
  407020:	f8ca 101c 	str.w	r1, [sl, #28]
  407024:	e7ab      	b.n	406f7e <_realloc_r+0x27a>
  407026:	4621      	mov	r1, r4
  407028:	462a      	mov	r2, r5
  40702a:	e782      	b.n	406f32 <_realloc_r+0x22e>
  40702c:	4621      	mov	r1, r4
  40702e:	4628      	mov	r0, r5
  407030:	9301      	str	r3, [sp, #4]
  407032:	f7ff fafb 	bl	40662c <memmove>
  407036:	9b01      	ldr	r3, [sp, #4]
  407038:	e781      	b.n	406f3e <_realloc_r+0x23a>
  40703a:	68a1      	ldr	r1, [r4, #8]
  40703c:	2a24      	cmp	r2, #36	; 0x24
  40703e:	f8ca 1010 	str.w	r1, [sl, #16]
  407042:	68e1      	ldr	r1, [r4, #12]
  407044:	f8ca 1014 	str.w	r1, [sl, #20]
  407048:	d006      	beq.n	407058 <_realloc_r+0x354>
  40704a:	f104 0110 	add.w	r1, r4, #16
  40704e:	f10a 0218 	add.w	r2, sl, #24
  407052:	e76e      	b.n	406f32 <_realloc_r+0x22e>
  407054:	200007a8 	.word	0x200007a8
  407058:	6922      	ldr	r2, [r4, #16]
  40705a:	f104 0118 	add.w	r1, r4, #24
  40705e:	f8ca 2018 	str.w	r2, [sl, #24]
  407062:	6960      	ldr	r0, [r4, #20]
  407064:	f10a 0220 	add.w	r2, sl, #32
  407068:	f8ca 001c 	str.w	r0, [sl, #28]
  40706c:	e761      	b.n	406f32 <_realloc_r+0x22e>
  40706e:	bf00      	nop

00407070 <_sbrk_r>:
  407070:	b538      	push	{r3, r4, r5, lr}
  407072:	2300      	movs	r3, #0
  407074:	4c06      	ldr	r4, [pc, #24]	; (407090 <_sbrk_r+0x20>)
  407076:	4605      	mov	r5, r0
  407078:	4608      	mov	r0, r1
  40707a:	6023      	str	r3, [r4, #0]
  40707c:	f7fc f9b4 	bl	4033e8 <_sbrk>
  407080:	1c43      	adds	r3, r0, #1
  407082:	d000      	beq.n	407086 <_sbrk_r+0x16>
  407084:	bd38      	pop	{r3, r4, r5, pc}
  407086:	6823      	ldr	r3, [r4, #0]
  407088:	2b00      	cmp	r3, #0
  40708a:	d0fb      	beq.n	407084 <_sbrk_r+0x14>
  40708c:	602b      	str	r3, [r5, #0]
  40708e:	bd38      	pop	{r3, r4, r5, pc}
  407090:	20000ed0 	.word	0x20000ed0

00407094 <__ssprint_r>:
  407094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407098:	6893      	ldr	r3, [r2, #8]
  40709a:	b083      	sub	sp, #12
  40709c:	4690      	mov	r8, r2
  40709e:	2b00      	cmp	r3, #0
  4070a0:	d070      	beq.n	407184 <__ssprint_r+0xf0>
  4070a2:	4682      	mov	sl, r0
  4070a4:	460c      	mov	r4, r1
  4070a6:	6817      	ldr	r7, [r2, #0]
  4070a8:	688d      	ldr	r5, [r1, #8]
  4070aa:	6808      	ldr	r0, [r1, #0]
  4070ac:	e042      	b.n	407134 <__ssprint_r+0xa0>
  4070ae:	89a3      	ldrh	r3, [r4, #12]
  4070b0:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4070b4:	d02e      	beq.n	407114 <__ssprint_r+0x80>
  4070b6:	6965      	ldr	r5, [r4, #20]
  4070b8:	6921      	ldr	r1, [r4, #16]
  4070ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4070be:	eba0 0b01 	sub.w	fp, r0, r1
  4070c2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  4070c6:	f10b 0001 	add.w	r0, fp, #1
  4070ca:	106d      	asrs	r5, r5, #1
  4070cc:	4430      	add	r0, r6
  4070ce:	42a8      	cmp	r0, r5
  4070d0:	462a      	mov	r2, r5
  4070d2:	bf84      	itt	hi
  4070d4:	4605      	movhi	r5, r0
  4070d6:	462a      	movhi	r2, r5
  4070d8:	055b      	lsls	r3, r3, #21
  4070da:	d538      	bpl.n	40714e <__ssprint_r+0xba>
  4070dc:	4611      	mov	r1, r2
  4070de:	4650      	mov	r0, sl
  4070e0:	f7fe ffa6 	bl	406030 <_malloc_r>
  4070e4:	2800      	cmp	r0, #0
  4070e6:	d03c      	beq.n	407162 <__ssprint_r+0xce>
  4070e8:	465a      	mov	r2, fp
  4070ea:	6921      	ldr	r1, [r4, #16]
  4070ec:	9001      	str	r0, [sp, #4]
  4070ee:	f7fc fa31 	bl	403554 <memcpy>
  4070f2:	89a2      	ldrh	r2, [r4, #12]
  4070f4:	9b01      	ldr	r3, [sp, #4]
  4070f6:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4070fa:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4070fe:	81a2      	strh	r2, [r4, #12]
  407100:	eba5 020b 	sub.w	r2, r5, fp
  407104:	eb03 000b 	add.w	r0, r3, fp
  407108:	6165      	str	r5, [r4, #20]
  40710a:	46b3      	mov	fp, r6
  40710c:	4635      	mov	r5, r6
  40710e:	6123      	str	r3, [r4, #16]
  407110:	6020      	str	r0, [r4, #0]
  407112:	60a2      	str	r2, [r4, #8]
  407114:	465a      	mov	r2, fp
  407116:	4649      	mov	r1, r9
  407118:	f7ff fa88 	bl	40662c <memmove>
  40711c:	f8d8 3008 	ldr.w	r3, [r8, #8]
  407120:	68a2      	ldr	r2, [r4, #8]
  407122:	6820      	ldr	r0, [r4, #0]
  407124:	1b55      	subs	r5, r2, r5
  407126:	4458      	add	r0, fp
  407128:	1b9e      	subs	r6, r3, r6
  40712a:	60a5      	str	r5, [r4, #8]
  40712c:	6020      	str	r0, [r4, #0]
  40712e:	f8c8 6008 	str.w	r6, [r8, #8]
  407132:	b33e      	cbz	r6, 407184 <__ssprint_r+0xf0>
  407134:	687e      	ldr	r6, [r7, #4]
  407136:	463b      	mov	r3, r7
  407138:	3708      	adds	r7, #8
  40713a:	2e00      	cmp	r6, #0
  40713c:	d0fa      	beq.n	407134 <__ssprint_r+0xa0>
  40713e:	42ae      	cmp	r6, r5
  407140:	f8d3 9000 	ldr.w	r9, [r3]
  407144:	46ab      	mov	fp, r5
  407146:	d2b2      	bcs.n	4070ae <__ssprint_r+0x1a>
  407148:	4635      	mov	r5, r6
  40714a:	46b3      	mov	fp, r6
  40714c:	e7e2      	b.n	407114 <__ssprint_r+0x80>
  40714e:	4650      	mov	r0, sl
  407150:	f7ff fdd8 	bl	406d04 <_realloc_r>
  407154:	4603      	mov	r3, r0
  407156:	2800      	cmp	r0, #0
  407158:	d1d2      	bne.n	407100 <__ssprint_r+0x6c>
  40715a:	6921      	ldr	r1, [r4, #16]
  40715c:	4650      	mov	r0, sl
  40715e:	f7fe fe6b 	bl	405e38 <_free_r>
  407162:	230c      	movs	r3, #12
  407164:	2200      	movs	r2, #0
  407166:	f04f 30ff 	mov.w	r0, #4294967295
  40716a:	f8ca 3000 	str.w	r3, [sl]
  40716e:	89a3      	ldrh	r3, [r4, #12]
  407170:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  407174:	81a3      	strh	r3, [r4, #12]
  407176:	f8c8 2008 	str.w	r2, [r8, #8]
  40717a:	f8c8 2004 	str.w	r2, [r8, #4]
  40717e:	b003      	add	sp, #12
  407180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407184:	2000      	movs	r0, #0
  407186:	f8c8 0004 	str.w	r0, [r8, #4]
  40718a:	b003      	add	sp, #12
  40718c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407190 <__ascii_wctomb>:
  407190:	b119      	cbz	r1, 40719a <__ascii_wctomb+0xa>
  407192:	2aff      	cmp	r2, #255	; 0xff
  407194:	d803      	bhi.n	40719e <__ascii_wctomb+0xe>
  407196:	700a      	strb	r2, [r1, #0]
  407198:	2101      	movs	r1, #1
  40719a:	4608      	mov	r0, r1
  40719c:	4770      	bx	lr
  40719e:	238a      	movs	r3, #138	; 0x8a
  4071a0:	f04f 31ff 	mov.w	r1, #4294967295
  4071a4:	6003      	str	r3, [r0, #0]
  4071a6:	e7f8      	b.n	40719a <__ascii_wctomb+0xa>

004071a8 <__register_exitproc>:
  4071a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4071ac:	4d2c      	ldr	r5, [pc, #176]	; (407260 <__register_exitproc+0xb8>)
  4071ae:	4606      	mov	r6, r0
  4071b0:	6828      	ldr	r0, [r5, #0]
  4071b2:	4698      	mov	r8, r3
  4071b4:	460f      	mov	r7, r1
  4071b6:	4691      	mov	r9, r2
  4071b8:	f7fe ff36 	bl	406028 <__retarget_lock_acquire_recursive>
  4071bc:	4b29      	ldr	r3, [pc, #164]	; (407264 <__register_exitproc+0xbc>)
  4071be:	681c      	ldr	r4, [r3, #0]
  4071c0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4071c4:	2b00      	cmp	r3, #0
  4071c6:	d03e      	beq.n	407246 <__register_exitproc+0x9e>
  4071c8:	685a      	ldr	r2, [r3, #4]
  4071ca:	2a1f      	cmp	r2, #31
  4071cc:	dc1c      	bgt.n	407208 <__register_exitproc+0x60>
  4071ce:	f102 0e01 	add.w	lr, r2, #1
  4071d2:	b176      	cbz	r6, 4071f2 <__register_exitproc+0x4a>
  4071d4:	2101      	movs	r1, #1
  4071d6:	eb03 0482 	add.w	r4, r3, r2, lsl #2
  4071da:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
  4071de:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4071e2:	4091      	lsls	r1, r2
  4071e4:	4308      	orrs	r0, r1
  4071e6:	2e02      	cmp	r6, #2
  4071e8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4071ec:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
  4071f0:	d023      	beq.n	40723a <__register_exitproc+0x92>
  4071f2:	3202      	adds	r2, #2
  4071f4:	f8c3 e004 	str.w	lr, [r3, #4]
  4071f8:	6828      	ldr	r0, [r5, #0]
  4071fa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4071fe:	f7fe ff15 	bl	40602c <__retarget_lock_release_recursive>
  407202:	2000      	movs	r0, #0
  407204:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407208:	4b17      	ldr	r3, [pc, #92]	; (407268 <__register_exitproc+0xc0>)
  40720a:	b30b      	cbz	r3, 407250 <__register_exitproc+0xa8>
  40720c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  407210:	f3af 8000 	nop.w
  407214:	4603      	mov	r3, r0
  407216:	b1d8      	cbz	r0, 407250 <__register_exitproc+0xa8>
  407218:	2000      	movs	r0, #0
  40721a:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
  40721e:	f04f 0e01 	mov.w	lr, #1
  407222:	6058      	str	r0, [r3, #4]
  407224:	6019      	str	r1, [r3, #0]
  407226:	4602      	mov	r2, r0
  407228:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40722c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  407230:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
  407234:	2e00      	cmp	r6, #0
  407236:	d0dc      	beq.n	4071f2 <__register_exitproc+0x4a>
  407238:	e7cc      	b.n	4071d4 <__register_exitproc+0x2c>
  40723a:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
  40723e:	4301      	orrs	r1, r0
  407240:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
  407244:	e7d5      	b.n	4071f2 <__register_exitproc+0x4a>
  407246:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40724a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40724e:	e7bb      	b.n	4071c8 <__register_exitproc+0x20>
  407250:	6828      	ldr	r0, [r5, #0]
  407252:	f7fe feeb 	bl	40602c <__retarget_lock_release_recursive>
  407256:	f04f 30ff 	mov.w	r0, #4294967295
  40725a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40725e:	bf00      	nop
  407260:	20000638 	.word	0x20000638
  407264:	0040804c 	.word	0x0040804c
  407268:	00000000 	.word	0x00000000

0040726c <_calloc_r>:
  40726c:	b510      	push	{r4, lr}
  40726e:	fb02 f101 	mul.w	r1, r2, r1
  407272:	f7fe fedd 	bl	406030 <_malloc_r>
  407276:	4604      	mov	r4, r0
  407278:	b1d8      	cbz	r0, 4072b2 <_calloc_r+0x46>
  40727a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40727e:	f022 0203 	bic.w	r2, r2, #3
  407282:	3a04      	subs	r2, #4
  407284:	2a24      	cmp	r2, #36	; 0x24
  407286:	d818      	bhi.n	4072ba <_calloc_r+0x4e>
  407288:	2a13      	cmp	r2, #19
  40728a:	d914      	bls.n	4072b6 <_calloc_r+0x4a>
  40728c:	2300      	movs	r3, #0
  40728e:	2a1b      	cmp	r2, #27
  407290:	6003      	str	r3, [r0, #0]
  407292:	6043      	str	r3, [r0, #4]
  407294:	d916      	bls.n	4072c4 <_calloc_r+0x58>
  407296:	2a24      	cmp	r2, #36	; 0x24
  407298:	6083      	str	r3, [r0, #8]
  40729a:	60c3      	str	r3, [r0, #12]
  40729c:	bf11      	iteee	ne
  40729e:	f100 0210 	addne.w	r2, r0, #16
  4072a2:	6103      	streq	r3, [r0, #16]
  4072a4:	6143      	streq	r3, [r0, #20]
  4072a6:	f100 0218 	addeq.w	r2, r0, #24
  4072aa:	2300      	movs	r3, #0
  4072ac:	6013      	str	r3, [r2, #0]
  4072ae:	6053      	str	r3, [r2, #4]
  4072b0:	6093      	str	r3, [r2, #8]
  4072b2:	4620      	mov	r0, r4
  4072b4:	bd10      	pop	{r4, pc}
  4072b6:	4602      	mov	r2, r0
  4072b8:	e7f7      	b.n	4072aa <_calloc_r+0x3e>
  4072ba:	2100      	movs	r1, #0
  4072bc:	f7fc f9c0 	bl	403640 <memset>
  4072c0:	4620      	mov	r0, r4
  4072c2:	bd10      	pop	{r4, pc}
  4072c4:	f100 0208 	add.w	r2, r0, #8
  4072c8:	e7ef      	b.n	4072aa <_calloc_r+0x3e>
  4072ca:	bf00      	nop

004072cc <__aeabi_drsub>:
  4072cc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4072d0:	e002      	b.n	4072d8 <__adddf3>
  4072d2:	bf00      	nop

004072d4 <__aeabi_dsub>:
  4072d4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004072d8 <__adddf3>:
  4072d8:	b530      	push	{r4, r5, lr}
  4072da:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4072de:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4072e2:	ea94 0f05 	teq	r4, r5
  4072e6:	bf08      	it	eq
  4072e8:	ea90 0f02 	teqeq	r0, r2
  4072ec:	bf1f      	itttt	ne
  4072ee:	ea54 0c00 	orrsne.w	ip, r4, r0
  4072f2:	ea55 0c02 	orrsne.w	ip, r5, r2
  4072f6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4072fa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4072fe:	f000 80e2 	beq.w	4074c6 <__adddf3+0x1ee>
  407302:	ea4f 5454 	mov.w	r4, r4, lsr #21
  407306:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40730a:	bfb8      	it	lt
  40730c:	426d      	neglt	r5, r5
  40730e:	dd0c      	ble.n	40732a <__adddf3+0x52>
  407310:	442c      	add	r4, r5
  407312:	ea80 0202 	eor.w	r2, r0, r2
  407316:	ea81 0303 	eor.w	r3, r1, r3
  40731a:	ea82 0000 	eor.w	r0, r2, r0
  40731e:	ea83 0101 	eor.w	r1, r3, r1
  407322:	ea80 0202 	eor.w	r2, r0, r2
  407326:	ea81 0303 	eor.w	r3, r1, r3
  40732a:	2d36      	cmp	r5, #54	; 0x36
  40732c:	bf88      	it	hi
  40732e:	bd30      	pophi	{r4, r5, pc}
  407330:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407334:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407338:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40733c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407340:	d002      	beq.n	407348 <__adddf3+0x70>
  407342:	4240      	negs	r0, r0
  407344:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407348:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40734c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407350:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407354:	d002      	beq.n	40735c <__adddf3+0x84>
  407356:	4252      	negs	r2, r2
  407358:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40735c:	ea94 0f05 	teq	r4, r5
  407360:	f000 80a7 	beq.w	4074b2 <__adddf3+0x1da>
  407364:	f1a4 0401 	sub.w	r4, r4, #1
  407368:	f1d5 0e20 	rsbs	lr, r5, #32
  40736c:	db0d      	blt.n	40738a <__adddf3+0xb2>
  40736e:	fa02 fc0e 	lsl.w	ip, r2, lr
  407372:	fa22 f205 	lsr.w	r2, r2, r5
  407376:	1880      	adds	r0, r0, r2
  407378:	f141 0100 	adc.w	r1, r1, #0
  40737c:	fa03 f20e 	lsl.w	r2, r3, lr
  407380:	1880      	adds	r0, r0, r2
  407382:	fa43 f305 	asr.w	r3, r3, r5
  407386:	4159      	adcs	r1, r3
  407388:	e00e      	b.n	4073a8 <__adddf3+0xd0>
  40738a:	f1a5 0520 	sub.w	r5, r5, #32
  40738e:	f10e 0e20 	add.w	lr, lr, #32
  407392:	2a01      	cmp	r2, #1
  407394:	fa03 fc0e 	lsl.w	ip, r3, lr
  407398:	bf28      	it	cs
  40739a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40739e:	fa43 f305 	asr.w	r3, r3, r5
  4073a2:	18c0      	adds	r0, r0, r3
  4073a4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4073a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4073ac:	d507      	bpl.n	4073be <__adddf3+0xe6>
  4073ae:	f04f 0e00 	mov.w	lr, #0
  4073b2:	f1dc 0c00 	rsbs	ip, ip, #0
  4073b6:	eb7e 0000 	sbcs.w	r0, lr, r0
  4073ba:	eb6e 0101 	sbc.w	r1, lr, r1
  4073be:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4073c2:	d31b      	bcc.n	4073fc <__adddf3+0x124>
  4073c4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4073c8:	d30c      	bcc.n	4073e4 <__adddf3+0x10c>
  4073ca:	0849      	lsrs	r1, r1, #1
  4073cc:	ea5f 0030 	movs.w	r0, r0, rrx
  4073d0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4073d4:	f104 0401 	add.w	r4, r4, #1
  4073d8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4073dc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4073e0:	f080 809a 	bcs.w	407518 <__adddf3+0x240>
  4073e4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4073e8:	bf08      	it	eq
  4073ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4073ee:	f150 0000 	adcs.w	r0, r0, #0
  4073f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4073f6:	ea41 0105 	orr.w	r1, r1, r5
  4073fa:	bd30      	pop	{r4, r5, pc}
  4073fc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407400:	4140      	adcs	r0, r0
  407402:	eb41 0101 	adc.w	r1, r1, r1
  407406:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40740a:	f1a4 0401 	sub.w	r4, r4, #1
  40740e:	d1e9      	bne.n	4073e4 <__adddf3+0x10c>
  407410:	f091 0f00 	teq	r1, #0
  407414:	bf04      	itt	eq
  407416:	4601      	moveq	r1, r0
  407418:	2000      	moveq	r0, #0
  40741a:	fab1 f381 	clz	r3, r1
  40741e:	bf08      	it	eq
  407420:	3320      	addeq	r3, #32
  407422:	f1a3 030b 	sub.w	r3, r3, #11
  407426:	f1b3 0220 	subs.w	r2, r3, #32
  40742a:	da0c      	bge.n	407446 <__adddf3+0x16e>
  40742c:	320c      	adds	r2, #12
  40742e:	dd08      	ble.n	407442 <__adddf3+0x16a>
  407430:	f102 0c14 	add.w	ip, r2, #20
  407434:	f1c2 020c 	rsb	r2, r2, #12
  407438:	fa01 f00c 	lsl.w	r0, r1, ip
  40743c:	fa21 f102 	lsr.w	r1, r1, r2
  407440:	e00c      	b.n	40745c <__adddf3+0x184>
  407442:	f102 0214 	add.w	r2, r2, #20
  407446:	bfd8      	it	le
  407448:	f1c2 0c20 	rsble	ip, r2, #32
  40744c:	fa01 f102 	lsl.w	r1, r1, r2
  407450:	fa20 fc0c 	lsr.w	ip, r0, ip
  407454:	bfdc      	itt	le
  407456:	ea41 010c 	orrle.w	r1, r1, ip
  40745a:	4090      	lslle	r0, r2
  40745c:	1ae4      	subs	r4, r4, r3
  40745e:	bfa2      	ittt	ge
  407460:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407464:	4329      	orrge	r1, r5
  407466:	bd30      	popge	{r4, r5, pc}
  407468:	ea6f 0404 	mvn.w	r4, r4
  40746c:	3c1f      	subs	r4, #31
  40746e:	da1c      	bge.n	4074aa <__adddf3+0x1d2>
  407470:	340c      	adds	r4, #12
  407472:	dc0e      	bgt.n	407492 <__adddf3+0x1ba>
  407474:	f104 0414 	add.w	r4, r4, #20
  407478:	f1c4 0220 	rsb	r2, r4, #32
  40747c:	fa20 f004 	lsr.w	r0, r0, r4
  407480:	fa01 f302 	lsl.w	r3, r1, r2
  407484:	ea40 0003 	orr.w	r0, r0, r3
  407488:	fa21 f304 	lsr.w	r3, r1, r4
  40748c:	ea45 0103 	orr.w	r1, r5, r3
  407490:	bd30      	pop	{r4, r5, pc}
  407492:	f1c4 040c 	rsb	r4, r4, #12
  407496:	f1c4 0220 	rsb	r2, r4, #32
  40749a:	fa20 f002 	lsr.w	r0, r0, r2
  40749e:	fa01 f304 	lsl.w	r3, r1, r4
  4074a2:	ea40 0003 	orr.w	r0, r0, r3
  4074a6:	4629      	mov	r1, r5
  4074a8:	bd30      	pop	{r4, r5, pc}
  4074aa:	fa21 f004 	lsr.w	r0, r1, r4
  4074ae:	4629      	mov	r1, r5
  4074b0:	bd30      	pop	{r4, r5, pc}
  4074b2:	f094 0f00 	teq	r4, #0
  4074b6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4074ba:	bf06      	itte	eq
  4074bc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4074c0:	3401      	addeq	r4, #1
  4074c2:	3d01      	subne	r5, #1
  4074c4:	e74e      	b.n	407364 <__adddf3+0x8c>
  4074c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4074ca:	bf18      	it	ne
  4074cc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4074d0:	d029      	beq.n	407526 <__adddf3+0x24e>
  4074d2:	ea94 0f05 	teq	r4, r5
  4074d6:	bf08      	it	eq
  4074d8:	ea90 0f02 	teqeq	r0, r2
  4074dc:	d005      	beq.n	4074ea <__adddf3+0x212>
  4074de:	ea54 0c00 	orrs.w	ip, r4, r0
  4074e2:	bf04      	itt	eq
  4074e4:	4619      	moveq	r1, r3
  4074e6:	4610      	moveq	r0, r2
  4074e8:	bd30      	pop	{r4, r5, pc}
  4074ea:	ea91 0f03 	teq	r1, r3
  4074ee:	bf1e      	ittt	ne
  4074f0:	2100      	movne	r1, #0
  4074f2:	2000      	movne	r0, #0
  4074f4:	bd30      	popne	{r4, r5, pc}
  4074f6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4074fa:	d105      	bne.n	407508 <__adddf3+0x230>
  4074fc:	0040      	lsls	r0, r0, #1
  4074fe:	4149      	adcs	r1, r1
  407500:	bf28      	it	cs
  407502:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  407506:	bd30      	pop	{r4, r5, pc}
  407508:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40750c:	bf3c      	itt	cc
  40750e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  407512:	bd30      	popcc	{r4, r5, pc}
  407514:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407518:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40751c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407520:	f04f 0000 	mov.w	r0, #0
  407524:	bd30      	pop	{r4, r5, pc}
  407526:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40752a:	bf1a      	itte	ne
  40752c:	4619      	movne	r1, r3
  40752e:	4610      	movne	r0, r2
  407530:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407534:	bf1c      	itt	ne
  407536:	460b      	movne	r3, r1
  407538:	4602      	movne	r2, r0
  40753a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40753e:	bf06      	itte	eq
  407540:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407544:	ea91 0f03 	teqeq	r1, r3
  407548:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40754c:	bd30      	pop	{r4, r5, pc}
  40754e:	bf00      	nop

00407550 <__aeabi_ui2d>:
  407550:	f090 0f00 	teq	r0, #0
  407554:	bf04      	itt	eq
  407556:	2100      	moveq	r1, #0
  407558:	4770      	bxeq	lr
  40755a:	b530      	push	{r4, r5, lr}
  40755c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407560:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407564:	f04f 0500 	mov.w	r5, #0
  407568:	f04f 0100 	mov.w	r1, #0
  40756c:	e750      	b.n	407410 <__adddf3+0x138>
  40756e:	bf00      	nop

00407570 <__aeabi_i2d>:
  407570:	f090 0f00 	teq	r0, #0
  407574:	bf04      	itt	eq
  407576:	2100      	moveq	r1, #0
  407578:	4770      	bxeq	lr
  40757a:	b530      	push	{r4, r5, lr}
  40757c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407580:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407584:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407588:	bf48      	it	mi
  40758a:	4240      	negmi	r0, r0
  40758c:	f04f 0100 	mov.w	r1, #0
  407590:	e73e      	b.n	407410 <__adddf3+0x138>
  407592:	bf00      	nop

00407594 <__aeabi_f2d>:
  407594:	0042      	lsls	r2, r0, #1
  407596:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40759a:	ea4f 0131 	mov.w	r1, r1, rrx
  40759e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4075a2:	bf1f      	itttt	ne
  4075a4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4075a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4075ac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4075b0:	4770      	bxne	lr
  4075b2:	f092 0f00 	teq	r2, #0
  4075b6:	bf14      	ite	ne
  4075b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4075bc:	4770      	bxeq	lr
  4075be:	b530      	push	{r4, r5, lr}
  4075c0:	f44f 7460 	mov.w	r4, #896	; 0x380
  4075c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4075c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4075cc:	e720      	b.n	407410 <__adddf3+0x138>
  4075ce:	bf00      	nop

004075d0 <__aeabi_ul2d>:
  4075d0:	ea50 0201 	orrs.w	r2, r0, r1
  4075d4:	bf08      	it	eq
  4075d6:	4770      	bxeq	lr
  4075d8:	b530      	push	{r4, r5, lr}
  4075da:	f04f 0500 	mov.w	r5, #0
  4075de:	e00a      	b.n	4075f6 <__aeabi_l2d+0x16>

004075e0 <__aeabi_l2d>:
  4075e0:	ea50 0201 	orrs.w	r2, r0, r1
  4075e4:	bf08      	it	eq
  4075e6:	4770      	bxeq	lr
  4075e8:	b530      	push	{r4, r5, lr}
  4075ea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4075ee:	d502      	bpl.n	4075f6 <__aeabi_l2d+0x16>
  4075f0:	4240      	negs	r0, r0
  4075f2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4075f6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4075fa:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4075fe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  407602:	f43f aedc 	beq.w	4073be <__adddf3+0xe6>
  407606:	f04f 0203 	mov.w	r2, #3
  40760a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40760e:	bf18      	it	ne
  407610:	3203      	addne	r2, #3
  407612:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407616:	bf18      	it	ne
  407618:	3203      	addne	r2, #3
  40761a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40761e:	f1c2 0320 	rsb	r3, r2, #32
  407622:	fa00 fc03 	lsl.w	ip, r0, r3
  407626:	fa20 f002 	lsr.w	r0, r0, r2
  40762a:	fa01 fe03 	lsl.w	lr, r1, r3
  40762e:	ea40 000e 	orr.w	r0, r0, lr
  407632:	fa21 f102 	lsr.w	r1, r1, r2
  407636:	4414      	add	r4, r2
  407638:	e6c1      	b.n	4073be <__adddf3+0xe6>
  40763a:	bf00      	nop

0040763c <__aeabi_dmul>:
  40763c:	b570      	push	{r4, r5, r6, lr}
  40763e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407642:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407646:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40764a:	bf1d      	ittte	ne
  40764c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407650:	ea94 0f0c 	teqne	r4, ip
  407654:	ea95 0f0c 	teqne	r5, ip
  407658:	f000 f8de 	bleq	407818 <__aeabi_dmul+0x1dc>
  40765c:	442c      	add	r4, r5
  40765e:	ea81 0603 	eor.w	r6, r1, r3
  407662:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  407666:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40766a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40766e:	bf18      	it	ne
  407670:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  407674:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407678:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40767c:	d038      	beq.n	4076f0 <__aeabi_dmul+0xb4>
  40767e:	fba0 ce02 	umull	ip, lr, r0, r2
  407682:	f04f 0500 	mov.w	r5, #0
  407686:	fbe1 e502 	umlal	lr, r5, r1, r2
  40768a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40768e:	fbe0 e503 	umlal	lr, r5, r0, r3
  407692:	f04f 0600 	mov.w	r6, #0
  407696:	fbe1 5603 	umlal	r5, r6, r1, r3
  40769a:	f09c 0f00 	teq	ip, #0
  40769e:	bf18      	it	ne
  4076a0:	f04e 0e01 	orrne.w	lr, lr, #1
  4076a4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4076a8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4076ac:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4076b0:	d204      	bcs.n	4076bc <__aeabi_dmul+0x80>
  4076b2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4076b6:	416d      	adcs	r5, r5
  4076b8:	eb46 0606 	adc.w	r6, r6, r6
  4076bc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4076c0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4076c4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4076c8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4076cc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4076d0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4076d4:	bf88      	it	hi
  4076d6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4076da:	d81e      	bhi.n	40771a <__aeabi_dmul+0xde>
  4076dc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4076e0:	bf08      	it	eq
  4076e2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4076e6:	f150 0000 	adcs.w	r0, r0, #0
  4076ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4076ee:	bd70      	pop	{r4, r5, r6, pc}
  4076f0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4076f4:	ea46 0101 	orr.w	r1, r6, r1
  4076f8:	ea40 0002 	orr.w	r0, r0, r2
  4076fc:	ea81 0103 	eor.w	r1, r1, r3
  407700:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  407704:	bfc2      	ittt	gt
  407706:	ebd4 050c 	rsbsgt	r5, r4, ip
  40770a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40770e:	bd70      	popgt	{r4, r5, r6, pc}
  407710:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407714:	f04f 0e00 	mov.w	lr, #0
  407718:	3c01      	subs	r4, #1
  40771a:	f300 80ab 	bgt.w	407874 <__aeabi_dmul+0x238>
  40771e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  407722:	bfde      	ittt	le
  407724:	2000      	movle	r0, #0
  407726:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40772a:	bd70      	pople	{r4, r5, r6, pc}
  40772c:	f1c4 0400 	rsb	r4, r4, #0
  407730:	3c20      	subs	r4, #32
  407732:	da35      	bge.n	4077a0 <__aeabi_dmul+0x164>
  407734:	340c      	adds	r4, #12
  407736:	dc1b      	bgt.n	407770 <__aeabi_dmul+0x134>
  407738:	f104 0414 	add.w	r4, r4, #20
  40773c:	f1c4 0520 	rsb	r5, r4, #32
  407740:	fa00 f305 	lsl.w	r3, r0, r5
  407744:	fa20 f004 	lsr.w	r0, r0, r4
  407748:	fa01 f205 	lsl.w	r2, r1, r5
  40774c:	ea40 0002 	orr.w	r0, r0, r2
  407750:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  407754:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40775c:	fa21 f604 	lsr.w	r6, r1, r4
  407760:	eb42 0106 	adc.w	r1, r2, r6
  407764:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407768:	bf08      	it	eq
  40776a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40776e:	bd70      	pop	{r4, r5, r6, pc}
  407770:	f1c4 040c 	rsb	r4, r4, #12
  407774:	f1c4 0520 	rsb	r5, r4, #32
  407778:	fa00 f304 	lsl.w	r3, r0, r4
  40777c:	fa20 f005 	lsr.w	r0, r0, r5
  407780:	fa01 f204 	lsl.w	r2, r1, r4
  407784:	ea40 0002 	orr.w	r0, r0, r2
  407788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40778c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407790:	f141 0100 	adc.w	r1, r1, #0
  407794:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407798:	bf08      	it	eq
  40779a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40779e:	bd70      	pop	{r4, r5, r6, pc}
  4077a0:	f1c4 0520 	rsb	r5, r4, #32
  4077a4:	fa00 f205 	lsl.w	r2, r0, r5
  4077a8:	ea4e 0e02 	orr.w	lr, lr, r2
  4077ac:	fa20 f304 	lsr.w	r3, r0, r4
  4077b0:	fa01 f205 	lsl.w	r2, r1, r5
  4077b4:	ea43 0302 	orr.w	r3, r3, r2
  4077b8:	fa21 f004 	lsr.w	r0, r1, r4
  4077bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4077c0:	fa21 f204 	lsr.w	r2, r1, r4
  4077c4:	ea20 0002 	bic.w	r0, r0, r2
  4077c8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4077cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4077d0:	bf08      	it	eq
  4077d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4077d6:	bd70      	pop	{r4, r5, r6, pc}
  4077d8:	f094 0f00 	teq	r4, #0
  4077dc:	d10f      	bne.n	4077fe <__aeabi_dmul+0x1c2>
  4077de:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4077e2:	0040      	lsls	r0, r0, #1
  4077e4:	eb41 0101 	adc.w	r1, r1, r1
  4077e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4077ec:	bf08      	it	eq
  4077ee:	3c01      	subeq	r4, #1
  4077f0:	d0f7      	beq.n	4077e2 <__aeabi_dmul+0x1a6>
  4077f2:	ea41 0106 	orr.w	r1, r1, r6
  4077f6:	f095 0f00 	teq	r5, #0
  4077fa:	bf18      	it	ne
  4077fc:	4770      	bxne	lr
  4077fe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  407802:	0052      	lsls	r2, r2, #1
  407804:	eb43 0303 	adc.w	r3, r3, r3
  407808:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40780c:	bf08      	it	eq
  40780e:	3d01      	subeq	r5, #1
  407810:	d0f7      	beq.n	407802 <__aeabi_dmul+0x1c6>
  407812:	ea43 0306 	orr.w	r3, r3, r6
  407816:	4770      	bx	lr
  407818:	ea94 0f0c 	teq	r4, ip
  40781c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407820:	bf18      	it	ne
  407822:	ea95 0f0c 	teqne	r5, ip
  407826:	d00c      	beq.n	407842 <__aeabi_dmul+0x206>
  407828:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40782c:	bf18      	it	ne
  40782e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407832:	d1d1      	bne.n	4077d8 <__aeabi_dmul+0x19c>
  407834:	ea81 0103 	eor.w	r1, r1, r3
  407838:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40783c:	f04f 0000 	mov.w	r0, #0
  407840:	bd70      	pop	{r4, r5, r6, pc}
  407842:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407846:	bf06      	itte	eq
  407848:	4610      	moveq	r0, r2
  40784a:	4619      	moveq	r1, r3
  40784c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407850:	d019      	beq.n	407886 <__aeabi_dmul+0x24a>
  407852:	ea94 0f0c 	teq	r4, ip
  407856:	d102      	bne.n	40785e <__aeabi_dmul+0x222>
  407858:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40785c:	d113      	bne.n	407886 <__aeabi_dmul+0x24a>
  40785e:	ea95 0f0c 	teq	r5, ip
  407862:	d105      	bne.n	407870 <__aeabi_dmul+0x234>
  407864:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407868:	bf1c      	itt	ne
  40786a:	4610      	movne	r0, r2
  40786c:	4619      	movne	r1, r3
  40786e:	d10a      	bne.n	407886 <__aeabi_dmul+0x24a>
  407870:	ea81 0103 	eor.w	r1, r1, r3
  407874:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407878:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40787c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407880:	f04f 0000 	mov.w	r0, #0
  407884:	bd70      	pop	{r4, r5, r6, pc}
  407886:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40788a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40788e:	bd70      	pop	{r4, r5, r6, pc}

00407890 <__aeabi_ddiv>:
  407890:	b570      	push	{r4, r5, r6, lr}
  407892:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407896:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40789a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40789e:	bf1d      	ittte	ne
  4078a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4078a4:	ea94 0f0c 	teqne	r4, ip
  4078a8:	ea95 0f0c 	teqne	r5, ip
  4078ac:	f000 f8a7 	bleq	4079fe <__aeabi_ddiv+0x16e>
  4078b0:	eba4 0405 	sub.w	r4, r4, r5
  4078b4:	ea81 0e03 	eor.w	lr, r1, r3
  4078b8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4078bc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4078c0:	f000 8088 	beq.w	4079d4 <__aeabi_ddiv+0x144>
  4078c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4078c8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4078cc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4078d0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4078d4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4078d8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4078dc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4078e0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4078e4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4078e8:	429d      	cmp	r5, r3
  4078ea:	bf08      	it	eq
  4078ec:	4296      	cmpeq	r6, r2
  4078ee:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4078f2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4078f6:	d202      	bcs.n	4078fe <__aeabi_ddiv+0x6e>
  4078f8:	085b      	lsrs	r3, r3, #1
  4078fa:	ea4f 0232 	mov.w	r2, r2, rrx
  4078fe:	1ab6      	subs	r6, r6, r2
  407900:	eb65 0503 	sbc.w	r5, r5, r3
  407904:	085b      	lsrs	r3, r3, #1
  407906:	ea4f 0232 	mov.w	r2, r2, rrx
  40790a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40790e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  407912:	ebb6 0e02 	subs.w	lr, r6, r2
  407916:	eb75 0e03 	sbcs.w	lr, r5, r3
  40791a:	bf22      	ittt	cs
  40791c:	1ab6      	subcs	r6, r6, r2
  40791e:	4675      	movcs	r5, lr
  407920:	ea40 000c 	orrcs.w	r0, r0, ip
  407924:	085b      	lsrs	r3, r3, #1
  407926:	ea4f 0232 	mov.w	r2, r2, rrx
  40792a:	ebb6 0e02 	subs.w	lr, r6, r2
  40792e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407932:	bf22      	ittt	cs
  407934:	1ab6      	subcs	r6, r6, r2
  407936:	4675      	movcs	r5, lr
  407938:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40793c:	085b      	lsrs	r3, r3, #1
  40793e:	ea4f 0232 	mov.w	r2, r2, rrx
  407942:	ebb6 0e02 	subs.w	lr, r6, r2
  407946:	eb75 0e03 	sbcs.w	lr, r5, r3
  40794a:	bf22      	ittt	cs
  40794c:	1ab6      	subcs	r6, r6, r2
  40794e:	4675      	movcs	r5, lr
  407950:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  407954:	085b      	lsrs	r3, r3, #1
  407956:	ea4f 0232 	mov.w	r2, r2, rrx
  40795a:	ebb6 0e02 	subs.w	lr, r6, r2
  40795e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407962:	bf22      	ittt	cs
  407964:	1ab6      	subcs	r6, r6, r2
  407966:	4675      	movcs	r5, lr
  407968:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40796c:	ea55 0e06 	orrs.w	lr, r5, r6
  407970:	d018      	beq.n	4079a4 <__aeabi_ddiv+0x114>
  407972:	ea4f 1505 	mov.w	r5, r5, lsl #4
  407976:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40797a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40797e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  407982:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  407986:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40798a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40798e:	d1c0      	bne.n	407912 <__aeabi_ddiv+0x82>
  407990:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407994:	d10b      	bne.n	4079ae <__aeabi_ddiv+0x11e>
  407996:	ea41 0100 	orr.w	r1, r1, r0
  40799a:	f04f 0000 	mov.w	r0, #0
  40799e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4079a2:	e7b6      	b.n	407912 <__aeabi_ddiv+0x82>
  4079a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4079a8:	bf04      	itt	eq
  4079aa:	4301      	orreq	r1, r0
  4079ac:	2000      	moveq	r0, #0
  4079ae:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4079b2:	bf88      	it	hi
  4079b4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4079b8:	f63f aeaf 	bhi.w	40771a <__aeabi_dmul+0xde>
  4079bc:	ebb5 0c03 	subs.w	ip, r5, r3
  4079c0:	bf04      	itt	eq
  4079c2:	ebb6 0c02 	subseq.w	ip, r6, r2
  4079c6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4079ca:	f150 0000 	adcs.w	r0, r0, #0
  4079ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4079d2:	bd70      	pop	{r4, r5, r6, pc}
  4079d4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4079d8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4079dc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4079e0:	bfc2      	ittt	gt
  4079e2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4079e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4079ea:	bd70      	popgt	{r4, r5, r6, pc}
  4079ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4079f0:	f04f 0e00 	mov.w	lr, #0
  4079f4:	3c01      	subs	r4, #1
  4079f6:	e690      	b.n	40771a <__aeabi_dmul+0xde>
  4079f8:	ea45 0e06 	orr.w	lr, r5, r6
  4079fc:	e68d      	b.n	40771a <__aeabi_dmul+0xde>
  4079fe:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407a02:	ea94 0f0c 	teq	r4, ip
  407a06:	bf08      	it	eq
  407a08:	ea95 0f0c 	teqeq	r5, ip
  407a0c:	f43f af3b 	beq.w	407886 <__aeabi_dmul+0x24a>
  407a10:	ea94 0f0c 	teq	r4, ip
  407a14:	d10a      	bne.n	407a2c <__aeabi_ddiv+0x19c>
  407a16:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407a1a:	f47f af34 	bne.w	407886 <__aeabi_dmul+0x24a>
  407a1e:	ea95 0f0c 	teq	r5, ip
  407a22:	f47f af25 	bne.w	407870 <__aeabi_dmul+0x234>
  407a26:	4610      	mov	r0, r2
  407a28:	4619      	mov	r1, r3
  407a2a:	e72c      	b.n	407886 <__aeabi_dmul+0x24a>
  407a2c:	ea95 0f0c 	teq	r5, ip
  407a30:	d106      	bne.n	407a40 <__aeabi_ddiv+0x1b0>
  407a32:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407a36:	f43f aefd 	beq.w	407834 <__aeabi_dmul+0x1f8>
  407a3a:	4610      	mov	r0, r2
  407a3c:	4619      	mov	r1, r3
  407a3e:	e722      	b.n	407886 <__aeabi_dmul+0x24a>
  407a40:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407a44:	bf18      	it	ne
  407a46:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407a4a:	f47f aec5 	bne.w	4077d8 <__aeabi_dmul+0x19c>
  407a4e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  407a52:	f47f af0d 	bne.w	407870 <__aeabi_dmul+0x234>
  407a56:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  407a5a:	f47f aeeb 	bne.w	407834 <__aeabi_dmul+0x1f8>
  407a5e:	e712      	b.n	407886 <__aeabi_dmul+0x24a>

00407a60 <__gedf2>:
  407a60:	f04f 3cff 	mov.w	ip, #4294967295
  407a64:	e006      	b.n	407a74 <__cmpdf2+0x4>
  407a66:	bf00      	nop

00407a68 <__ledf2>:
  407a68:	f04f 0c01 	mov.w	ip, #1
  407a6c:	e002      	b.n	407a74 <__cmpdf2+0x4>
  407a6e:	bf00      	nop

00407a70 <__cmpdf2>:
  407a70:	f04f 0c01 	mov.w	ip, #1
  407a74:	f84d cd04 	str.w	ip, [sp, #-4]!
  407a78:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407a7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407a80:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407a84:	bf18      	it	ne
  407a86:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  407a8a:	d01b      	beq.n	407ac4 <__cmpdf2+0x54>
  407a8c:	b001      	add	sp, #4
  407a8e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  407a92:	bf0c      	ite	eq
  407a94:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  407a98:	ea91 0f03 	teqne	r1, r3
  407a9c:	bf02      	ittt	eq
  407a9e:	ea90 0f02 	teqeq	r0, r2
  407aa2:	2000      	moveq	r0, #0
  407aa4:	4770      	bxeq	lr
  407aa6:	f110 0f00 	cmn.w	r0, #0
  407aaa:	ea91 0f03 	teq	r1, r3
  407aae:	bf58      	it	pl
  407ab0:	4299      	cmppl	r1, r3
  407ab2:	bf08      	it	eq
  407ab4:	4290      	cmpeq	r0, r2
  407ab6:	bf2c      	ite	cs
  407ab8:	17d8      	asrcs	r0, r3, #31
  407aba:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  407abe:	f040 0001 	orr.w	r0, r0, #1
  407ac2:	4770      	bx	lr
  407ac4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407acc:	d102      	bne.n	407ad4 <__cmpdf2+0x64>
  407ace:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  407ad2:	d107      	bne.n	407ae4 <__cmpdf2+0x74>
  407ad4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407ad8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407adc:	d1d6      	bne.n	407a8c <__cmpdf2+0x1c>
  407ade:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  407ae2:	d0d3      	beq.n	407a8c <__cmpdf2+0x1c>
  407ae4:	f85d 0b04 	ldr.w	r0, [sp], #4
  407ae8:	4770      	bx	lr
  407aea:	bf00      	nop

00407aec <__aeabi_cdrcmple>:
  407aec:	4684      	mov	ip, r0
  407aee:	4610      	mov	r0, r2
  407af0:	4662      	mov	r2, ip
  407af2:	468c      	mov	ip, r1
  407af4:	4619      	mov	r1, r3
  407af6:	4663      	mov	r3, ip
  407af8:	e000      	b.n	407afc <__aeabi_cdcmpeq>
  407afa:	bf00      	nop

00407afc <__aeabi_cdcmpeq>:
  407afc:	b501      	push	{r0, lr}
  407afe:	f7ff ffb7 	bl	407a70 <__cmpdf2>
  407b02:	2800      	cmp	r0, #0
  407b04:	bf48      	it	mi
  407b06:	f110 0f00 	cmnmi.w	r0, #0
  407b0a:	bd01      	pop	{r0, pc}

00407b0c <__aeabi_dcmpeq>:
  407b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
  407b10:	f7ff fff4 	bl	407afc <__aeabi_cdcmpeq>
  407b14:	bf0c      	ite	eq
  407b16:	2001      	moveq	r0, #1
  407b18:	2000      	movne	r0, #0
  407b1a:	f85d fb08 	ldr.w	pc, [sp], #8
  407b1e:	bf00      	nop

00407b20 <__aeabi_dcmplt>:
  407b20:	f84d ed08 	str.w	lr, [sp, #-8]!
  407b24:	f7ff ffea 	bl	407afc <__aeabi_cdcmpeq>
  407b28:	bf34      	ite	cc
  407b2a:	2001      	movcc	r0, #1
  407b2c:	2000      	movcs	r0, #0
  407b2e:	f85d fb08 	ldr.w	pc, [sp], #8
  407b32:	bf00      	nop

00407b34 <__aeabi_dcmple>:
  407b34:	f84d ed08 	str.w	lr, [sp, #-8]!
  407b38:	f7ff ffe0 	bl	407afc <__aeabi_cdcmpeq>
  407b3c:	bf94      	ite	ls
  407b3e:	2001      	movls	r0, #1
  407b40:	2000      	movhi	r0, #0
  407b42:	f85d fb08 	ldr.w	pc, [sp], #8
  407b46:	bf00      	nop

00407b48 <__aeabi_dcmpge>:
  407b48:	f84d ed08 	str.w	lr, [sp, #-8]!
  407b4c:	f7ff ffce 	bl	407aec <__aeabi_cdrcmple>
  407b50:	bf94      	ite	ls
  407b52:	2001      	movls	r0, #1
  407b54:	2000      	movhi	r0, #0
  407b56:	f85d fb08 	ldr.w	pc, [sp], #8
  407b5a:	bf00      	nop

00407b5c <__aeabi_dcmpgt>:
  407b5c:	f84d ed08 	str.w	lr, [sp, #-8]!
  407b60:	f7ff ffc4 	bl	407aec <__aeabi_cdrcmple>
  407b64:	bf34      	ite	cc
  407b66:	2001      	movcc	r0, #1
  407b68:	2000      	movcs	r0, #0
  407b6a:	f85d fb08 	ldr.w	pc, [sp], #8
  407b6e:	bf00      	nop

00407b70 <__aeabi_dcmpun>:
  407b70:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407b74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407b78:	d102      	bne.n	407b80 <__aeabi_dcmpun+0x10>
  407b7a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  407b7e:	d10a      	bne.n	407b96 <__aeabi_dcmpun+0x26>
  407b80:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407b84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407b88:	d102      	bne.n	407b90 <__aeabi_dcmpun+0x20>
  407b8a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  407b8e:	d102      	bne.n	407b96 <__aeabi_dcmpun+0x26>
  407b90:	f04f 0000 	mov.w	r0, #0
  407b94:	4770      	bx	lr
  407b96:	f04f 0001 	mov.w	r0, #1
  407b9a:	4770      	bx	lr

00407b9c <__aeabi_d2iz>:
  407b9c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  407ba0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  407ba4:	d215      	bcs.n	407bd2 <__aeabi_d2iz+0x36>
  407ba6:	d511      	bpl.n	407bcc <__aeabi_d2iz+0x30>
  407ba8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  407bac:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  407bb0:	d912      	bls.n	407bd8 <__aeabi_d2iz+0x3c>
  407bb2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  407bb6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  407bba:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  407bbe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407bc2:	fa23 f002 	lsr.w	r0, r3, r2
  407bc6:	bf18      	it	ne
  407bc8:	4240      	negne	r0, r0
  407bca:	4770      	bx	lr
  407bcc:	f04f 0000 	mov.w	r0, #0
  407bd0:	4770      	bx	lr
  407bd2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  407bd6:	d105      	bne.n	407be4 <__aeabi_d2iz+0x48>
  407bd8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  407bdc:	bf08      	it	eq
  407bde:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  407be2:	4770      	bx	lr
  407be4:	f04f 0000 	mov.w	r0, #0
  407be8:	4770      	bx	lr
  407bea:	bf00      	nop

00407bec <__aeabi_uldivmod>:
  407bec:	b953      	cbnz	r3, 407c04 <__aeabi_uldivmod+0x18>
  407bee:	b94a      	cbnz	r2, 407c04 <__aeabi_uldivmod+0x18>
  407bf0:	2900      	cmp	r1, #0
  407bf2:	bf08      	it	eq
  407bf4:	2800      	cmpeq	r0, #0
  407bf6:	bf1c      	itt	ne
  407bf8:	f04f 31ff 	movne.w	r1, #4294967295
  407bfc:	f04f 30ff 	movne.w	r0, #4294967295
  407c00:	f000 b97a 	b.w	407ef8 <__aeabi_idiv0>
  407c04:	f1ad 0c08 	sub.w	ip, sp, #8
  407c08:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  407c0c:	f000 f806 	bl	407c1c <__udivmoddi4>
  407c10:	f8dd e004 	ldr.w	lr, [sp, #4]
  407c14:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  407c18:	b004      	add	sp, #16
  407c1a:	4770      	bx	lr

00407c1c <__udivmoddi4>:
  407c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407c20:	468c      	mov	ip, r1
  407c22:	460e      	mov	r6, r1
  407c24:	4604      	mov	r4, r0
  407c26:	9d08      	ldr	r5, [sp, #32]
  407c28:	2b00      	cmp	r3, #0
  407c2a:	d150      	bne.n	407cce <__udivmoddi4+0xb2>
  407c2c:	428a      	cmp	r2, r1
  407c2e:	4617      	mov	r7, r2
  407c30:	d96c      	bls.n	407d0c <__udivmoddi4+0xf0>
  407c32:	fab2 fe82 	clz	lr, r2
  407c36:	f1be 0f00 	cmp.w	lr, #0
  407c3a:	d00b      	beq.n	407c54 <__udivmoddi4+0x38>
  407c3c:	f1ce 0c20 	rsb	ip, lr, #32
  407c40:	fa01 f60e 	lsl.w	r6, r1, lr
  407c44:	fa20 fc0c 	lsr.w	ip, r0, ip
  407c48:	fa02 f70e 	lsl.w	r7, r2, lr
  407c4c:	ea4c 0c06 	orr.w	ip, ip, r6
  407c50:	fa00 f40e 	lsl.w	r4, r0, lr
  407c54:	0c3a      	lsrs	r2, r7, #16
  407c56:	fbbc f9f2 	udiv	r9, ip, r2
  407c5a:	b2bb      	uxth	r3, r7
  407c5c:	fb02 cc19 	mls	ip, r2, r9, ip
  407c60:	fb09 fa03 	mul.w	sl, r9, r3
  407c64:	ea4f 4814 	mov.w	r8, r4, lsr #16
  407c68:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
  407c6c:	45b2      	cmp	sl, r6
  407c6e:	d90a      	bls.n	407c86 <__udivmoddi4+0x6a>
  407c70:	19f6      	adds	r6, r6, r7
  407c72:	f109 31ff 	add.w	r1, r9, #4294967295
  407c76:	f080 8125 	bcs.w	407ec4 <__udivmoddi4+0x2a8>
  407c7a:	45b2      	cmp	sl, r6
  407c7c:	f240 8122 	bls.w	407ec4 <__udivmoddi4+0x2a8>
  407c80:	f1a9 0902 	sub.w	r9, r9, #2
  407c84:	443e      	add	r6, r7
  407c86:	eba6 060a 	sub.w	r6, r6, sl
  407c8a:	fbb6 f0f2 	udiv	r0, r6, r2
  407c8e:	fb02 6610 	mls	r6, r2, r0, r6
  407c92:	fb00 f303 	mul.w	r3, r0, r3
  407c96:	b2a4      	uxth	r4, r4
  407c98:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  407c9c:	42a3      	cmp	r3, r4
  407c9e:	d909      	bls.n	407cb4 <__udivmoddi4+0x98>
  407ca0:	19e4      	adds	r4, r4, r7
  407ca2:	f100 32ff 	add.w	r2, r0, #4294967295
  407ca6:	f080 810b 	bcs.w	407ec0 <__udivmoddi4+0x2a4>
  407caa:	42a3      	cmp	r3, r4
  407cac:	f240 8108 	bls.w	407ec0 <__udivmoddi4+0x2a4>
  407cb0:	3802      	subs	r0, #2
  407cb2:	443c      	add	r4, r7
  407cb4:	2100      	movs	r1, #0
  407cb6:	1ae4      	subs	r4, r4, r3
  407cb8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  407cbc:	2d00      	cmp	r5, #0
  407cbe:	d062      	beq.n	407d86 <__udivmoddi4+0x16a>
  407cc0:	2300      	movs	r3, #0
  407cc2:	fa24 f40e 	lsr.w	r4, r4, lr
  407cc6:	602c      	str	r4, [r5, #0]
  407cc8:	606b      	str	r3, [r5, #4]
  407cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407cce:	428b      	cmp	r3, r1
  407cd0:	d907      	bls.n	407ce2 <__udivmoddi4+0xc6>
  407cd2:	2d00      	cmp	r5, #0
  407cd4:	d055      	beq.n	407d82 <__udivmoddi4+0x166>
  407cd6:	2100      	movs	r1, #0
  407cd8:	e885 0041 	stmia.w	r5, {r0, r6}
  407cdc:	4608      	mov	r0, r1
  407cde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407ce2:	fab3 f183 	clz	r1, r3
  407ce6:	2900      	cmp	r1, #0
  407ce8:	f040 808f 	bne.w	407e0a <__udivmoddi4+0x1ee>
  407cec:	42b3      	cmp	r3, r6
  407cee:	d302      	bcc.n	407cf6 <__udivmoddi4+0xda>
  407cf0:	4282      	cmp	r2, r0
  407cf2:	f200 80fc 	bhi.w	407eee <__udivmoddi4+0x2d2>
  407cf6:	1a84      	subs	r4, r0, r2
  407cf8:	eb66 0603 	sbc.w	r6, r6, r3
  407cfc:	2001      	movs	r0, #1
  407cfe:	46b4      	mov	ip, r6
  407d00:	2d00      	cmp	r5, #0
  407d02:	d040      	beq.n	407d86 <__udivmoddi4+0x16a>
  407d04:	e885 1010 	stmia.w	r5, {r4, ip}
  407d08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407d0c:	b912      	cbnz	r2, 407d14 <__udivmoddi4+0xf8>
  407d0e:	2701      	movs	r7, #1
  407d10:	fbb7 f7f2 	udiv	r7, r7, r2
  407d14:	fab7 fe87 	clz	lr, r7
  407d18:	f1be 0f00 	cmp.w	lr, #0
  407d1c:	d135      	bne.n	407d8a <__udivmoddi4+0x16e>
  407d1e:	2101      	movs	r1, #1
  407d20:	1bf6      	subs	r6, r6, r7
  407d22:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  407d26:	fa1f f887 	uxth.w	r8, r7
  407d2a:	fbb6 f2fc 	udiv	r2, r6, ip
  407d2e:	fb0c 6612 	mls	r6, ip, r2, r6
  407d32:	fb08 f002 	mul.w	r0, r8, r2
  407d36:	0c23      	lsrs	r3, r4, #16
  407d38:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
  407d3c:	42b0      	cmp	r0, r6
  407d3e:	d907      	bls.n	407d50 <__udivmoddi4+0x134>
  407d40:	19f6      	adds	r6, r6, r7
  407d42:	f102 33ff 	add.w	r3, r2, #4294967295
  407d46:	d202      	bcs.n	407d4e <__udivmoddi4+0x132>
  407d48:	42b0      	cmp	r0, r6
  407d4a:	f200 80d2 	bhi.w	407ef2 <__udivmoddi4+0x2d6>
  407d4e:	461a      	mov	r2, r3
  407d50:	1a36      	subs	r6, r6, r0
  407d52:	fbb6 f0fc 	udiv	r0, r6, ip
  407d56:	fb0c 6610 	mls	r6, ip, r0, r6
  407d5a:	fb08 f800 	mul.w	r8, r8, r0
  407d5e:	b2a3      	uxth	r3, r4
  407d60:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
  407d64:	45a0      	cmp	r8, r4
  407d66:	d907      	bls.n	407d78 <__udivmoddi4+0x15c>
  407d68:	19e4      	adds	r4, r4, r7
  407d6a:	f100 33ff 	add.w	r3, r0, #4294967295
  407d6e:	d202      	bcs.n	407d76 <__udivmoddi4+0x15a>
  407d70:	45a0      	cmp	r8, r4
  407d72:	f200 80b9 	bhi.w	407ee8 <__udivmoddi4+0x2cc>
  407d76:	4618      	mov	r0, r3
  407d78:	eba4 0408 	sub.w	r4, r4, r8
  407d7c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  407d80:	e79c      	b.n	407cbc <__udivmoddi4+0xa0>
  407d82:	4629      	mov	r1, r5
  407d84:	4628      	mov	r0, r5
  407d86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407d8a:	fa07 f70e 	lsl.w	r7, r7, lr
  407d8e:	f1ce 0320 	rsb	r3, lr, #32
  407d92:	fa26 f203 	lsr.w	r2, r6, r3
  407d96:	ea4f 4c17 	mov.w	ip, r7, lsr #16
  407d9a:	fbb2 f1fc 	udiv	r1, r2, ip
  407d9e:	fa1f f887 	uxth.w	r8, r7
  407da2:	fb0c 2211 	mls	r2, ip, r1, r2
  407da6:	fa06 f60e 	lsl.w	r6, r6, lr
  407daa:	fa20 f303 	lsr.w	r3, r0, r3
  407dae:	fb01 f908 	mul.w	r9, r1, r8
  407db2:	4333      	orrs	r3, r6
  407db4:	0c1e      	lsrs	r6, r3, #16
  407db6:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  407dba:	45b1      	cmp	r9, r6
  407dbc:	fa00 f40e 	lsl.w	r4, r0, lr
  407dc0:	d909      	bls.n	407dd6 <__udivmoddi4+0x1ba>
  407dc2:	19f6      	adds	r6, r6, r7
  407dc4:	f101 32ff 	add.w	r2, r1, #4294967295
  407dc8:	f080 808c 	bcs.w	407ee4 <__udivmoddi4+0x2c8>
  407dcc:	45b1      	cmp	r9, r6
  407dce:	f240 8089 	bls.w	407ee4 <__udivmoddi4+0x2c8>
  407dd2:	3902      	subs	r1, #2
  407dd4:	443e      	add	r6, r7
  407dd6:	eba6 0609 	sub.w	r6, r6, r9
  407dda:	fbb6 f0fc 	udiv	r0, r6, ip
  407dde:	fb0c 6210 	mls	r2, ip, r0, r6
  407de2:	fb00 f908 	mul.w	r9, r0, r8
  407de6:	b29e      	uxth	r6, r3
  407de8:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
  407dec:	45b1      	cmp	r9, r6
  407dee:	d907      	bls.n	407e00 <__udivmoddi4+0x1e4>
  407df0:	19f6      	adds	r6, r6, r7
  407df2:	f100 33ff 	add.w	r3, r0, #4294967295
  407df6:	d271      	bcs.n	407edc <__udivmoddi4+0x2c0>
  407df8:	45b1      	cmp	r9, r6
  407dfa:	d96f      	bls.n	407edc <__udivmoddi4+0x2c0>
  407dfc:	3802      	subs	r0, #2
  407dfe:	443e      	add	r6, r7
  407e00:	eba6 0609 	sub.w	r6, r6, r9
  407e04:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  407e08:	e78f      	b.n	407d2a <__udivmoddi4+0x10e>
  407e0a:	f1c1 0720 	rsb	r7, r1, #32
  407e0e:	fa22 f807 	lsr.w	r8, r2, r7
  407e12:	408b      	lsls	r3, r1
  407e14:	ea48 0303 	orr.w	r3, r8, r3
  407e18:	fa26 f407 	lsr.w	r4, r6, r7
  407e1c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  407e20:	fbb4 f9fe 	udiv	r9, r4, lr
  407e24:	fa1f fc83 	uxth.w	ip, r3
  407e28:	fb0e 4419 	mls	r4, lr, r9, r4
  407e2c:	408e      	lsls	r6, r1
  407e2e:	fa20 f807 	lsr.w	r8, r0, r7
  407e32:	fb09 fa0c 	mul.w	sl, r9, ip
  407e36:	ea48 0806 	orr.w	r8, r8, r6
  407e3a:	ea4f 4618 	mov.w	r6, r8, lsr #16
  407e3e:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
  407e42:	45a2      	cmp	sl, r4
  407e44:	fa02 f201 	lsl.w	r2, r2, r1
  407e48:	fa00 f601 	lsl.w	r6, r0, r1
  407e4c:	d908      	bls.n	407e60 <__udivmoddi4+0x244>
  407e4e:	18e4      	adds	r4, r4, r3
  407e50:	f109 30ff 	add.w	r0, r9, #4294967295
  407e54:	d244      	bcs.n	407ee0 <__udivmoddi4+0x2c4>
  407e56:	45a2      	cmp	sl, r4
  407e58:	d942      	bls.n	407ee0 <__udivmoddi4+0x2c4>
  407e5a:	f1a9 0902 	sub.w	r9, r9, #2
  407e5e:	441c      	add	r4, r3
  407e60:	eba4 040a 	sub.w	r4, r4, sl
  407e64:	fbb4 f0fe 	udiv	r0, r4, lr
  407e68:	fb0e 4410 	mls	r4, lr, r0, r4
  407e6c:	fb00 fc0c 	mul.w	ip, r0, ip
  407e70:	fa1f f888 	uxth.w	r8, r8
  407e74:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
  407e78:	45a4      	cmp	ip, r4
  407e7a:	d907      	bls.n	407e8c <__udivmoddi4+0x270>
  407e7c:	18e4      	adds	r4, r4, r3
  407e7e:	f100 3eff 	add.w	lr, r0, #4294967295
  407e82:	d229      	bcs.n	407ed8 <__udivmoddi4+0x2bc>
  407e84:	45a4      	cmp	ip, r4
  407e86:	d927      	bls.n	407ed8 <__udivmoddi4+0x2bc>
  407e88:	3802      	subs	r0, #2
  407e8a:	441c      	add	r4, r3
  407e8c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  407e90:	fba0 8902 	umull	r8, r9, r0, r2
  407e94:	eba4 0c0c 	sub.w	ip, r4, ip
  407e98:	45cc      	cmp	ip, r9
  407e9a:	46c2      	mov	sl, r8
  407e9c:	46ce      	mov	lr, r9
  407e9e:	d315      	bcc.n	407ecc <__udivmoddi4+0x2b0>
  407ea0:	d012      	beq.n	407ec8 <__udivmoddi4+0x2ac>
  407ea2:	b155      	cbz	r5, 407eba <__udivmoddi4+0x29e>
  407ea4:	ebb6 030a 	subs.w	r3, r6, sl
  407ea8:	eb6c 060e 	sbc.w	r6, ip, lr
  407eac:	fa06 f707 	lsl.w	r7, r6, r7
  407eb0:	40cb      	lsrs	r3, r1
  407eb2:	431f      	orrs	r7, r3
  407eb4:	40ce      	lsrs	r6, r1
  407eb6:	602f      	str	r7, [r5, #0]
  407eb8:	606e      	str	r6, [r5, #4]
  407eba:	2100      	movs	r1, #0
  407ebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407ec0:	4610      	mov	r0, r2
  407ec2:	e6f7      	b.n	407cb4 <__udivmoddi4+0x98>
  407ec4:	4689      	mov	r9, r1
  407ec6:	e6de      	b.n	407c86 <__udivmoddi4+0x6a>
  407ec8:	4546      	cmp	r6, r8
  407eca:	d2ea      	bcs.n	407ea2 <__udivmoddi4+0x286>
  407ecc:	ebb8 0a02 	subs.w	sl, r8, r2
  407ed0:	eb69 0e03 	sbc.w	lr, r9, r3
  407ed4:	3801      	subs	r0, #1
  407ed6:	e7e4      	b.n	407ea2 <__udivmoddi4+0x286>
  407ed8:	4670      	mov	r0, lr
  407eda:	e7d7      	b.n	407e8c <__udivmoddi4+0x270>
  407edc:	4618      	mov	r0, r3
  407ede:	e78f      	b.n	407e00 <__udivmoddi4+0x1e4>
  407ee0:	4681      	mov	r9, r0
  407ee2:	e7bd      	b.n	407e60 <__udivmoddi4+0x244>
  407ee4:	4611      	mov	r1, r2
  407ee6:	e776      	b.n	407dd6 <__udivmoddi4+0x1ba>
  407ee8:	3802      	subs	r0, #2
  407eea:	443c      	add	r4, r7
  407eec:	e744      	b.n	407d78 <__udivmoddi4+0x15c>
  407eee:	4608      	mov	r0, r1
  407ef0:	e706      	b.n	407d00 <__udivmoddi4+0xe4>
  407ef2:	3a02      	subs	r2, #2
  407ef4:	443e      	add	r6, r7
  407ef6:	e72b      	b.n	407d50 <__udivmoddi4+0x134>

00407ef8 <__aeabi_idiv0>:
  407ef8:	4770      	bx	lr
  407efa:	bf00      	nop
  407efc:	20514144 	.word	0x20514144
  407f00:	6c6c6977 	.word	0x6c6c6977
  407f04:	74746120 	.word	0x74746120
  407f08:	74706d65 	.word	0x74706d65
  407f0c:	206f7420 	.word	0x206f7420
  407f10:	656b6174 	.word	0x656b6174
  407f14:	20752520 	.word	0x20752520
  407f18:	706d6173 	.word	0x706d6173
  407f1c:	2073656c 	.word	0x2073656c
  407f20:	20726570 	.word	0x20726570
  407f24:	6e616863 	.word	0x6e616863
  407f28:	0a6c656e 	.word	0x0a6c656e
  407f2c:	0000000d 	.word	0x0000000d
  407f30:	20434144 	.word	0x20434144
  407f34:	6e616863 	.word	0x6e616863
  407f38:	206c656e 	.word	0x206c656e
  407f3c:	73207525 	.word	0x73207525
  407f40:	74207465 	.word	0x74207465
  407f44:	6425206f 	.word	0x6425206f
  407f48:	0a566d20 	.word	0x0a566d20
  407f4c:	0000000d 	.word	0x0000000d
  407f50:	20514144 	.word	0x20514144
  407f54:	6c6c6977 	.word	0x6c6c6977
  407f58:	6d617320 	.word	0x6d617320
  407f5c:	20656c70 	.word	0x20656c70
  407f60:	206c6c61 	.word	0x206c6c61
  407f64:	62616e65 	.word	0x62616e65
  407f68:	2064656c 	.word	0x2064656c
  407f6c:	6e616863 	.word	0x6e616863
  407f70:	736c656e 	.word	0x736c656e
  407f74:	20752520 	.word	0x20752520
  407f78:	656d6974 	.word	0x656d6974
  407f7c:	000d0a73 	.word	0x000d0a73
  407f80:	706d6153 	.word	0x706d6153
  407f84:	7020656c 	.word	0x7020656c
  407f88:	6f697265 	.word	0x6f697265
  407f8c:	65732064 	.word	0x65732064
  407f90:	6f742074 	.word	0x6f742074
  407f94:	20752520 	.word	0x20752520
  407f98:	0d0a5375 	.word	0x0d0a5375
  407f9c:	00000000 	.word	0x00000000
  407fa0:	75716553 	.word	0x75716553
  407fa4:	65636e65 	.word	0x65636e65
  407fa8:	74657320 	.word	0x74657320
  407fac:	3a6f7420 	.word	0x3a6f7420
  407fb0:	2c752520 	.word	0x2c752520
  407fb4:	2c752520 	.word	0x2c752520
  407fb8:	2c752520 	.word	0x2c752520
  407fbc:	0a752520 	.word	0x0a752520
  407fc0:	0000000d 	.word	0x0000000d
  407fc4:	75716341 	.word	0x75716341
  407fc8:	74697369 	.word	0x74697369
  407fcc:	206e6f69 	.word	0x206e6f69
  407fd0:	72617473 	.word	0x72617473
  407fd4:	20646574 	.word	0x20646574
  407fd8:	41206e69 	.word	0x41206e69
  407fdc:	49494353 	.word	0x49494353
  407fe0:	00000d0a 	.word	0x00000d0a
  407fe4:	75716341 	.word	0x75716341
  407fe8:	74697369 	.word	0x74697369
  407fec:	206e6f69 	.word	0x206e6f69
  407ff0:	72617473 	.word	0x72617473
  407ff4:	20646574 	.word	0x20646574
  407ff8:	62206e69 	.word	0x62206e69
  407ffc:	72616e69 	.word	0x72616e69
  408000:	000d0a79 	.word	0x000d0a79
  408004:	75716341 	.word	0x75716341
  408008:	74697369 	.word	0x74697369
  40800c:	206e6f69 	.word	0x206e6f69
  408010:	706f7473 	.word	0x706f7473
  408014:	0a646570 	.word	0x0a646570
  408018:	0000000d 	.word	0x0000000d
  40801c:	4f525245 	.word	0x4f525245
  408020:	65732052 	.word	0x65732052
  408024:	6e697474 	.word	0x6e697474
  408028:	6f632067 	.word	0x6f632067
  40802c:	6e616d6d 	.word	0x6e616d6d
  408030:	000d0a64 	.word	0x000d0a64
  408034:	6d6d6f43 	.word	0x6d6d6f43
  408038:	20646e61 	.word	0x20646e61
  40803c:	746e7973 	.word	0x746e7973
  408040:	45207861 	.word	0x45207861
  408044:	524f5252 	.word	0x524f5252
  408048:	00000d0a 	.word	0x00000d0a

0040804c <_global_impure_ptr>:
  40804c:	20000210 00464e49 00666e69 004e414e     ... INF.inf.NAN.
  40805c:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  40806c:	46454443 00000000 33323130 37363534     CDEF....01234567
  40807c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  40808c:	0000296c 00000030                       l)..0...

00408094 <blanks.7223>:
  408094:	20202020 20202020 20202020 20202020                     

004080a4 <zeroes.7224>:
  4080a4:	30303030 30303030 30303030 30303030     0000000000000000
  4080b4:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  4080c4:	00000043 49534f50 00000058 0000002e     C...POSIX.......
  4080d4:	00000000                                ....

004080d8 <__mprec_bigtens>:
  4080d8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  4080e8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  4080f8:	7f73bf3c 75154fdd                       <.s..O.u

00408100 <__mprec_tens>:
  408100:	00000000 3ff00000 00000000 40240000     .......?......$@
  408110:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  408120:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  408130:	00000000 412e8480 00000000 416312d0     .......A......cA
  408140:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  408150:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  408160:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  408170:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  408180:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  408190:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  4081a0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  4081b0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  4081c0:	79d99db4 44ea7843                       ...yCx.D

004081c8 <p05.6055>:
  4081c8:	00000005 00000019 0000007d              ........}...

004081d4 <_ctype_>:
  4081d4:	20202000 20202020 28282020 20282828     .         ((((( 
  4081e4:	20202020 20202020 20202020 20202020                     
  4081f4:	10108820 10101010 10101010 10101010      ...............
  408204:	04040410 04040404 10040404 10101010     ................
  408214:	41411010 41414141 01010101 01010101     ..AAAAAA........
  408224:	01010101 01010101 01010101 10101010     ................
  408234:	42421010 42424242 02020202 02020202     ..BBBBBB........
  408244:	02020202 02020202 02020202 10101010     ................
  408254:	00000020 00000000 00000000 00000000      ...............
	...

004082d8 <_init>:
  4082d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4082da:	bf00      	nop
  4082dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4082de:	bc08      	pop	{r3}
  4082e0:	469e      	mov	lr, r3
  4082e2:	4770      	bx	lr

004082e4 <__init_array_start>:
  4082e4:	00404dd9 	.word	0x00404dd9

004082e8 <__frame_dummy_init_array_entry>:
  4082e8:	004000f5                                ..@.

004082ec <_fini>:
  4082ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4082ee:	bf00      	nop
  4082f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4082f2:	bc08      	pop	{r3}
  4082f4:	469e      	mov	lr, r3
  4082f6:	4770      	bx	lr

004082f8 <__fini_array_start>:
  4082f8:	004000d1 	.word	0x004000d1

Disassembly of section .relocate:

20000000 <SystemInit>:
20000000:	f44f 7240 	mov.w	r2, #768	; 0x300
20000004:	4b1f      	ldr	r3, [pc, #124]	; (20000084 <SystemInit+0x84>)
20000006:	601a      	str	r2, [r3, #0]
20000008:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
2000000c:	6a1b      	ldr	r3, [r3, #32]
2000000e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20000012:	d107      	bne.n	20000024 <SystemInit+0x24>
20000014:	4a1c      	ldr	r2, [pc, #112]	; (20000088 <SystemInit+0x88>)
20000016:	4b1d      	ldr	r3, [pc, #116]	; (2000008c <SystemInit+0x8c>)
20000018:	621a      	str	r2, [r3, #32]
2000001a:	461a      	mov	r2, r3
2000001c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000001e:	f013 0f01 	tst.w	r3, #1
20000022:	d0fb      	beq.n	2000001c <SystemInit+0x1c>
20000024:	4a1a      	ldr	r2, [pc, #104]	; (20000090 <SystemInit+0x90>)
20000026:	4b19      	ldr	r3, [pc, #100]	; (2000008c <SystemInit+0x8c>)
20000028:	621a      	str	r2, [r3, #32]
2000002a:	461a      	mov	r2, r3
2000002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000002e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20000032:	d0fb      	beq.n	2000002c <SystemInit+0x2c>
20000034:	4a15      	ldr	r2, [pc, #84]	; (2000008c <SystemInit+0x8c>)
20000036:	6b13      	ldr	r3, [r2, #48]	; 0x30
20000038:	f023 0303 	bic.w	r3, r3, #3
2000003c:	f043 0301 	orr.w	r3, r3, #1
20000040:	6313      	str	r3, [r2, #48]	; 0x30
20000042:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000044:	f013 0f08 	tst.w	r3, #8
20000048:	d0fb      	beq.n	20000042 <SystemInit+0x42>
2000004a:	4a12      	ldr	r2, [pc, #72]	; (20000094 <SystemInit+0x94>)
2000004c:	4b0f      	ldr	r3, [pc, #60]	; (2000008c <SystemInit+0x8c>)
2000004e:	629a      	str	r2, [r3, #40]	; 0x28
20000050:	461a      	mov	r2, r3
20000052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000054:	f013 0f02 	tst.w	r3, #2
20000058:	d0fb      	beq.n	20000052 <SystemInit+0x52>
2000005a:	2211      	movs	r2, #17
2000005c:	4b0b      	ldr	r3, [pc, #44]	; (2000008c <SystemInit+0x8c>)
2000005e:	631a      	str	r2, [r3, #48]	; 0x30
20000060:	461a      	mov	r2, r3
20000062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000064:	f013 0f08 	tst.w	r3, #8
20000068:	d0fb      	beq.n	20000062 <SystemInit+0x62>
2000006a:	2212      	movs	r2, #18
2000006c:	4b07      	ldr	r3, [pc, #28]	; (2000008c <SystemInit+0x8c>)
2000006e:	631a      	str	r2, [r3, #48]	; 0x30
20000070:	461a      	mov	r2, r3
20000072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000074:	f013 0f08 	tst.w	r3, #8
20000078:	d0fb      	beq.n	20000072 <SystemInit+0x72>
2000007a:	4a07      	ldr	r2, [pc, #28]	; (20000098 <SystemInit+0x98>)
2000007c:	4b07      	ldr	r3, [pc, #28]	; (2000009c <SystemInit+0x9c>)
2000007e:	601a      	str	r2, [r3, #0]
20000080:	4770      	bx	lr
20000082:	bf00      	nop
20000084:	400e0a00 	.word	0x400e0a00
20000088:	00370809 	.word	0x00370809
2000008c:	400e0400 	.word	0x400e0400
20000090:	01370809 	.word	0x01370809
20000094:	201f3f03 	.word	0x201f3f03
20000098:	03d09000 	.word	0x03d09000
2000009c:	20000204 	.word	0x20000204

200000a0 <system_init_flash>:
200000a0:	4b0c      	ldr	r3, [pc, #48]	; (200000d4 <system_init_flash+0x34>)
200000a2:	4298      	cmp	r0, r3
200000a4:	d90c      	bls.n	200000c0 <system_init_flash+0x20>
200000a6:	4b0c      	ldr	r3, [pc, #48]	; (200000d8 <system_init_flash+0x38>)
200000a8:	4298      	cmp	r0, r3
200000aa:	d90d      	bls.n	200000c8 <system_init_flash+0x28>
200000ac:	4b0b      	ldr	r3, [pc, #44]	; (200000dc <system_init_flash+0x3c>)
200000ae:	4298      	cmp	r0, r3
200000b0:	bf94      	ite	ls
200000b2:	f44f 7200 	movls.w	r2, #512	; 0x200
200000b6:	f44f 7240 	movhi.w	r2, #768	; 0x300
200000ba:	4b09      	ldr	r3, [pc, #36]	; (200000e0 <system_init_flash+0x40>)
200000bc:	601a      	str	r2, [r3, #0]
200000be:	4770      	bx	lr
200000c0:	2200      	movs	r2, #0
200000c2:	4b07      	ldr	r3, [pc, #28]	; (200000e0 <system_init_flash+0x40>)
200000c4:	601a      	str	r2, [r3, #0]
200000c6:	4770      	bx	lr
200000c8:	f44f 7280 	mov.w	r2, #256	; 0x100
200000cc:	4b04      	ldr	r3, [pc, #16]	; (200000e0 <system_init_flash+0x40>)
200000ce:	601a      	str	r2, [r3, #0]
200000d0:	4770      	bx	lr
200000d2:	bf00      	nop
200000d4:	0103663f 	.word	0x0103663f
200000d8:	01c9c37f 	.word	0x01c9c37f
200000dc:	0337f97f 	.word	0x0337f97f
200000e0:	400e0a00 	.word	0x400e0a00

200000e4 <udi_api_cdc_comm>:
200000e4:	0040013d 00400189 004001bd 004001b9     =.@...@...@...@.
200000f4:	00000000                                ....

200000f8 <udi_api_cdc_data>:
200000f8:	00400505 00400199 004001b5 004001b9     ..@...@...@...@.
20000108:	004003c5                                ..@.

2000010c <udc_string_desc_languageid>:
2000010c:	04090304                                ....

20000110 <comInterface>:
20000110:	00402649 00402659 00402669 00402679     I&@.Y&@.i&@.y&@.
20000120:	00402699 00000000 00000000 00000000     .&@.............
	...

2000018c <udc_config>:
2000018c:	200001e4 20000198 00000000              ... ... ....

20000198 <udc_config_fs>:
20000198:	200001a0 200001f8                       ... ... 

200001a0 <udc_desc_fs>:
200001a0:	00430209 c0000102 00040932 02020100     ..C.....2.......
200001b0:	24050001 04011000 05020224 01000624     ...$....$...$...
200001c0:	03012405 83050701 10004003 00010409     .$.......@......
200001d0:	00000a02 81050700 00004002 02020507     .........@......
200001e0:	00000040                                @...

200001e4 <udc_device_desc>:
200001e4:	02000112 40000002 240403eb 00000100     .......@...$....
200001f4:	00000100                                ....

200001f8 <udi_apis>:
200001f8:	200000e4 200000f8                       ... ... 

20000200 <g_interrupt_enabled>:
20000200:	00000001                                ....

20000204 <SystemCoreClock>:
20000204:	003d0900                                ..=.

20000208 <_impure_ptr>:
20000208:	20000210 00000000                       ... ....

20000210 <impure_data>:
20000210:	00000000 200004fc 20000564 200005cc     ....... d.. ... 
	...
200002b8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200002c8:	0005deec 0000000b 00000000 00000000     ................
	...

20000638 <__atexit_recursive_mutex>:
20000638:	20000eac                                ... 

2000063c <__global_locale>:
2000063c:	00000043 00000000 00000000 00000000     C...............
	...
2000065c:	00000043 00000000 00000000 00000000     C...............
	...
2000067c:	00000043 00000000 00000000 00000000     C...............
	...
2000069c:	00000043 00000000 00000000 00000000     C...............
	...
200006bc:	00000043 00000000 00000000 00000000     C...............
	...
200006dc:	00000043 00000000 00000000 00000000     C...............
	...
200006fc:	00000043 00000000 00000000 00000000     C...............
	...
2000071c:	00407191 00406575 00000000 004081d4     .q@.ue@.......@.
2000072c:	004080d0 00407f9c 00407f9c 00407f9c     ..@...@...@...@.
2000073c:	00407f9c 00407f9c 00407f9c 00407f9c     ..@...@...@...@.
2000074c:	00407f9c 00407f9c ffffffff ffffffff     ..@...@.........
2000075c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000784:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200007a8 <__malloc_av_>:
	...
200007b0:	200007a8 200007a8 200007b0 200007b0     ... ... ... ... 
200007c0:	200007b8 200007b8 200007c0 200007c0     ... ... ... ... 
200007d0:	200007c8 200007c8 200007d0 200007d0     ... ... ... ... 
200007e0:	200007d8 200007d8 200007e0 200007e0     ... ... ... ... 
200007f0:	200007e8 200007e8 200007f0 200007f0     ... ... ... ... 
20000800:	200007f8 200007f8 20000800 20000800     ... ... ... ... 
20000810:	20000808 20000808 20000810 20000810     ... ... ... ... 
20000820:	20000818 20000818 20000820 20000820     ... ...  ..  .. 
20000830:	20000828 20000828 20000830 20000830     (.. (.. 0.. 0.. 
20000840:	20000838 20000838 20000840 20000840     8.. 8.. @.. @.. 
20000850:	20000848 20000848 20000850 20000850     H.. H.. P.. P.. 
20000860:	20000858 20000858 20000860 20000860     X.. X.. `.. `.. 
20000870:	20000868 20000868 20000870 20000870     h.. h.. p.. p.. 
20000880:	20000878 20000878 20000880 20000880     x.. x.. ... ... 
20000890:	20000888 20000888 20000890 20000890     ... ... ... ... 
200008a0:	20000898 20000898 200008a0 200008a0     ... ... ... ... 
200008b0:	200008a8 200008a8 200008b0 200008b0     ... ... ... ... 
200008c0:	200008b8 200008b8 200008c0 200008c0     ... ... ... ... 
200008d0:	200008c8 200008c8 200008d0 200008d0     ... ... ... ... 
200008e0:	200008d8 200008d8 200008e0 200008e0     ... ... ... ... 
200008f0:	200008e8 200008e8 200008f0 200008f0     ... ... ... ... 
20000900:	200008f8 200008f8 20000900 20000900     ... ... ... ... 
20000910:	20000908 20000908 20000910 20000910     ... ... ... ... 
20000920:	20000918 20000918 20000920 20000920     ... ...  ..  .. 
20000930:	20000928 20000928 20000930 20000930     (.. (.. 0.. 0.. 
20000940:	20000938 20000938 20000940 20000940     8.. 8.. @.. @.. 
20000950:	20000948 20000948 20000950 20000950     H.. H.. P.. P.. 
20000960:	20000958 20000958 20000960 20000960     X.. X.. `.. `.. 
20000970:	20000968 20000968 20000970 20000970     h.. h.. p.. p.. 
20000980:	20000978 20000978 20000980 20000980     x.. x.. ... ... 
20000990:	20000988 20000988 20000990 20000990     ... ... ... ... 
200009a0:	20000998 20000998 200009a0 200009a0     ... ... ... ... 
200009b0:	200009a8 200009a8 200009b0 200009b0     ... ... ... ... 
200009c0:	200009b8 200009b8 200009c0 200009c0     ... ... ... ... 
200009d0:	200009c8 200009c8 200009d0 200009d0     ... ... ... ... 
200009e0:	200009d8 200009d8 200009e0 200009e0     ... ... ... ... 
200009f0:	200009e8 200009e8 200009f0 200009f0     ... ... ... ... 
20000a00:	200009f8 200009f8 20000a00 20000a00     ... ... ... ... 
20000a10:	20000a08 20000a08 20000a10 20000a10     ... ... ... ... 
20000a20:	20000a18 20000a18 20000a20 20000a20     ... ...  ..  .. 
20000a30:	20000a28 20000a28 20000a30 20000a30     (.. (.. 0.. 0.. 
20000a40:	20000a38 20000a38 20000a40 20000a40     8.. 8.. @.. @.. 
20000a50:	20000a48 20000a48 20000a50 20000a50     H.. H.. P.. P.. 
20000a60:	20000a58 20000a58 20000a60 20000a60     X.. X.. `.. `.. 
20000a70:	20000a68 20000a68 20000a70 20000a70     h.. h.. p.. p.. 
20000a80:	20000a78 20000a78 20000a80 20000a80     x.. x.. ... ... 
20000a90:	20000a88 20000a88 20000a90 20000a90     ... ... ... ... 
20000aa0:	20000a98 20000a98 20000aa0 20000aa0     ... ... ... ... 
20000ab0:	20000aa8 20000aa8 20000ab0 20000ab0     ... ... ... ... 
20000ac0:	20000ab8 20000ab8 20000ac0 20000ac0     ... ... ... ... 
20000ad0:	20000ac8 20000ac8 20000ad0 20000ad0     ... ... ... ... 
20000ae0:	20000ad8 20000ad8 20000ae0 20000ae0     ... ... ... ... 
20000af0:	20000ae8 20000ae8 20000af0 20000af0     ... ... ... ... 
20000b00:	20000af8 20000af8 20000b00 20000b00     ... ... ... ... 
20000b10:	20000b08 20000b08 20000b10 20000b10     ... ... ... ... 
20000b20:	20000b18 20000b18 20000b20 20000b20     ... ...  ..  .. 
20000b30:	20000b28 20000b28 20000b30 20000b30     (.. (.. 0.. 0.. 
20000b40:	20000b38 20000b38 20000b40 20000b40     8.. 8.. @.. @.. 
20000b50:	20000b48 20000b48 20000b50 20000b50     H.. H.. P.. P.. 
20000b60:	20000b58 20000b58 20000b60 20000b60     X.. X.. `.. `.. 
20000b70:	20000b68 20000b68 20000b70 20000b70     h.. h.. p.. p.. 
20000b80:	20000b78 20000b78 20000b80 20000b80     x.. x.. ... ... 
20000b90:	20000b88 20000b88 20000b90 20000b90     ... ... ... ... 
20000ba0:	20000b98 20000b98 20000ba0 20000ba0     ... ... ... ... 

20000bb0 <__malloc_sbrk_base>:
20000bb0:	ffffffff                                ....

20000bb4 <__malloc_trim_threshold>:
20000bb4:	00020000                                ....
